Script started on 2022-10-03 13:31:20+02:00 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="120" LINES="30"]

  [32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[90m.[39m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[90m.[39m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m
  [32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[90m.[39m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m[32;1mâœ“[39;22m

  [90mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m [90mLaravel[39m  
  [90;42;1m  FIXED  [39;49;22m [90m........................................................................[39m 202 files, 199 style issues fixed  
  [32;1mâœ“[39;22m app/Actions/DeepGeoStat/ConsolidateDataset.php [90mbraces, function_declaration, curly_braces_position, concat_space,[39m  
  [35;1m@@ -[0m[39;1m2[0m[35;1m,[0m[39;1m8 [0m[35;1m+[0m[39;1m2[0m[35;1m,[0m[39;1m8 [0m[35;1m@@[0m
  [35;1m [0m
  [35;1m namespace App\Actions\DeepGeoStat;[0m
  [35;1m [0m
  [32m+use App\Enums\LabelEvidenceTypeEnum;[39m[0m
  [90;3m [0m[35;1muse App\Models\Dataset;[0m
  [31m-use App\Enums\LabelEvidenceTypeEnum;[39m[0m
  [90;3m [0m[35;1muse Illuminate\Support\Facades\Http;[0m
  [35;1m [0m
  [35;1m class [0m[39;1mConsolidateDataset[0m
  [35;1m@@ -[0m[39;1m11[0m[35;1m,[0m[39;1m8 [0m[35;1m+[0m[39;1m11[0m[35;1m,[0m[39;1m8 [0m[35;1m@@[0m
  [35;1m     public static function [0m[39;1mexecute[0m[35;1m([0m[39;1mDataset $dataset[0m[35;1m, [0m[39;1mint $timeout [0m[35;1m= [0m[39;1m30[0m[35;1m)[0m
  [35;1m     {[0m
  [35;1m         [0m[39;1m$team [0m[35;1m= [0m[39;1m$dataset[0m[35;1m->[0m[39;1mteam[0m[35;1m;[0m
  [31m-        $registerEvidenceLabels = $dataset->labelEvidence()->where('type', LabelEvidenceTypeEnum::Register)->get()->pluck('labels')->map(function($evidence) {[39m[0m
  [31m-            return $evidence->map(function($label) {[39m[0m
  [32m+        $registerEvidenceLabels = $dataset->labelEvidence()->where('type', LabelEvidenceTypeEnum::Register)->get()->pluck('labels')->map(function ($evidence) {[39m[0m
  [32m+            return $evidence->map(function ($label) {[39m[0m
  [90;3m                 [0m[35;1mreturn [[0m
  [35;1m                     [0m[37m'grid_id' [0m[35;1m=> [0m[39;1m$label[0m[35;1m[[0m[37m'grid_id'[0m[35;1m],[0m
  [35;1m                     [0m[37m'label_class_id' [0m[35;1m=> [0m[39;1m$label[0m[35;1m[[0m[37m'label_class_id'[0m[35;1m],[0m
  [35;1m@@ -[0m[39;1m20[0m[35;1m,[0m[39;1m8 [0m[35;1m+[0m[39;1m20[0m[35;1m,[0m[39;1m8 [0m[35;1m@@[0m
  [35;1m             });[0m
  [35;1m         })->[0m[39;1mtoArray[0m[35;1m();[0m
  [35;1m [0m
  [31m-        $otherEvidenceLabels = $dataset->labelEvidence()->where('type', '!=', LabelEvidenceTypeEnum::Register)->get()->pluck('labels')->map(function($evidence) {[39m[0m
  [31m-            return $evidence->map(function($label) {[39m[0m
  [32m+        $otherEvidenceLabels = $dataset->labelEvidence()->where('type', '!=', LabelEvidenceTypeEnum::Register)->get()->pluck('labels')->map(function ($evidence) {[39m[0m
  [32m+            return $evidence->map(function ($label) {[39m[0m
  [90;3m                 [0m[35;1mreturn [[0m
  [35;1m                     [0m[37m'grid_id' [0m[35;1m=> [0m[39;1m$label[0m[35;1m[[0m[37m'grid_id'[0m[35;1m],[0m
  [35;1m                     [0m[37m'label_class_id' [0m[35;1m=> [0m[39;1m$label[0m[35;1m[[0m[37m'label_class_id'[0m[35;1m],[0m
  [35;1m@@ -[0m[39;1m39[0m[35;1m,[0m[39;1m7 [0m[35;1m+[0m[39;1m39[0m[35;1m,[0m[39;1m7 [0m[35;1m@@[0m
  [35;1m             ],[0m
  [35;1m         ];[0m
  [35;1m         [0m[39;1mdd[0m[35;1m([0m[39;1mjson_encode[0m[35;1m([0m[39;1m$consolidateData[0m[35;1m));[0m
  [31m-        $request = Http::connectTimeout(5)->timeout($timeout)->post(config('services.api.url') . '/consolidate', $consolidateData);[39m[0m
  [32m+        $request = Http::connectTimeout(5)->timeout($timeout)->post(config('services.api.url').'/consolidate', $consolidateData);[39m[0m
  [90;3m [0m
  [90;3m         [0m[35;1mif ([0m[39;1m$request[0m[35;1m->[0m[39;1msuccessful[0m[35;1m()) {[0m
  [35;1m             return [0m[39;1m$request[0m[35;1m->[0m[39;1mjson[0m[35;1m();[0m
  
  [32;1mâœ“[39;22m app/Actions/Fortify/CreateNewUser.php [90m                                  braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m57 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m57 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Fortify;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Hash;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Contracts\CreatesNewUsers;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreateNewUser implements CreatesNewUsers[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use PasswordValidationRules;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a newly registered user.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  array  $input[0m
  [35;1m[39m[0m
  [31m-     * @return \App\Models\User[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function create(array $input)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Validator::make($input, [[0m
  [35;1m[39m[0m
  [31m-            'name' => ['required', 'string', 'max:255'],[0m
  [35;1m[39m[0m
  [31m-            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],[0m
  [35;1m[39m[0m
  [31m-            'password' => $this->passwordRules(),[0m
  [35;1m[39m[0m
  [31m-            'terms' => Jetstream::hasTermsAndPrivacyPolicyFeature() ? ['required', 'accepted'] : '',[0m
  [35;1m[39m[0m
  [31m-        ])->validate();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return DB::transaction(function () use ($input) {[0m
  [35;1m[39m[0m
  [31m-            return tap(User::create([[0m
  [35;1m[39m[0m
  [31m-                'name' => $input['name'],[0m
  [35;1m[39m[0m
  [31m-                'email' => $input['email'],[0m
  [35;1m[39m[0m
  [31m-                'password' => Hash::make($input['password']),[0m
  [35;1m[39m[0m
  [31m-            ]), function (User $user) {[0m
  [35;1m[39m[0m
  [31m-                // $this->createTeam($user);[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a personal team for the user.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function createTeam(User $user)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user->ownedTeams()->save(Team::forceCreate([[0m
  [35;1m[39m[0m
  [31m-            'user_id' => $user->id,[0m
  [35;1m[39m[0m
  [31m-            'name' => explode(' ', $user->name, 2)[0]."'s Team",[0m
  [35;1m[39m[0m
  [31m-            'personal_team' => true,[0m
  [35;1m[39m[0m
  [31m-        ]));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Fortify;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Illuminate\Support\Facades\Hash;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Laravel\Fortify\Contracts\CreatesNewUsers;[39m[0m
  [32m+use Laravel\Jetstream\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+class CreateNewUser implements CreatesNewUsers[39m[0m
  [32m+{[39m[0m
  [32m+    use PasswordValidationRules;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a newly registered user.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  array  $input[39m[0m
  [32m+     * @return \App\Models\User[39m[0m
  [32m+     */[39m[0m
  [32m+    public function create(array $input)[39m[0m
  [32m+    {[39m[0m
  [32m+        Validator::make($input, [[39m[0m
  [32m+            'name' => ['required', 'string', 'max:255'],[39m[0m
  [32m+            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],[39m[0m
  [32m+            'password' => $this->passwordRules(),[39m[0m
  [32m+            'terms' => Jetstream::hasTermsAndPrivacyPolicyFeature() ? ['required', 'accepted'] : '',[39m[0m
  [32m+        ])->validate();[39m[0m
  [32m+[39m[0m
  [32m+        return DB::transaction(function () use ($input) {[39m[0m
  [32m+            return tap(User::create([[39m[0m
  [32m+                'name' => $input['name'],[39m[0m
  [32m+                'email' => $input['email'],[39m[0m
  [32m+                'password' => Hash::make($input['password']),[39m[0m
  [32m+            ]), function (User $user) {[39m[0m
  [32m+                // $this->createTeam($user);[39m[0m
  [32m+            });[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a personal team for the user.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function createTeam(User $user)[39m[0m
  [32m+    {[39m[0m
  [32m+        $user->ownedTeams()->save(Team::forceCreate([[39m[0m
  [32m+            'user_id' => $user->id,[39m[0m
  [32m+            'name' => explode(' ', $user->name, 2)[0]."'s Team",[39m[0m
  [32m+            'personal_team' => true,[39m[0m
  [32m+        ]));[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Fortify/PasswordValidationRules.php [90m                                               braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m18 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m18 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Fortify;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Rules\Password;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-trait PasswordValidationRules[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the validation rules used to validate passwords.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function passwordRules()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return ['required', 'string', new Password, 'confirmed'];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Fortify;[39m[0m
  [32m+[39m[0m
  [32m+use Laravel\Fortify\Rules\Password;[39m[0m
  [32m+[39m[0m
  [32m+trait PasswordValidationRules[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the validation rules used to validate passwords.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return array[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function passwordRules()[39m[0m
  [32m+    {[39m[0m
  [32m+        return ['required', 'string', new Password, 'confirmed'];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Fortify/ResetUserPassword.php [90m                                                     braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Fortify;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Hash;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Contracts\ResetsUserPasswords;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ResetUserPassword implements ResetsUserPasswords[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use PasswordValidationRules;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Validate and reset the user's forgotten password.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  array  $input[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function reset($user, array $input)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Validator::make($input, [[0m
  [35;1m[39m[0m
  [31m-            'password' => $this->passwordRules(),[0m
  [35;1m[39m[0m
  [31m-        ])->validate();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->forceFill([[0m
  [35;1m[39m[0m
  [31m-            'password' => Hash::make($input['password']),[0m
  [35;1m[39m[0m
  [31m-        ])->save();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Fortify;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\Hash;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Laravel\Fortify\Contracts\ResetsUserPasswords;[39m[0m
  [32m+[39m[0m
  [32m+class ResetUserPassword implements ResetsUserPasswords[39m[0m
  [32m+{[39m[0m
  [32m+    use PasswordValidationRules;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Validate and reset the user's forgotten password.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  array  $input[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function reset($user, array $input)[39m[0m
  [32m+    {[39m[0m
  [32m+        Validator::make($input, [[39m[0m
  [32m+            'password' => $this->passwordRules(),[39m[0m
  [32m+        ])->validate();[39m[0m
  [32m+[39m[0m
  [32m+        $user->forceFill([[39m[0m
  [32m+            'password' => Hash::make($input['password']),[39m[0m
  [32m+        ])->save();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Fortify/UpdateUserPassword.php [90mbraces, curly_braces_position, line_ending, unary_operator_spaces, not_[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Fortify;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Hash;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Contracts\UpdatesUserPasswords;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class UpdateUserPassword implements UpdatesUserPasswords[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use PasswordValidationRules;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Validate and update the user's password.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  array  $input[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function update($user, array $input)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Validator::make($input, [[0m
  [35;1m[39m[0m
  [31m-            'current_password' => ['required', 'string'],[0m
  [35;1m[39m[0m
  [31m-            'password' => $this->passwordRules(),[0m
  [35;1m[39m[0m
  [31m-        ])->after(function ($validator) use ($user, $input) {[0m
  [35;1m[39m[0m
  [31m-            if (! isset($input['current_password']) || ! Hash::check($input['current_password'], $user->password)) {[0m
  [35;1m[39m[0m
  [31m-                $validator->errors()->add('current_password', __('The provided password does not match your current password.'));[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        })->validateWithBag('updatePassword');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->forceFill([[0m
  [35;1m[39m[0m
  [31m-            'password' => Hash::make($input['password']),[0m
  [35;1m[39m[0m
  [31m-        ])->save();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Fortify;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\Hash;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Laravel\Fortify\Contracts\UpdatesUserPasswords;[39m[0m
  [32m+[39m[0m
  [32m+class UpdateUserPassword implements UpdatesUserPasswords[39m[0m
  [32m+{[39m[0m
  [32m+    use PasswordValidationRules;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Validate and update the user's password.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  array  $input[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function update($user, array $input)[39m[0m
  [32m+    {[39m[0m
  [32m+        Validator::make($input, [[39m[0m
  [32m+            'current_password' => ['required', 'string'],[39m[0m
  [32m+            'password' => $this->passwordRules(),[39m[0m
  [32m+        ])->after(function ($validator) use ($user, $input) {[39m[0m
  [32m+            if (! isset($input['current_password']) || ! Hash::check($input['current_password'], $user->password)) {[39m[0m
  [32m+                $validator->errors()->add('current_password', __('The provided password does not match your current password.'));[39m[0m
  [32m+            }[39m[0m
  [32m+        })->validateWithBag('updatePassword');[39m[0m
  [32m+[39m[0m
  [32m+        $user->forceFill([[39m[0m
  [32m+            'password' => Hash::make($input['password']),[39m[0m
  [32m+        ])->save();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Fortify/UpdateUserProfileInformation.php [90m                                          braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m59 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m59 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Fortify;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Auth\MustVerifyEmail;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\Rule;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Contracts\UpdatesUserProfileInformation;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class UpdateUserProfileInformation implements UpdatesUserProfileInformation[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Validate and update the given user's profile information.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  array  $input[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function update($user, array $input)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Validator::make($input, [[0m
  [35;1m[39m[0m
  [31m-            'name' => ['required', 'string', 'max:255'],[0m
  [35;1m[39m[0m
  [31m-            'email' => ['required', 'email', 'max:255', Rule::unique('users')->ignore($user->id)],[0m
  [35;1m[39m[0m
  [31m-            'photo' => ['nullable', 'mimes:jpg,jpeg,png', 'max:1024'],[0m
  [35;1m[39m[0m
  [31m-        ])->validateWithBag('updateProfileInformation');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        if (isset($input['photo'])) {[0m
  [35;1m[39m[0m
  [31m-            $user->updateProfilePhoto($input['photo']);[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        if ($input['email'] !== $user->email &&[0m
  [35;1m[39m[0m
  [31m-            $user instanceof MustVerifyEmail) {[0m
  [35;1m[39m[0m
  [31m-            $this->updateVerifiedUser($user, $input);[0m
  [35;1m[39m[0m
  [31m-        } else {[0m
  [35;1m[39m[0m
  [31m-            $user->forceFill([[0m
  [35;1m[39m[0m
  [31m-                'name' => $input['name'],[0m
  [35;1m[39m[0m
  [31m-                'email' => $input['email'],[0m
  [35;1m[39m[0m
  [31m-            ])->save();[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Update the given verified user's profile information.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  array  $input[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function updateVerifiedUser($user, array $input)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user->forceFill([[0m
  [35;1m[39m[0m
  [31m-            'name' => $input['name'],[0m
  [35;1m[39m[0m
  [31m-            'email' => $input['email'],[0m
  [35;1m[39m[0m
  [31m-            'email_verified_at' => null,[0m
  [35;1m[39m[0m
  [31m-        ])->save();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->sendEmailVerificationNotification();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Fortify;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Contracts\Auth\MustVerifyEmail;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Illuminate\Validation\Rule;[39m[0m
  [32m+use Laravel\Fortify\Contracts\UpdatesUserProfileInformation;[39m[0m
  [32m+[39m[0m
  [32m+class UpdateUserProfileInformation implements UpdatesUserProfileInformation[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Validate and update the given user's profile information.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  array  $input[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function update($user, array $input)[39m[0m
  [32m+    {[39m[0m
  [32m+        Validator::make($input, [[39m[0m
  [32m+            'name' => ['required', 'string', 'max:255'],[39m[0m
  [32m+            'email' => ['required', 'email', 'max:255', Rule::unique('users')->ignore($user->id)],[39m[0m
  [32m+            'photo' => ['nullable', 'mimes:jpg,jpeg,png', 'max:1024'],[39m[0m
  [32m+        ])->validateWithBag('updateProfileInformation');[39m[0m
  [32m+[39m[0m
  [32m+        if (isset($input['photo'])) {[39m[0m
  [32m+            $user->updateProfilePhoto($input['photo']);[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        if ($input['email'] !== $user->email &&[39m[0m
  [32m+            $user instanceof MustVerifyEmail) {[39m[0m
  [32m+            $this->updateVerifiedUser($user, $input);[39m[0m
  [32m+        } else {[39m[0m
  [32m+            $user->forceFill([[39m[0m
  [32m+                'name' => $input['name'],[39m[0m
  [32m+                'email' => $input['email'],[39m[0m
  [32m+            ])->save();[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Update the given verified user's profile information.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  array  $input[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function updateVerifiedUser($user, array $input)[39m[0m
  [32m+    {[39m[0m
  [32m+        $user->forceFill([[39m[0m
  [32m+            'name' => $input['name'],[39m[0m
  [32m+            'email' => $input['email'],[39m[0m
  [32m+            'email_verified_at' => null,[39m[0m
  [32m+        ])->save();[39m[0m
  [32m+[39m[0m
  [32m+        $user->sendEmailVerificationNotification();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Jetstream/AddTeamMember.php [90m                                braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m93 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m93 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Gate;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Contracts\AddsTeamMembers;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Events\AddingTeamMember;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Events\TeamMemberAdded;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Jetstream;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Rules\Role;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class AddTeamMember implements AddsTeamMembers[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Add a new team member to the given team.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  string  $email[0m
  [35;1m[39m[0m
  [31m-     * @param  string|null  $role[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function add($user, $team, string $email, string $role = null)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Gate::forUser($user)->authorize('addTeamMember', $team);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->validate($team, $email, $role);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $newTeamMember = Jetstream::findUserByEmailOrFail($email);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        AddingTeamMember::dispatch($team, $newTeamMember);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $team->users()->attach([0m
  [35;1m[39m[0m
  [31m-            $newTeamMember, ['role' => $role][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        TeamMemberAdded::dispatch($team, $newTeamMember);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Validate the add member operation.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  string  $email[0m
  [35;1m[39m[0m
  [31m-     * @param  string|null  $role[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function validate($team, string $email, ?string $role)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Validator::make([[0m
  [35;1m[39m[0m
  [31m-            'email' => $email,[0m
  [35;1m[39m[0m
  [31m-            'role' => $role,[0m
  [35;1m[39m[0m
  [31m-        ], $this->rules(), [[0m
  [35;1m[39m[0m
  [31m-            'email.exists' => __('We were unable to find a registered user with this email address.'),[0m
  [35;1m[39m[0m
  [31m-        ])->after([0m
  [35;1m[39m[0m
  [31m-            $this->ensureUserIsNotAlreadyOnTeam($team, $email)[0m
  [35;1m[39m[0m
  [31m-        )->validateWithBag('addTeamMember');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the validation rules for adding a team member.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function rules()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return array_filter([[0m
  [35;1m[39m[0m
  [31m-            'email' => ['required', 'email', 'exists:users'],[0m
  [35;1m[39m[0m
  [31m-            'role' => Jetstream::hasRoles()[0m
  [35;1m[39m[0m
  [31m-                            ? ['required', 'string', new Role][0m
  [35;1m[39m[0m
  [31m-                            : null,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Ensure that the user is not already on the team.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  string  $email[0m
  [35;1m[39m[0m
  [31m-     * @return \Closure[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function ensureUserIsNotAlreadyOnTeam($team, string $email)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return function ($validator) use ($team, $email) {[0m
  [35;1m[39m[0m
  [31m-            $validator->errors()->addIf([0m
  [35;1m[39m[0m
  [31m-                $team->hasUserWithEmail($email),[0m
  [35;1m[39m[0m
  [31m-                'email',[0m
  [35;1m[39m[0m
  [31m-                __('This user already belongs to the team.')[0m
  [35;1m[39m[0m
  [31m-            );[0m
  [35;1m[39m[0m
  [31m-        };[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\Gate;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Laravel\Jetstream\Contracts\AddsTeamMembers;[39m[0m
  [32m+use Laravel\Jetstream\Events\AddingTeamMember;[39m[0m
  [32m+use Laravel\Jetstream\Events\TeamMemberAdded;[39m[0m
  [32m+use Laravel\Jetstream\Jetstream;[39m[0m
  [32m+use Laravel\Jetstream\Rules\Role;[39m[0m
  [32m+[39m[0m
  [32m+class AddTeamMember implements AddsTeamMembers[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Add a new team member to the given team.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  string  $email[39m[0m
  [32m+     * @param  string|null  $role[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function add($user, $team, string $email, string $role = null)[39m[0m
  [32m+    {[39m[0m
  [32m+        Gate::forUser($user)->authorize('addTeamMember', $team);[39m[0m
  [32m+[39m[0m
  [32m+        $this->validate($team, $email, $role);[39m[0m
  [32m+[39m[0m
  [32m+        $newTeamMember = Jetstream::findUserByEmailOrFail($email);[39m[0m
  [32m+[39m[0m
  [32m+        AddingTeamMember::dispatch($team, $newTeamMember);[39m[0m
  [32m+[39m[0m
  [32m+        $team->users()->attach([39m[0m
  [32m+            $newTeamMember, ['role' => $role][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        TeamMemberAdded::dispatch($team, $newTeamMember);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Validate the add member operation.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  string  $email[39m[0m
  [32m+     * @param  string|null  $role[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function validate($team, string $email, ?string $role)[39m[0m
  [32m+    {[39m[0m
  [32m+        Validator::make([[39m[0m
  [32m+            'email' => $email,[39m[0m
  [32m+            'role' => $role,[39m[0m
  [32m+        ], $this->rules(), [[39m[0m
  [32m+            'email.exists' => __('We were unable to find a registered user with this email address.'),[39m[0m
  [32m+        ])->after([39m[0m
  [32m+            $this->ensureUserIsNotAlreadyOnTeam($team, $email)[39m[0m
  [32m+        )->validateWithBag('addTeamMember');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the validation rules for adding a team member.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return array[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function rules()[39m[0m
  [32m+    {[39m[0m
  [32m+        return array_filter([[39m[0m
  [32m+            'email' => ['required', 'email', 'exists:users'],[39m[0m
  [32m+            'role' => Jetstream::hasRoles()[39m[0m
  [32m+                            ? ['required', 'string', new Role][39m[0m
  [32m+                            : null,[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Ensure that the user is not already on the team.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  string  $email[39m[0m
  [32m+     * @return \Closure[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function ensureUserIsNotAlreadyOnTeam($team, string $email)[39m[0m
  [32m+    {[39m[0m
  [32m+        return function ($validator) use ($team, $email) {[39m[0m
  [32m+            $validator->errors()->addIf([39m[0m
  [32m+                $team->hasUserWithEmail($email),[39m[0m
  [32m+                'email',[39m[0m
  [32m+                __('This user already belongs to the team.')[39m[0m
  [32m+            );[39m[0m
  [32m+        };[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Jetstream/CreateTeam.php [90m                                   braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m67 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m67 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\TeamDetectionTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Gate;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\Rules\Enum;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Contracts\CreatesTeams;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Events\AddingTeam;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreateTeam implements CreatesTeams[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Validate and create a new team for the given user.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  array  $input[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function create($user, array $input)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Gate::forUser($user)->authorize('create', Jetstream::newTeamModel());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Validator::make($input, [[0m
  [35;1m[39m[0m
  [31m-            'name' => ['required', 'string', 'max:255'],[0m
  [35;1m[39m[0m
  [31m-            'description' => ['nullable', 'string'],[0m
  [35;1m[39m[0m
  [31m-            'label_classes' => ['required', 'array', 'min:1'],[0m
  [35;1m[39m[0m
  [31m-            'label_classes.*.name' => ['required', 'distinct:ignore_case', 'string', 'max:255'],[0m
  [35;1m[39m[0m
  [31m-            'label_classes.*.color' => ['required', 'distinct', 'string', 'max:7', 'regex:/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/'],[0m
  [35;1m[39m[0m
  [31m-            'default_label_class' => ['nullable', 'numeric'],[0m
  [35;1m[39m[0m
  [31m-            'detection_type' => ['required', new Enum(TeamDetectionTypeEnum::class)],[0m
  [35;1m[39m[0m
  [31m-        ])->validateWithBag('createTeam');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return DB::transaction(function () use ($user, $input) {[0m
  [35;1m[39m[0m
  [31m-            AddingTeam::dispatch($user);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $user->switchTeam($team = $user->ownedTeams()->create([[0m
  [35;1m[39m[0m
  [31m-                'name' => $input['name'],[0m
  [35;1m[39m[0m
  [31m-                'description' => $input['description'],[0m
  [35;1m[39m[0m
  [31m-                'detection_type' => $input['detection_type'],[0m
  [35;1m[39m[0m
  [31m-            ]));[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $label_classes = [];[0m
  [35;1m[39m[0m
  [31m-            foreach ($input['label_classes'] as $label_class) {[0m
  [35;1m[39m[0m
  [31m-                $label_classes[] = [[0m
  [35;1m[39m[0m
  [31m-                    'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                    'name' => $label_class['name'],[0m
  [35;1m[39m[0m
  [31m-                    'identifier' => Str::snake($label_class['name']),[0m
  [35;1m[39m[0m
  [31m-                    'color' => $label_class['color'],[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $label_classes = $team->labelClasses()->createMany($label_classes);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            if ($input['default_label_class'] !== null) {[0m
  [35;1m[39m[0m
  [31m-                $team->default_label_class_id = $label_classes[$input['default_label_class']]->id;[0m
  [35;1m[39m[0m
  [31m-                $team->save();[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return $team;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\TeamDetectionTypeEnum;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Illuminate\Support\Facades\Gate;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Illuminate\Support\Str;[39m[0m
  [32m+use Illuminate\Validation\Rules\Enum;[39m[0m
  [32m+use Laravel\Jetstream\Contracts\CreatesTeams;[39m[0m
  [32m+use Laravel\Jetstream\Events\AddingTeam;[39m[0m
  [32m+use Laravel\Jetstream\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+class CreateTeam implements CreatesTeams[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Validate and create a new team for the given user.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  array  $input[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function create($user, array $input)[39m[0m
  [32m+    {[39m[0m
  [32m+        Gate::forUser($user)->authorize('create', Jetstream::newTeamModel());[39m[0m
  [32m+[39m[0m
  [32m+        Validator::make($input, [[39m[0m
  [32m+            'name' => ['required', 'string', 'max:255'],[39m[0m
  [32m+            'description' => ['nullable', 'string'],[39m[0m
  [32m+            'label_classes' => ['required', 'array', 'min:1'],[39m[0m
  [32m+            'label_classes.*.name' => ['required', 'distinct:ignore_case', 'string', 'max:255'],[39m[0m
  [32m+            'label_classes.*.color' => ['required', 'distinct', 'string', 'max:7', 'regex:/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/'],[39m[0m
  [32m+            'default_label_class' => ['nullable', 'numeric'],[39m[0m
  [32m+            'detection_type' => ['required', new Enum(TeamDetectionTypeEnum::class)],[39m[0m
  [32m+        ])->validateWithBag('createTeam');[39m[0m
  [32m+[39m[0m
  [32m+        return DB::transaction(function () use ($user, $input) {[39m[0m
  [32m+            AddingTeam::dispatch($user);[39m[0m
  [32m+[39m[0m
  [32m+            $user->switchTeam($team = $user->ownedTeams()->create([[39m[0m
  [32m+                'name' => $input['name'],[39m[0m
  [32m+                'description' => $input['description'],[39m[0m
  [32m+                'detection_type' => $input['detection_type'],[39m[0m
  [32m+            ]));[39m[0m
  [32m+[39m[0m
  [32m+            $label_classes = [];[39m[0m
  [32m+            foreach ($input['label_classes'] as $label_class) {[39m[0m
  [32m+                $label_classes[] = [[39m[0m
  [32m+                    'user_id' => auth()->id(),[39m[0m
  [32m+                    'name' => $label_class['name'],[39m[0m
  [32m+                    'identifier' => Str::snake($label_class['name']),[39m[0m
  [32m+                    'color' => $label_class['color'],[39m[0m
  [32m+                ];[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            $label_classes = $team->labelClasses()->createMany($label_classes);[39m[0m
  [32m+[39m[0m
  [32m+            if ($input['default_label_class'] !== null) {[39m[0m
  [32m+                $team->default_label_class_id = $label_classes[$input['default_label_class']]->id;[39m[0m
  [32m+                $team->save();[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            return $team;[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Jetstream/DeleteTeam.php [90m                                                          braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Contracts\DeletesTeams;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DeleteTeam implements DeletesTeams[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Delete the given team.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function delete($team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $team->purge();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+use Laravel\Jetstream\Contracts\DeletesTeams;[39m[0m
  [32m+[39m[0m
  [32m+class DeleteTeam implements DeletesTeams[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Delete the given team.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function delete($team)[39m[0m
  [32m+    {[39m[0m
  [32m+        $team->purge();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Jetstream/DeleteUser.php [90m                                   braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m59 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m59 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Contracts\DeletesTeams;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Contracts\DeletesUsers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DeleteUser implements DeletesUsers[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The team deleter implementation.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var \Laravel\Jetstream\Contracts\DeletesTeams[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $deletesTeams;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new action instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Laravel\Jetstream\Contracts\DeletesTeams  $deletesTeams[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct(DeletesTeams $deletesTeams)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->deletesTeams = $deletesTeams;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Delete the given user.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function delete($user)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        DB::transaction(function () use ($user) {[0m
  [35;1m[39m[0m
  [31m-            $this->deleteTeams($user);[0m
  [35;1m[39m[0m
  [31m-            $user->deleteProfilePhoto();[0m
  [35;1m[39m[0m
  [31m-            $user->tokens->each->delete();[0m
  [35;1m[39m[0m
  [31m-            $user->delete();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Delete the teams and team associations attached to the user.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function deleteTeams($user)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user->teams()->detach();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->ownedTeams->each(function ($team) {[0m
  [35;1m[39m[0m
  [31m-            $this->deletesTeams->delete($team);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Laravel\Jetstream\Contracts\DeletesTeams;[39m[0m
  [32m+use Laravel\Jetstream\Contracts\DeletesUsers;[39m[0m
  [32m+[39m[0m
  [32m+class DeleteUser implements DeletesUsers[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The team deleter implementation.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var \Laravel\Jetstream\Contracts\DeletesTeams[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $deletesTeams;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new action instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Laravel\Jetstream\Contracts\DeletesTeams  $deletesTeams[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct(DeletesTeams $deletesTeams)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->deletesTeams = $deletesTeams;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Delete the given user.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function delete($user)[39m[0m
  [32m+    {[39m[0m
  [32m+        DB::transaction(function () use ($user) {[39m[0m
  [32m+            $this->deleteTeams($user);[39m[0m
  [32m+            $user->deleteProfilePhoto();[39m[0m
  [32m+            $user->tokens->each->delete();[39m[0m
  [32m+            $user->delete();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Delete the teams and team associations attached to the user.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function deleteTeams($user)[39m[0m
  [32m+    {[39m[0m
  [32m+        $user->teams()->detach();[39m[0m
  [32m+[39m[0m
  [32m+        $user->ownedTeams->each(function ($team) {[39m[0m
  [32m+            $this->deletesTeams->delete($team);[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Jetstream/InviteTeamMember.php [90m                             braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m97 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m97 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Gate;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Mail;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\Rule;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Contracts\InvitesTeamMembers;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Events\InvitingTeamMember;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Jetstream;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Mail\TeamInvitation;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Rules\Role;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class InviteTeamMember implements InvitesTeamMembers[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Invite a new team member to the given team.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  string  $email[0m
  [35;1m[39m[0m
  [31m-     * @param  string|null  $role[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function invite($user, $team, string $email, string $role = null)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Gate::forUser($user)->authorize('addTeamMember', $team);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->validate($team, $email, $role);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        InvitingTeamMember::dispatch($team, $email, $role);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $invitation = $team->teamInvitations()->create([[0m
  [35;1m[39m[0m
  [31m-            'email' => $email,[0m
  [35;1m[39m[0m
  [31m-            'role' => $role,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Mail::to($email)->send(new TeamInvitation($invitation));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Validate the invite member operation.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  string  $email[0m
  [35;1m[39m[0m
  [31m-     * @param  string|null  $role[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function validate($team, string $email, ?string $role)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Validator::make([[0m
  [35;1m[39m[0m
  [31m-            'email' => $email,[0m
  [35;1m[39m[0m
  [31m-            'role' => $role,[0m
  [35;1m[39m[0m
  [31m-        ], $this->rules($team), [[0m
  [35;1m[39m[0m
  [31m-            'email.unique' => __('This user has already been invited to the team.'),[0m
  [35;1m[39m[0m
  [31m-        ])->after([0m
  [35;1m[39m[0m
  [31m-            $this->ensureUserIsNotAlreadyOnTeam($team, $email)[0m
  [35;1m[39m[0m
  [31m-        )->validateWithBag('addTeamMember');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the validation rules for inviting a team member.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @return array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function rules($team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return array_filter([[0m
  [35;1m[39m[0m
  [31m-            'email' => ['required', 'email', Rule::unique('team_invitations')->where(function ($query) use ($team) {[0m
  [35;1m[39m[0m
  [31m-                $query->where('team_id', $team->id);[0m
  [35;1m[39m[0m
  [31m-            })],[0m
  [35;1m[39m[0m
  [31m-            'role' => Jetstream::hasRoles()[0m
  [35;1m[39m[0m
  [31m-                            ? ['required', 'string', new Role][0m
  [35;1m[39m[0m
  [31m-                            : null,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Ensure that the user is not already on the team.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  string  $email[0m
  [35;1m[39m[0m
  [31m-     * @return \Closure[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function ensureUserIsNotAlreadyOnTeam($team, string $email)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return function ($validator) use ($team, $email) {[0m
  [35;1m[39m[0m
  [31m-            $validator->errors()->addIf([0m
  [35;1m[39m[0m
  [31m-                $team->hasUserWithEmail($email),[0m
  [35;1m[39m[0m
  [31m-                'email',[0m
  [35;1m[39m[0m
  [31m-                __('This user already belongs to the team.')[0m
  [35;1m[39m[0m
  [31m-            );[0m
  [35;1m[39m[0m
  [31m-        };[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\Gate;[39m[0m
  [32m+use Illuminate\Support\Facades\Mail;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Illuminate\Validation\Rule;[39m[0m
  [32m+use Laravel\Jetstream\Contracts\InvitesTeamMembers;[39m[0m
  [32m+use Laravel\Jetstream\Events\InvitingTeamMember;[39m[0m
  [32m+use Laravel\Jetstream\Jetstream;[39m[0m
  [32m+use Laravel\Jetstream\Mail\TeamInvitation;[39m[0m
  [32m+use Laravel\Jetstream\Rules\Role;[39m[0m
  [32m+[39m[0m
  [32m+class InviteTeamMember implements InvitesTeamMembers[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Invite a new team member to the given team.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  string  $email[39m[0m
  [32m+     * @param  string|null  $role[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function invite($user, $team, string $email, string $role = null)[39m[0m
  [32m+    {[39m[0m
  [32m+        Gate::forUser($user)->authorize('addTeamMember', $team);[39m[0m
  [32m+[39m[0m
  [32m+        $this->validate($team, $email, $role);[39m[0m
  [32m+[39m[0m
  [32m+        InvitingTeamMember::dispatch($team, $email, $role);[39m[0m
  [32m+[39m[0m
  [32m+        $invitation = $team->teamInvitations()->create([[39m[0m
  [32m+            'email' => $email,[39m[0m
  [32m+            'role' => $role,[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        Mail::to($email)->send(new TeamInvitation($invitation));[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Validate the invite member operation.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  string  $email[39m[0m
  [32m+     * @param  string|null  $role[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function validate($team, string $email, ?string $role)[39m[0m
  [32m+    {[39m[0m
  [32m+        Validator::make([[39m[0m
  [32m+            'email' => $email,[39m[0m
  [32m+            'role' => $role,[39m[0m
  [32m+        ], $this->rules($team), [[39m[0m
  [32m+            'email.unique' => __('This user has already been invited to the team.'),[39m[0m
  [32m+        ])->after([39m[0m
  [32m+            $this->ensureUserIsNotAlreadyOnTeam($team, $email)[39m[0m
  [32m+        )->validateWithBag('addTeamMember');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the validation rules for inviting a team member.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @return array[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function rules($team)[39m[0m
  [32m+    {[39m[0m
  [32m+        return array_filter([[39m[0m
  [32m+            'email' => ['required', 'email', Rule::unique('team_invitations')->where(function ($query) use ($team) {[39m[0m
  [32m+                $query->where('team_id', $team->id);[39m[0m
  [32m+            })],[39m[0m
  [32m+            'role' => Jetstream::hasRoles()[39m[0m
  [32m+                            ? ['required', 'string', new Role][39m[0m
  [32m+                            : null,[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Ensure that the user is not already on the team.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  string  $email[39m[0m
  [32m+     * @return \Closure[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function ensureUserIsNotAlreadyOnTeam($team, string $email)[39m[0m
  [32m+    {[39m[0m
  [32m+        return function ($validator) use ($team, $email) {[39m[0m
  [32m+            $validator->errors()->addIf([39m[0m
  [32m+                $team->hasUserWithEmail($email),[39m[0m
  [32m+                'email',[39m[0m
  [32m+                __('This user already belongs to the team.')[39m[0m
  [32m+            );[39m[0m
  [32m+        };[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Jetstream/RemoveTeamMember.php [90mbraces, line_ending, unary_operator_spaces, not_operator_with_successor[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m63 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m63 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Auth\Access\AuthorizationException;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Gate;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\ValidationException;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Contracts\RemovesTeamMembers;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Events\TeamMemberRemoved;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class RemoveTeamMember implements RemovesTeamMembers[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Remove the team member from the given team.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $teamMember[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function remove($user, $team, $teamMember)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->authorize($user, $team, $teamMember);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->ensureUserDoesNotOwnTeam($teamMember, $team);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $team->removeUser($teamMember);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        TeamMemberRemoved::dispatch($team, $teamMember);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Authorize that the user can remove the team member.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $teamMember[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function authorize($user, $team, $teamMember)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Gate::forUser($user)->check('removeTeamMember', $team) &&[0m
  [35;1m[39m[0m
  [31m-            $user->id !== $teamMember->id) {[0m
  [35;1m[39m[0m
  [31m-            throw new AuthorizationException;[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Ensure that the currently authenticated user does not own the team.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $teamMember[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function ensureUserDoesNotOwnTeam($teamMember, $team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if ($teamMember->id === $team->owner->id) {[0m
  [35;1m[39m[0m
  [31m-            throw ValidationException::withMessages([[0m
  [35;1m[39m[0m
  [31m-                'team' => [__('You may not leave a team that you created.')],[0m
  [35;1m[39m[0m
  [31m-            ])->errorBag('removeTeamMember');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Auth\Access\AuthorizationException;[39m[0m
  [32m+use Illuminate\Support\Facades\Gate;[39m[0m
  [32m+use Illuminate\Validation\ValidationException;[39m[0m
  [32m+use Laravel\Jetstream\Contracts\RemovesTeamMembers;[39m[0m
  [32m+use Laravel\Jetstream\Events\TeamMemberRemoved;[39m[0m
  [32m+[39m[0m
  [32m+class RemoveTeamMember implements RemovesTeamMembers[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Remove the team member from the given team.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  mixed  $teamMember[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function remove($user, $team, $teamMember)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->authorize($user, $team, $teamMember);[39m[0m
  [32m+[39m[0m
  [32m+        $this->ensureUserDoesNotOwnTeam($teamMember, $team);[39m[0m
  [32m+[39m[0m
  [32m+        $team->removeUser($teamMember);[39m[0m
  [32m+[39m[0m
  [32m+        TeamMemberRemoved::dispatch($team, $teamMember);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Authorize that the user can remove the team member.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  mixed  $teamMember[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function authorize($user, $team, $teamMember)[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Gate::forUser($user)->check('removeTeamMember', $team) &&[39m[0m
  [32m+            $user->id !== $teamMember->id) {[39m[0m
  [32m+            throw new AuthorizationException;[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Ensure that the currently authenticated user does not own the team.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $teamMember[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function ensureUserDoesNotOwnTeam($teamMember, $team)[39m[0m
  [32m+    {[39m[0m
  [32m+        if ($teamMember->id === $team->owner->id) {[39m[0m
  [32m+            throw ValidationException::withMessages([[39m[0m
  [32m+                'team' => [__('You may not leave a team that you created.')],[39m[0m
  [32m+            ])->errorBag('removeTeamMember');[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Actions/Jetstream/UpdateTeamName.php [90m                               braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m64 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m64 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Actions\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Gate;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Contracts\UpdatesTeamNames;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class UpdateTeamName implements UpdatesTeamNames[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Validate and update the given team's name.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $team[0m
  [35;1m[39m[0m
  [31m-     * @param  array  $input[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function update($user, $team, array $input)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Gate::forUser($user)->authorize('update', $team);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Validator::make($input, [[0m
  [35;1m[39m[0m
  [31m-            'name' => ['required', 'string', 'max:255'],[0m
  [35;1m[39m[0m
  [31m-            'description' => ['nullable', 'string'],[0m
  [35;1m[39m[0m
  [31m-            'label_classes' => ['required', 'array', 'min:1'],[0m
  [35;1m[39m[0m
  [31m-            'label_classes.*.id' => ['nullable', 'numeric'],[0m
  [35;1m[39m[0m
  [31m-            'label_classes.*.name' => ['required', 'distinct:ignore_case', 'string', 'max:255'],[0m
  [35;1m[39m[0m
  [31m-            'label_classes.*.color' => ['required', 'distinct', 'string', 'max:7', 'regex:/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/'],[0m
  [35;1m[39m[0m
  [31m-            'default_label_class' => ['nullable', 'numeric'],[0m
  [35;1m[39m[0m
  [31m-        ])->validateWithBag('updateTeamName');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        DB::transaction(function () use ($user, $team, $input) {[0m
  [35;1m[39m[0m
  [31m-            $team->forceFill([[0m
  [35;1m[39m[0m
  [31m-                'name' => $input['name'],[0m
  [35;1m[39m[0m
  [31m-                'description' => $input['description'],[0m
  [35;1m[39m[0m
  [31m-            ])->save();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $label_classes_ids = [];[0m
  [35;1m[39m[0m
  [31m-            foreach ($input['label_classes'] as $label_class) {[0m
  [35;1m[39m[0m
  [31m-                $label_class = $team->labelClasses()->updateOrCreate([0m
  [35;1m[39m[0m
  [31m-                    [[0m
  [35;1m[39m[0m
  [31m-                        'id' => $label_class['id'],[0m
  [35;1m[39m[0m
  [31m-                    ],[0m
  [35;1m[39m[0m
  [31m-                    [[0m
  [35;1m[39m[0m
  [31m-                        'user_id' => $user->id,[0m
  [35;1m[39m[0m
  [31m-                        'name' => $label_class['name'],[0m
  [35;1m[39m[0m
  [31m-                        'identifier' => Str::snake($label_class['name']),[0m
  [35;1m[39m[0m
  [31m-                        'color' => $label_class['color'],[0m
  [35;1m[39m[0m
  [31m-                    ][0m
  [35;1m[39m[0m
  [31m-                );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                $label_classes_ids[] = $label_class->id;[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $team->labelClasses->whereNotIn('id', $label_classes_ids)->each->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $team->default_label_class_id = ($input['default_label_class'] !== null) ? $label_classes_ids[$input['default_label_class']] : null;[0m
  [35;1m[39m[0m
  [31m-            $team->save();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Actions\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Illuminate\Support\Facades\Gate;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Illuminate\Support\Str;[39m[0m
  [32m+use Laravel\Jetstream\Contracts\UpdatesTeamNames;[39m[0m
  [32m+[39m[0m
  [32m+class UpdateTeamName implements UpdatesTeamNames[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Validate and update the given team's name.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  mixed  $user[39m[0m
  [32m+     * @param  mixed  $team[39m[0m
  [32m+     * @param  array  $input[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function update($user, $team, array $input)[39m[0m
  [32m+    {[39m[0m
  [32m+        Gate::forUser($user)->authorize('update', $team);[39m[0m
  [32m+[39m[0m
  [32m+        Validator::make($input, [[39m[0m
  [32m+            'name' => ['required', 'string', 'max:255'],[39m[0m
  [32m+            'description' => ['nullable', 'string'],[39m[0m
  [32m+            'label_classes' => ['required', 'array', 'min:1'],[39m[0m
  [32m+            'label_classes.*.id' => ['nullable', 'numeric'],[39m[0m
  [32m+            'label_classes.*.name' => ['required', 'distinct:ignore_case', 'string', 'max:255'],[39m[0m
  [32m+            'label_classes.*.color' => ['required', 'distinct', 'string', 'max:7', 'regex:/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/'],[39m[0m
  [32m+            'default_label_class' => ['nullable', 'numeric'],[39m[0m
  [32m+        ])->validateWithBag('updateTeamName');[39m[0m
  [32m+[39m[0m
  [32m+        DB::transaction(function () use ($user, $team, $input) {[39m[0m
  [32m+            $team->forceFill([[39m[0m
  [32m+                'name' => $input['name'],[39m[0m
  [32m+                'description' => $input['description'],[39m[0m
  [32m+            ])->save();[39m[0m
  [32m+[39m[0m
  [32m+            $label_classes_ids = [];[39m[0m
  [32m+            foreach ($input['label_classes'] as $label_class) {[39m[0m
  [32m+                $label_class = $team->labelClasses()->updateOrCreate([39m[0m
  [32m+                    [[39m[0m
  [32m+                        'id' => $label_class['id'],[39m[0m
  [32m+                    ],[39m[0m
  [32m+                    [[39m[0m
  [32m+                        'user_id' => $user->id,[39m[0m
  [32m+                        'name' => $label_class['name'],[39m[0m
  [32m+                        'identifier' => Str::snake($label_class['name']),[39m[0m
  [32m+                        'color' => $label_class['color'],[39m[0m
  [32m+                    ][39m[0m
  [32m+                );[39m[0m
  [32m+[39m[0m
  [32m+                $label_classes_ids[] = $label_class->id;[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            $team->labelClasses->whereNotIn('id', $label_classes_ids)->each->delete();[39m[0m
  [32m+[39m[0m
  [32m+            $team->default_label_class_id = ($input['default_label_class'] !== null) ? $label_classes_ids[$input['default_label_class']] : null;[39m[0m
  [32m+            $team->save();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Enums/DatasetImageTypeEnum.php [90m                                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m9 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m9 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Enums;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-enum DatasetImageTypeEnum: string[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    case RGB = 'rgb';[0m
  [35;1m[39m[0m
  [31m-    case IR = 'ir';[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Enums;[39m[0m
  [32m+[39m[0m
  [32m+enum DatasetImageTypeEnum: string[39m[0m
  [32m+{[39m[0m
  [32m+    case RGB = 'rgb';[39m[0m
  [32m+    case IR = 'ir';[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Enums/ExperimentModelTypeEnum.php [90m                                                         braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m10 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m10 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Enums;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-enum ExperimentModelTypeEnum: string[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    case ResNet50 = 'resnet50';[0m
  [35;1m[39m[0m
  [31m-    case VGG16 = 'vgg16';[0m
  [35;1m[39m[0m
  [31m-    case InceptionV3 = 'inceptionv3';[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Enums;[39m[0m
  [32m+[39m[0m
  [32m+enum ExperimentModelTypeEnum: string[39m[0m
  [32m+{[39m[0m
  [32m+    case ResNet50 = 'resnet50';[39m[0m
  [32m+    case VGG16 = 'vgg16';[39m[0m
  [32m+    case InceptionV3 = 'inceptionv3';[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Enums/ExperimentStatusEnum.php [90m                                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m12 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m12 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Enums;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-enum ExperimentStatusEnum: int[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    case Idle = 0;[0m
  [35;1m[39m[0m
  [31m-    case Training = 1;[0m
  [35;1m[39m[0m
  [31m-    case Finished = 2;[0m
  [35;1m[39m[0m
  [31m-    case Stopped = 3;[0m
  [35;1m[39m[0m
  [31m-    case Error = 4;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Enums;[39m[0m
  [32m+[39m[0m
  [32m+enum ExperimentStatusEnum: int[39m[0m
  [32m+{[39m[0m
  [32m+    case Idle = 0;[39m[0m
  [32m+    case Training = 1;[39m[0m
  [32m+    case Finished = 2;[39m[0m
  [32m+    case Stopped = 3;[39m[0m
  [32m+    case Error = 4;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Enums/GridCellTypeEnum.php [90m                                                                braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m9 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m9 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Enums;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-enum GridCellTypeEnum: int[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    case Grid100x100 = 100;[0m
  [35;1m[39m[0m
  [31m-    case Grid500x500 = 500;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Enums;[39m[0m
  [32m+[39m[0m
  [32m+enum GridCellTypeEnum: int[39m[0m
  [32m+{[39m[0m
  [32m+    case Grid100x100 = 100;[39m[0m
  [32m+    case Grid500x500 = 500;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Enums/LabelEvidenceTypeEnum.php [90m                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m9 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m9 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Enums;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-enum LabelEvidenceTypeEnum: int[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    case AnnotationCampaign = 0;[0m
  [35;1m[39m[0m
  [31m-    case Register = 1;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Enums;[39m[0m
  [32m+[39m[0m
  [32m+enum LabelEvidenceTypeEnum: int[39m[0m
  [32m+{[39m[0m
  [32m+    case AnnotationCampaign = 0;[39m[0m
  [32m+    case Register = 1;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Enums/RegionTypeEnum.php [90m                                                                  braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m11 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m11 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Enums;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-enum RegionTypeEnum: string[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    case Provincie = 'provincie';[0m
  [35;1m[39m[0m
  [31m-    case Gemeente = 'gemeente';[0m
  [35;1m[39m[0m
  [31m-    case Wijk = 'wijk';[0m
  [35;1m[39m[0m
  [31m-    case Buurt = 'buurt';[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Enums;[39m[0m
  [32m+[39m[0m
  [32m+enum RegionTypeEnum: string[39m[0m
  [32m+{[39m[0m
  [32m+    case Provincie = 'provincie';[39m[0m
  [32m+    case Gemeente = 'gemeente';[39m[0m
  [32m+    case Wijk = 'wijk';[39m[0m
  [32m+    case Buurt = 'buurt';[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Enums/SubsetTypeEnum.php [90m                                                                  braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m10 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m10 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Enums;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-enum SubsetTypeEnum: int[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    case RandomSample = 0;[0m
  [35;1m[39m[0m
  [31m-    case File = 1;[0m
  [35;1m[39m[0m
  [31m-    case Regions = 2;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Enums;[39m[0m
  [32m+[39m[0m
  [32m+enum SubsetTypeEnum: int[39m[0m
  [32m+{[39m[0m
  [32m+    case RandomSample = 0;[39m[0m
  [32m+    case File = 1;[39m[0m
  [32m+    case Regions = 2;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Enums/TeamDetectionTypeEnum.php [90m                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m9 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m9 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Enums;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-enum TeamDetectionTypeEnum: int[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    case Classification = 1;[0m
  [35;1m[39m[0m
  [31m-    case ChangeDetection = 2;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Enums;[39m[0m
  [32m+[39m[0m
  [32m+enum TeamDetectionTypeEnum: int[39m[0m
  [32m+{[39m[0m
  [32m+    case Classification = 1;[39m[0m
  [32m+    case ChangeDetection = 2;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Events/DatasetCreated.php [90m                                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m40 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m40 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Events;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\InteractsWithSockets;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\PrivateChannel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Broadcasting\ShouldBroadcast;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Events\Dispatchable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetCreated implements ShouldBroadcast[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use Dispatchable, InteractsWithSockets, SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $dataset;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new event instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct(Dataset $dataset)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->dataset = $dataset;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the channels the event should broadcast on.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Broadcasting\Channel|array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function broadcastOn()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            new PrivateChannel('User.'.$this->dataset->user_id),[0m
  [35;1m[39m[0m
  [31m-            new PrivateChannel('Team.'.$this->dataset->team_id),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Events;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use Illuminate\Broadcasting\InteractsWithSockets;[39m[0m
  [32m+use Illuminate\Broadcasting\PrivateChannel;[39m[0m
  [32m+use Illuminate\Contracts\Broadcasting\ShouldBroadcast;[39m[0m
  [32m+use Illuminate\Foundation\Events\Dispatchable;[39m[0m
  [32m+use Illuminate\Queue\SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetCreated implements ShouldBroadcast[39m[0m
  [32m+{[39m[0m
  [32m+    use Dispatchable, InteractsWithSockets, SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+    public $dataset;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new event instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct(Dataset $dataset)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->dataset = $dataset;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the channels the event should broadcast on.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return \Illuminate\Broadcasting\Channel|array[39m[0m
  [32m+     */[39m[0m
  [32m+    public function broadcastOn()[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            new PrivateChannel('User.'.$this->dataset->user_id),[39m[0m
  [32m+            new PrivateChannel('Team.'.$this->dataset->team_id),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Events/DatasetDeleted.php [90m                                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m39 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m39 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Events;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\InteractsWithSockets;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\PrivateChannel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Broadcasting\ShouldBroadcast;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Events\Dispatchable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetDeleted implements ShouldBroadcast[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use Dispatchable, InteractsWithSockets, SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $team;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new event instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct(Dataset $dataset)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->team = $dataset->team;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the channels the event should broadcast on.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Broadcasting\Channel|array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function broadcastOn()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            new PrivateChannel('Team.'.$this->team->id),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Events;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use Illuminate\Broadcasting\InteractsWithSockets;[39m[0m
  [32m+use Illuminate\Broadcasting\PrivateChannel;[39m[0m
  [32m+use Illuminate\Contracts\Broadcasting\ShouldBroadcast;[39m[0m
  [32m+use Illuminate\Foundation\Events\Dispatchable;[39m[0m
  [32m+use Illuminate\Queue\SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetDeleted implements ShouldBroadcast[39m[0m
  [32m+{[39m[0m
  [32m+    use Dispatchable, InteractsWithSockets, SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+    public $team;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new event instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct(Dataset $dataset)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->team = $dataset->team;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the channels the event should broadcast on.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return \Illuminate\Broadcasting\Channel|array[39m[0m
  [32m+     */[39m[0m
  [32m+    public function broadcastOn()[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            new PrivateChannel('Team.'.$this->team->id),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Events/LabelEvidenceCreated.php [90m                                        braces, line_ending, no_unused_imports[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m42 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m40 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Events;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\LabelEvidence;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\Channel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\InteractsWithSockets;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\PresenceChannel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\PrivateChannel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Broadcasting\ShouldBroadcast;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Events\Dispatchable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelEvidenceCreated implements ShouldBroadcast[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use Dispatchable, InteractsWithSockets, SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $labelEvidence;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new event instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct(LabelEvidence $labelEvidence)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->labelEvidence = $labelEvidence;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the channels the event should broadcast on.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Broadcasting\Channel|array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function broadcastOn()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            new PrivateChannel('User.'.$this->labelEvidence->user_id),[0m
  [35;1m[39m[0m
  [31m-            new PrivateChannel('Team.'.$this->labelEvidence->team_id),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Events;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\LabelEvidence;[39m[0m
  [32m+use Illuminate\Broadcasting\InteractsWithSockets;[39m[0m
  [32m+use Illuminate\Broadcasting\PrivateChannel;[39m[0m
  [32m+use Illuminate\Contracts\Broadcasting\ShouldBroadcast;[39m[0m
  [32m+use Illuminate\Foundation\Events\Dispatchable;[39m[0m
  [32m+use Illuminate\Queue\SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+class LabelEvidenceCreated implements ShouldBroadcast[39m[0m
  [32m+{[39m[0m
  [32m+    use Dispatchable, InteractsWithSockets, SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+    public $labelEvidence;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new event instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct(LabelEvidence $labelEvidence)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->labelEvidence = $labelEvidence;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the channels the event should broadcast on.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return \Illuminate\Broadcasting\Channel|array[39m[0m
  [32m+     */[39m[0m
  [32m+    public function broadcastOn()[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            new PrivateChannel('User.'.$this->labelEvidence->user_id),[39m[0m
  [32m+            new PrivateChannel('Team.'.$this->labelEvidence->team_id),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Events/LabelEvidenceDeleted.php [90m                                        braces, line_ending, no_unused_imports[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m41 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m39 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Events;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\LabelEvidence;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\Channel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\InteractsWithSockets;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\PresenceChannel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Broadcasting\PrivateChannel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Broadcasting\ShouldBroadcast;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Events\Dispatchable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelEvidenceDeleted implements ShouldBroadcast[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use Dispatchable, InteractsWithSockets, SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $team;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new event instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct(LabelEvidence $labelEvidence)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->team = $labelEvidence->team;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the channels the event should broadcast on.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Broadcasting\Channel|array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function broadcastOn()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            new PrivateChannel('Team.'.$this->team->id),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Events;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\LabelEvidence;[39m[0m
  [32m+use Illuminate\Broadcasting\InteractsWithSockets;[39m[0m
  [32m+use Illuminate\Broadcasting\PrivateChannel;[39m[0m
  [32m+use Illuminate\Contracts\Broadcasting\ShouldBroadcast;[39m[0m
  [32m+use Illuminate\Foundation\Events\Dispatchable;[39m[0m
  [32m+use Illuminate\Queue\SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+class LabelEvidenceDeleted implements ShouldBroadcast[39m[0m
  [32m+{[39m[0m
  [32m+    use Dispatchable, InteractsWithSockets, SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+    public $team;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new event instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct(LabelEvidence $labelEvidence)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->team = $labelEvidence->team;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the channels the event should broadcast on.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return \Illuminate\Broadcasting\Channel|array[39m[0m
  [32m+     */[39m[0m
  [32m+    public function broadcastOn()[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            new PrivateChannel('Team.'.$this->team->id),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Exceptions/Handler.php [90m                                             braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m41 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m41 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Exceptions;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;[0m
  [35;1m[39m[0m
  [31m-use Throwable;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Handler extends ExceptionHandler[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * A list of the exception types that are not reported.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array<int, class-string[39m[31m<Throwable>[39m[31m>[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $dontReport = [[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * A list of the inputs that are never flashed for validation exceptions.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[39m[31m<int, string>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $dontFlash = [[0m
  [35;1m[39m[0m
  [31m-        'current_password',[0m
  [35;1m[39m[0m
  [31m-        'password',[0m
  [35;1m[39m[0m
  [31m-        'password_confirmation',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Register the exception handling callbacks for the application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function register()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->reportable(function (Throwable $e) {[0m
  [35;1m[39m[0m
  [31m-            //[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Exceptions;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;[39m[0m
  [32m+use Throwable;[39m[0m
  [32m+[39m[0m
  [32m+class Handler extends ExceptionHandler[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * A list of the exception types that are not reported.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array<int, class-string[39m[32m<Throwable>[39m[32m>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $dontReport = [[39m[0m
  [32m+        //[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * A list of the inputs that are never flashed for validation exceptions.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[32m<int, string>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $dontFlash = [[39m[0m
  [32m+        'current_password',[39m[0m
  [32m+        'password',[39m[0m
  [32m+        'password_confirmation',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Register the exception handling callbacks for the application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function register()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->reportable(function (Throwable $e) {[39m[0m
  [32m+            //[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/AnnotationCampaignController.php [90m                  braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m58 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m58 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\AnnotationCampaignResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\GridCellResource;[0m
  [35;1m[39m[0m
  [31m-use App\Models\AnnotationCampaign;[0m
  [35;1m[39m[0m
  [31m-use App\Rules\DatasetsCompatible;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class AnnotationCampaignController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function show(Request $request, AnnotationCampaign $annotationCampaign)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $annotationCampaign = $annotationCampaign->load(['team', 'team.defaultLabelClass', 'team.labelClasses', 'datasets']);[0m
  [35;1m[39m[0m
  [31m-        $pagination = ($annotationCampaign->datasets->count() === 1) ? 9 : 10;[0m
  [35;1m[39m[0m
  [31m-        $grid_cells = $annotationCampaign->datasets[0]->gridCells()->paginate($pagination);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Data/Annotations/Show', [[0m
  [35;1m[39m[0m
  [31m-            'annotation_campaign' => AnnotationCampaignResource::make($annotationCampaign),[0m
  [35;1m[39m[0m
  [31m-            'grid_cells' => GridCellResource::collection($grid_cells),[0m
  [35;1m[39m[0m
  [31m-            'label_evidence' => $annotationCampaign->labelEvidence()->whereIn('grid_cell_id', collect($grid_cells->items())->pluck('id'))->get(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $request->validateWithBag('createAnnotationCampaign', [[0m
  [35;1m[39m[0m
  [31m-            'datasets' => ['required', 'array', 'min:1', 'max:2', new DatasetsCompatible],[0m
  [35;1m[39m[0m
  [31m-            'datasets.*' => ['integer', 'exists:App\Models\Dataset,id'],[0m
  [35;1m[39m[0m
  [31m-            'title' => ['required'],[0m
  [35;1m[39m[0m
  [31m-            'description' => ['nullable'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $annotation = DB::transaction(function () use ($request) {[0m
  [35;1m[39m[0m
  [31m-            $annotation = auth()->user()->currentTeam->annotationCampaigns()->create([[0m
  [35;1m[39m[0m
  [31m-                'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                'title' => $request->title,[0m
  [35;1m[39m[0m
  [31m-                'description' => $request->description,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $annotation->datasets()->attach($request->datasets);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return $annotation;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('data.annotations.show', $annotation);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function destroy(Request $request, AnnotationCampaign $annotationCampaign)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $annotationCampaign->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return back();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Http\Resources\AnnotationCampaignResource;[39m[0m
  [32m+use App\Http\Resources\GridCellResource;[39m[0m
  [32m+use App\Models\AnnotationCampaign;[39m[0m
  [32m+use App\Rules\DatasetsCompatible;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class AnnotationCampaignController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function show(Request $request, AnnotationCampaign $annotationCampaign)[39m[0m
  [32m+    {[39m[0m
  [32m+        $annotationCampaign = $annotationCampaign->load(['team', 'team.defaultLabelClass', 'team.labelClasses', 'datasets']);[39m[0m
  [32m+        $pagination = ($annotationCampaign->datasets->count() === 1) ? 9 : 10;[39m[0m
  [32m+        $grid_cells = $annotationCampaign->datasets[0]->gridCells()->paginate($pagination);[39m[0m
  [32m+[39m[0m
  [32m+        return Inertia::render('Data/Annotations/Show', [[39m[0m
  [32m+            'annotation_campaign' => AnnotationCampaignResource::make($annotationCampaign),[39m[0m
  [32m+            'grid_cells' => GridCellResource::collection($grid_cells),[39m[0m
  [32m+            'label_evidence' => $annotationCampaign->labelEvidence()->whereIn('grid_cell_id', collect($grid_cells->items())->pluck('id'))->get(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function store(Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        $request->validateWithBag('createAnnotationCampaign', [[39m[0m
  [32m+            'datasets' => ['required', 'array', 'min:1', 'max:2', new DatasetsCompatible],[39m[0m
  [32m+            'datasets.*' => ['integer', 'exists:App\Models\Dataset,id'],[39m[0m
  [32m+            'title' => ['required'],[39m[0m
  [32m+            'description' => ['nullable'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $annotation = DB::transaction(function () use ($request) {[39m[0m
  [32m+            $annotation = auth()->user()->currentTeam->annotationCampaigns()->create([[39m[0m
  [32m+                'user_id' => auth()->id(),[39m[0m
  [32m+                'title' => $request->title,[39m[0m
  [32m+                'description' => $request->description,[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $annotation->datasets()->attach($request->datasets);[39m[0m
  [32m+[39m[0m
  [32m+            return $annotation;[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('data.annotations.show', $annotation);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function destroy(Request $request, AnnotationCampaign $annotationCampaign)[39m[0m
  [32m+    {[39m[0m
  [32m+        $annotationCampaign->delete();[39m[0m
  [32m+[39m[0m
  [32m+        return back();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/AnnotationCampaignGridCellController.php [90m          braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m45 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m45 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\AnnotationCampaign;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class AnnotationCampaignGridCellController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request, AnnotationCampaign $annotationCampaign)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $input = $request->validateWithBag('setLabelToGridCell', [[0m
  [35;1m[39m[0m
  [31m-            'labels' => ['required', 'array', 'min:1'],[0m
  [35;1m[39m[0m
  [31m-            'labels.*.grid_cell_id' => ['required', 'integer', 'exists:App\Models\GridCell,id'],[0m
  [35;1m[39m[0m
  [31m-            'labels.*.label_class_id' => ['nullable', 'integer', 'exists:App\Models\LabelClass,id'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $labels = [];[0m
  [35;1m[39m[0m
  [31m-        foreach ($input['labels'] as $label) {[0m
  [35;1m[39m[0m
  [31m-            $labels[] = [[0m
  [35;1m[39m[0m
  [31m-                'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                'grid_cell_id' => $label['grid_cell_id'],[0m
  [35;1m[39m[0m
  [31m-                'label_class_id' => $label['label_class_id'],[0m
  [35;1m[39m[0m
  [31m-            ];[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $labels = array_filter($labels, function ($label) {[0m
  [35;1m[39m[0m
  [31m-            if ($label['label_class_id'] !== null) {[0m
  [35;1m[39m[0m
  [31m-                return $label;[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return null;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        foreach ($labels as $label) {[0m
  [35;1m[39m[0m
  [31m-            $annotationCampaign->labelEvidence()->updateOrCreate([[0m
  [35;1m[39m[0m
  [31m-                'source_type' => $annotationCampaign->getMorphClass(),[0m
  [35;1m[39m[0m
  [31m-                'source_id' => $annotationCampaign->id,[0m
  [35;1m[39m[0m
  [31m-                'grid_cell_id' => $label['grid_cell_id'],[0m
  [35;1m[39m[0m
  [31m-            ], $label);[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return back()->with('success', 'Saved labeled grid cells.');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\AnnotationCampaign;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+[39m[0m
  [32m+class AnnotationCampaignGridCellController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function store(Request $request, AnnotationCampaign $annotationCampaign)[39m[0m
  [32m+    {[39m[0m
  [32m+        $input = $request->validateWithBag('setLabelToGridCell', [[39m[0m
  [32m+            'labels' => ['required', 'array', 'min:1'],[39m[0m
  [32m+            'labels.*.grid_cell_id' => ['required', 'integer', 'exists:App\Models\GridCell,id'],[39m[0m
  [32m+            'labels.*.label_class_id' => ['nullable', 'integer', 'exists:App\Models\LabelClass,id'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $labels = [];[39m[0m
  [32m+        foreach ($input['labels'] as $label) {[39m[0m
  [32m+            $labels[] = [[39m[0m
  [32m+                'user_id' => auth()->id(),[39m[0m
  [32m+                'grid_cell_id' => $label['grid_cell_id'],[39m[0m
  [32m+                'label_class_id' => $label['label_class_id'],[39m[0m
  [32m+            ];[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $labels = array_filter($labels, function ($label) {[39m[0m
  [32m+            if ($label['label_class_id'] !== null) {[39m[0m
  [32m+                return $label;[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            return null;[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        foreach ($labels as $label) {[39m[0m
  [32m+            $annotationCampaign->labelEvidence()->updateOrCreate([[39m[0m
  [32m+                'source_type' => $annotationCampaign->getMorphClass(),[39m[0m
  [32m+                'source_id' => $annotationCampaign->id,[39m[0m
  [32m+                'grid_cell_id' => $label['grid_cell_id'],[39m[0m
  [32m+            ], $label);[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        return back()->with('success', 'Saved labeled grid cells.');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/Controller.php [90m                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m13 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m13 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Auth\Access\AuthorizesRequests;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Bus\DispatchesJobs;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Validation\ValidatesRequests;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Routing\Controller as BaseController;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Controller extends BaseController[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Foundation\Auth\Access\AuthorizesRequests;[39m[0m
  [32m+use Illuminate\Foundation\Bus\DispatchesJobs;[39m[0m
  [32m+use Illuminate\Foundation\Validation\ValidatesRequests;[39m[0m
  [32m+use Illuminate\Routing\Controller as BaseController;[39m[0m
  [32m+[39m[0m
  [32m+class Controller extends BaseController[39m[0m
  [32m+{[39m[0m
  [32m+    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/DashboardController.php [90m                           braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m132 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m132 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\ExperimentStatusEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Enums\SubsetTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\GridCellResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\PredictionResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Traits\CreateSubsetTrait;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Experiment;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Prediction;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Region;[0m
  [35;1m[39m[0m
  [31m-use App\Rules\DatasetsCompatible;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Pagination\LengthAwarePaginator;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Http;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\Rules\Enum;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DashboardController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use CreateSubsetTrait;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function index()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Dashboard/Index', [[0m
  [35;1m[39m[0m
  [31m-            'datasets' => Dataset::where('published', true)->get(),[0m
  [35;1m[39m[0m
  [31m-            'regions' => collect(Region::where('year', 2020)->select(['id', 'name', 'region_type'])->get()->toArray())->groupBy('region_type'),[0m
  [35;1m[39m[0m
  [31m-            'experiments' => auth()->user()->currentTeam->experiments()->where('status', ExperimentStatusEnum::Finished)->get(),[0m
  [35;1m[39m[0m
  [31m-            'predictions' => auth()->user()->currentTeam->predictions,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function show(Prediction $prediction)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $prediction = $prediction->load('team', 'team.defaultLabelClass', 'team.labelClasses', 'datasets');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $perPage = ($prediction->datasets->count() === 1) ? 9 : 10;[0m
  [35;1m[39m[0m
  [31m-        $labels = $prediction->labels()->with('gridCell')->paginate($perPage);[0m
  [35;1m[39m[0m
  [31m-        $gridCells = $labels->map(function ($label) {[0m
  [35;1m[39m[0m
  [31m-            return $label->gridCell;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $gridCells = new LengthAwarePaginator($gridCells, $labels->total(), $labels->perPage(), $labels->currentPage(), [[0m
  [35;1m[39m[0m
  [31m-            'path' => $labels->path(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Dashboard/Show', [[0m
  [35;1m[39m[0m
  [31m-            'prediction' => PredictionResource::make($prediction),[0m
  [35;1m[39m[0m
  [31m-            'grid_cells' => GridCellResource::collection($gridCells),[0m
  [35;1m[39m[0m
  [31m-            'labels' => $labels->items(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $request->validateWithBag('createPredictions', [[0m
  [35;1m[39m[0m
  [31m-            'experiment' => ['required', 'integer', 'exists:App\Models\Experiment,id'],[0m
  [35;1m[39m[0m
  [31m-            'datasets' => ['required', 'array', 'min:1', 'max:2', new DatasetsCompatible],[0m
  [35;1m[39m[0m
  [31m-            'datasets.*' => ['integer', 'exists:App\Models\Dataset,id'],[0m
  [35;1m[39m[0m
  [31m-            'subset_method' => ['nullable', 'integer', new Enum(SubsetTypeEnum::class)],[0m
  [35;1m[39m[0m
  [31m-            'name' => ['required'],[0m
  [35;1m[39m[0m
  [31m-            'description' => ['nullable'],[0m
  [35;1m[39m[0m
  [31m-            'sample_size' => ['exclude_unless:subset_method,0', 'required'],[0m
  [35;1m[39m[0m
  [31m-            'file' => ['exclude_unless:subset_method,1', 'required', 'file', 'mimes:csv,txt'],[0m
  [35;1m[39m[0m
  [31m-            'regions' => ['exclude_unless:subset_method,2', 'required', 'array', 'min:1'],[0m
  [35;1m[39m[0m
  [31m-            'regions.*' => ['exclude_unless:subset_method,2', 'required', 'integer', 'exists:App\Models\Region,id'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $experiment = Experiment::findOrFail($request->experiment);[0m
  [35;1m[39m[0m
  [31m-        $datasets = Dataset::findOrFail($request->datasets);[0m
  [35;1m[39m[0m
  [31m-        $gridCells = ($request->subset_method === null) ? $datasets[0]->gridCells : $this->createSubset(SubsetTypeEnum::from($request->subset_method), $datasets[0], $request);[0m
  [35;1m[39m[0m
  [31m-        $labels = collect(Http::timeout(600)->post(config('services.api.url').'/experiments/'.$experiment->id.'/predictions', [[0m
  [35;1m[39m[0m
  [31m-            'information' => [[0m
  [35;1m[39m[0m
  [31m-                'label_classes' => $experiment->team->labelClasses->map(function ($labelClass) {[0m
  [35;1m[39m[0m
  [31m-                    return $labelClass->name;[0m
  [35;1m[39m[0m
  [31m-                }),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'data' => [[0m
  [35;1m[39m[0m
  [31m-                'datasets' => $datasets->map(function ($dataset) {[0m
  [35;1m[39m[0m
  [31m-                    return [[0m
  [35;1m[39m[0m
  [31m-                        'grid_cell_size' => $dataset->gridCells()->first()->type->value,[0m
  [35;1m[39m[0m
  [31m-                        'image_type' => $dataset->image_type->value,[0m
  [35;1m[39m[0m
  [31m-                        'year' => $dataset->year,[0m
  [35;1m[39m[0m
  [31m-                        'image_width' => $dataset->width,[0m
  [35;1m[39m[0m
  [31m-                        'image_height' => $dataset->height,[0m
  [35;1m[39m[0m
  [31m-                    ];[0m
  [35;1m[39m[0m
  [31m-                }),[0m
  [35;1m[39m[0m
  [31m-                'grid_cells' => $gridCells->map(function ($gridCell) {[0m
  [35;1m[39m[0m
  [31m-                    return $gridCell->name;[0m
  [35;1m[39m[0m
  [31m-                }),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ])->json());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $labelClasses = $experiment->team->labelClasses;[0m
  [35;1m[39m[0m
  [31m-        $labels = $labels->map(function ($label) use ($gridCells, $labelClasses) {[0m
  [35;1m[39m[0m
  [31m-            return [[0m
  [35;1m[39m[0m
  [31m-                'grid_cell_id' => $gridCells->firstWhere('name', $label['grid_cell'])->id,[0m
  [35;1m[39m[0m
  [31m-                'label_class_id' => $labelClasses->firstWhere('name', $label['label'])->id,[0m
  [35;1m[39m[0m
  [31m-            ];[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $prediction = DB::transaction(function () use ($request, $experiment, $datasets, $labels) {[0m
  [35;1m[39m[0m
  [31m-            $prediction = auth()->user()->currentTeam->predictions()->create([[0m
  [35;1m[39m[0m
  [31m-                'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                'experiment_id' => $experiment->id,[0m
  [35;1m[39m[0m
  [31m-                'name' => $request->name,[0m
  [35;1m[39m[0m
  [31m-                'description' => $request->description,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $prediction->datasets()->attach($datasets);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $chunks = $labels->chunk(5000);[0m
  [35;1m[39m[0m
  [31m-            foreach ($chunks as $chunk) {[0m
  [35;1m[39m[0m
  [31m-                $prediction->labels()->createMany($chunk);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return $prediction;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('dashboard.show', $prediction);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function destroy(Prediction $prediction)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $prediction->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('dashboard.index');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\ExperimentStatusEnum;[39m[0m
  [32m+use App\Enums\SubsetTypeEnum;[39m[0m
  [32m+use App\Http\Resources\GridCellResource;[39m[0m
  [32m+use App\Http\Resources\PredictionResource;[39m[0m
  [32m+use App\Http\Traits\CreateSubsetTrait;[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use App\Models\Experiment;[39m[0m
  [32m+use App\Models\Prediction;[39m[0m
  [32m+use App\Models\Region;[39m[0m
  [32m+use App\Rules\DatasetsCompatible;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Pagination\LengthAwarePaginator;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Illuminate\Support\Facades\Http;[39m[0m
  [32m+use Illuminate\Validation\Rules\Enum;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class DashboardController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    use CreateSubsetTrait;[39m[0m
  [32m+[39m[0m
  [32m+    public function index()[39m[0m
  [32m+    {[39m[0m
  [32m+        return Inertia::render('Dashboard/Index', [[39m[0m
  [32m+            'datasets' => Dataset::where('published', true)->get(),[39m[0m
  [32m+            'regions' => collect(Region::where('year', 2020)->select(['id', 'name', 'region_type'])->get()->toArray())->groupBy('region_type'),[39m[0m
  [32m+            'experiments' => auth()->user()->currentTeam->experiments()->where('status', ExperimentStatusEnum::Finished)->get(),[39m[0m
  [32m+            'predictions' => auth()->user()->currentTeam->predictions,[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function show(Prediction $prediction)[39m[0m
  [32m+    {[39m[0m
  [32m+        $prediction = $prediction->load('team', 'team.defaultLabelClass', 'team.labelClasses', 'datasets');[39m[0m
  [32m+[39m[0m
  [32m+        $perPage = ($prediction->datasets->count() === 1) ? 9 : 10;[39m[0m
  [32m+        $labels = $prediction->labels()->with('gridCell')->paginate($perPage);[39m[0m
  [32m+        $gridCells = $labels->map(function ($label) {[39m[0m
  [32m+            return $label->gridCell;[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        $gridCells = new LengthAwarePaginator($gridCells, $labels->total(), $labels->perPage(), $labels->currentPage(), [[39m[0m
  [32m+            'path' => $labels->path(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        return Inertia::render('Dashboard/Show', [[39m[0m
  [32m+            'prediction' => PredictionResource::make($prediction),[39m[0m
  [32m+            'grid_cells' => GridCellResource::collection($gridCells),[39m[0m
  [32m+            'labels' => $labels->items(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function store(Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        $request->validateWithBag('createPredictions', [[39m[0m
  [32m+            'experiment' => ['required', 'integer', 'exists:App\Models\Experiment,id'],[39m[0m
  [32m+            'datasets' => ['required', 'array', 'min:1', 'max:2', new DatasetsCompatible],[39m[0m
  [32m+            'datasets.*' => ['integer', 'exists:App\Models\Dataset,id'],[39m[0m
  [32m+            'subset_method' => ['nullable', 'integer', new Enum(SubsetTypeEnum::class)],[39m[0m
  [32m+            'name' => ['required'],[39m[0m
  [32m+            'description' => ['nullable'],[39m[0m
  [32m+            'sample_size' => ['exclude_unless:subset_method,0', 'required'],[39m[0m
  [32m+            'file' => ['exclude_unless:subset_method,1', 'required', 'file', 'mimes:csv,txt'],[39m[0m
  [32m+            'regions' => ['exclude_unless:subset_method,2', 'required', 'array', 'min:1'],[39m[0m
  [32m+            'regions.*' => ['exclude_unless:subset_method,2', 'required', 'integer', 'exists:App\Models\Region,id'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $experiment = Experiment::findOrFail($request->experiment);[39m[0m
  [32m+        $datasets = Dataset::findOrFail($request->datasets);[39m[0m
  [32m+        $gridCells = ($request->subset_method === null) ? $datasets[0]->gridCells : $this->createSubset(SubsetTypeEnum::from($request->subset_method), $datasets[0], $request);[39m[0m
  [32m+        $labels = collect(Http::timeout(600)->post(config('services.api.url').'/experiments/'.$experiment->id.'/predictions', [[39m[0m
  [32m+            'information' => [[39m[0m
  [32m+                'label_classes' => $experiment->team->labelClasses->map(function ($labelClass) {[39m[0m
  [32m+                    return $labelClass->name;[39m[0m
  [32m+                }),[39m[0m
  [32m+            ],[39m[0m
  [32m+            'data' => [[39m[0m
  [32m+                'datasets' => $datasets->map(function ($dataset) {[39m[0m
  [32m+                    return [[39m[0m
  [32m+                        'grid_cell_size' => $dataset->gridCells()->first()->type->value,[39m[0m
  [32m+                        'image_type' => $dataset->image_type->value,[39m[0m
  [32m+                        'year' => $dataset->year,[39m[0m
  [32m+                        'image_width' => $dataset->width,[39m[0m
  [32m+                        'image_height' => $dataset->height,[39m[0m
  [32m+                    ];[39m[0m
  [32m+                }),[39m[0m
  [32m+                'grid_cells' => $gridCells->map(function ($gridCell) {[39m[0m
  [32m+                    return $gridCell->name;[39m[0m
  [32m+                }),[39m[0m
  [32m+            ],[39m[0m
  [32m+        ])->json());[39m[0m
  [32m+[39m[0m
  [32m+        $labelClasses = $experiment->team->labelClasses;[39m[0m
  [32m+        $labels = $labels->map(function ($label) use ($gridCells, $labelClasses) {[39m[0m
  [32m+            return [[39m[0m
  [32m+                'grid_cell_id' => $gridCells->firstWhere('name', $label['grid_cell'])->id,[39m[0m
  [32m+                'label_class_id' => $labelClasses->firstWhere('name', $label['label'])->id,[39m[0m
  [32m+            ];[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        $prediction = DB::transaction(function () use ($request, $experiment, $datasets, $labels) {[39m[0m
  [32m+            $prediction = auth()->user()->currentTeam->predictions()->create([[39m[0m
  [32m+                'user_id' => auth()->id(),[39m[0m
  [32m+                'experiment_id' => $experiment->id,[39m[0m
  [32m+                'name' => $request->name,[39m[0m
  [32m+                'description' => $request->description,[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $prediction->datasets()->attach($datasets);[39m[0m
  [32m+[39m[0m
  [32m+            $chunks = $labels->chunk(5000);[39m[0m
  [32m+            foreach ($chunks as $chunk) {[39m[0m
  [32m+                $prediction->labels()->createMany($chunk);[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            return $prediction;[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('dashboard.show', $prediction);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function destroy(Prediction $prediction)[39m[0m
  [32m+    {[39m[0m
  [32m+        $prediction->delete();[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('dashboard.index');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/DataController.php [90m                                                       braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\TeamResource;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Filter;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Region;[0m
  [35;1m[39m[0m
  [31m-use App\Models\SourceDataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DataController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function index(Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Data/Index', [[0m
  [35;1m[39m[0m
  [31m-            'team' => TeamResource::make(auth()->user()->currentTeam()->with(['defaultLabelClass', 'labelClasses', 'datasets', 'labelEvidence'])->first()),[0m
  [35;1m[39m[0m
  [31m-            'availableDatasets' => SourceDataset::orderByDesc('year')->get(),[0m
  [35;1m[39m[0m
  [31m-            'availableFilters' => Filter::all(),[0m
  [35;1m[39m[0m
  [31m-            'availableRegions' => collect(Region::where('year', 2015)->select(['id', 'name', 'region_type'])->get()->toArray())->groupBy('region_type'),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Http\Resources\TeamResource;[39m[0m
  [32m+use App\Models\Filter;[39m[0m
  [32m+use App\Models\Region;[39m[0m
  [32m+use App\Models\SourceDataset;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class DataController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function index(Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return Inertia::render('Data/Index', [[39m[0m
  [32m+            'team' => TeamResource::make(auth()->user()->currentTeam()->with(['defaultLabelClass', 'labelClasses', 'datasets', 'labelEvidence'])->first()),[39m[0m
  [32m+            'availableDatasets' => SourceDataset::orderByDesc('year')->get(),[39m[0m
  [32m+            'availableFilters' => Filter::all(),[39m[0m
  [32m+            'availableRegions' => collect(Region::where('year', 2015)->select(['id', 'name', 'region_type'])->get()->toArray())->groupBy('region_type'),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/DatasetController.php [90m                                                    braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m44 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m44 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\TeamDetectionTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Requests\StoreDatasetRequest;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\DatasetGridResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\DatasetResource;[0m
  [35;1m[39m[0m
  [31m-use App\Jobs\CreateDataset;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function show(Dataset $dataset)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $paginateAmount = ($dataset->team->detection_type === TeamDetectionTypeEnum::Classification) ? 9 : 10;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Data/Datasets/Show', [[0m
  [35;1m[39m[0m
  [31m-            'dataset' => DatasetResource::make($dataset->load(['team'])->loadCount(['grids'])),[0m
  [35;1m[39m[0m
  [31m-            'grid' => DatasetGridResource::collection($dataset->grids()->orderBy('id', 'asc')->with(['sourceGridCell', 'sourceGridCell.dataset', 'sourceGridCell.gridCell', 'changeGridCell', 'changeGridCell.dataset', 'changeGridCell.gridCell', 'sourcePolygon', 'changePolygon'])->paginate($paginateAmount)),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function store(StoreDatasetRequest $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = auth()->user();[0m
  [35;1m[39m[0m
  [31m-        $team = $user->currentTeam;[0m
  [35;1m[39m[0m
  [31m-        $datasetDetectionType = auth()->user()->currentTeam->detection_type;[0m
  [35;1m[39m[0m
  [31m-        $input = $request->validated();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        CreateDataset::dispatch($user, $team, $datasetDetectionType, $input);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('data.index');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function destroy(Request $request, Dataset $dataset)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $dataset->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return back();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\TeamDetectionTypeEnum;[39m[0m
  [32m+use App\Http\Requests\StoreDatasetRequest;[39m[0m
  [32m+use App\Http\Resources\DatasetGridResource;[39m[0m
  [32m+use App\Http\Resources\DatasetResource;[39m[0m
  [32m+use App\Jobs\CreateDataset;[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function show(Dataset $dataset)[39m[0m
  [32m+    {[39m[0m
  [32m+        $paginateAmount = ($dataset->team->detection_type === TeamDetectionTypeEnum::Classification) ? 9 : 10;[39m[0m
  [32m+[39m[0m
  [32m+        return Inertia::render('Data/Datasets/Show', [[39m[0m
  [32m+            'dataset' => DatasetResource::make($dataset->load(['team'])->loadCount(['grids'])),[39m[0m
  [32m+            'grid' => DatasetGridResource::collection($dataset->grids()->orderBy('id', 'asc')->with(['sourceGridCell', 'sourceGridCell.dataset', 'sourceGridCell.gridCell', 'changeGridCell', 'changeGridCell.dataset', 'changeGridCell.gridCell', 'sourcePolygon', 'changePolygon'])->paginate($paginateAmount)),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function store(StoreDatasetRequest $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = auth()->user();[39m[0m
  [32m+        $team = $user->currentTeam;[39m[0m
  [32m+        $datasetDetectionType = auth()->user()->currentTeam->detection_type;[39m[0m
  [32m+        $input = $request->validated();[39m[0m
  [32m+[39m[0m
  [32m+        CreateDataset::dispatch($user, $team, $datasetDetectionType, $input);[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('data.index');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function destroy(Request $request, Dataset $dataset)[39m[0m
  [32m+    {[39m[0m
  [32m+        $dataset->delete();[39m[0m
  [32m+[39m[0m
  [32m+        return back();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/ExperimentController.php [90m                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m71 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m71 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\ExperimentModelTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Enums\ExperimentStatusEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\ExperimentResource;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Experiment;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Http;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\Rules\Enum;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function index()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Experiments/Index', [[0m
  [35;1m[39m[0m
  [31m-            'experiment_data' => auth()->user()->currentTeam->experimentData,[0m
  [35;1m[39m[0m
  [31m-            'experiment_model_types' => array_column(ExperimentModelTypeEnum::cases(), 'value', 'name'),[0m
  [35;1m[39m[0m
  [31m-            'experiments' => ExperimentResource::collection(auth()->user()->currentTeam->experiments()->orderBy('id', 'asc')->get()),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $request->validateWithBag('createExperiment', [[0m
  [35;1m[39m[0m
  [31m-            'train_data' => ['required', 'integer', 'exists:App\Models\ExperimentData,id'],[0m
  [35;1m[39m[0m
  [31m-            'test_data' => ['nullable', 'integer', 'different:train_data', 'exists:App\Models\ExperimentData,id'],[0m
  [35;1m[39m[0m
  [31m-            'name' => ['required'],[0m
  [35;1m[39m[0m
  [31m-            'description' => ['nullable'],[0m
  [35;1m[39m[0m
  [31m-            'model' => ['required', new Enum(ExperimentModelTypeEnum::class)],[0m
  [35;1m[39m[0m
  [31m-            'epochs' => ['required', 'numeric', 'integer'],[0m
  [35;1m[39m[0m
  [31m-            'batch_size' => ['required', 'numeric', 'integer'],[0m
  [35;1m[39m[0m
  [31m-            'learning_rate' => ['required', 'numeric'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $experiment = auth()->user()->currentTeam->experiments()->create([[0m
  [35;1m[39m[0m
  [31m-            'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-            'train_data_id' => $request->train_data,[0m
  [35;1m[39m[0m
  [31m-            'test_data_id' => $request->test_data,[0m
  [35;1m[39m[0m
  [31m-            'name' => $request->name,[0m
  [35;1m[39m[0m
  [31m-            'description' => $request->description,[0m
  [35;1m[39m[0m
  [31m-            'status' => ExperimentStatusEnum::Idle,[0m
  [35;1m[39m[0m
  [31m-            'options' => [[0m
  [35;1m[39m[0m
  [31m-                'model' => $request->model,[0m
  [35;1m[39m[0m
  [31m-                'epochs' => $request->epochs,[0m
  [35;1m[39m[0m
  [31m-                'batch_size' => $request->batch_size,[0m
  [35;1m[39m[0m
  [31m-                'learning_rate' => $request->learning_rate,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('experiments.show', $experiment);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function show(Request $request, Experiment $experiment)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Experiments/Show', [[0m
  [35;1m[39m[0m
  [31m-            'experiment' => $experiment,[0m
  [35;1m[39m[0m
  [31m-            'learning_curve_detailed' => Http::get(config('services.api.url').'/experiments/'.$experiment->id.'/learning/detail')->json(),[0m
  [35;1m[39m[0m
  [31m-            'confusion_matrix' => Http::get(config('services.api.url').'/experiments/'.$experiment->id.'/confusion')->json(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function destroy(Request $request, Experiment $experiment)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $experiment->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('experiments.index');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\ExperimentModelTypeEnum;[39m[0m
  [32m+use App\Enums\ExperimentStatusEnum;[39m[0m
  [32m+use App\Http\Resources\ExperimentResource;[39m[0m
  [32m+use App\Models\Experiment;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Support\Facades\Http;[39m[0m
  [32m+use Illuminate\Validation\Rules\Enum;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function index()[39m[0m
  [32m+    {[39m[0m
  [32m+        return Inertia::render('Experiments/Index', [[39m[0m
  [32m+            'experiment_data' => auth()->user()->currentTeam->experimentData,[39m[0m
  [32m+            'experiment_model_types' => array_column(ExperimentModelTypeEnum::cases(), 'value', 'name'),[39m[0m
  [32m+            'experiments' => ExperimentResource::collection(auth()->user()->currentTeam->experiments()->orderBy('id', 'asc')->get()),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function store(Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        $request->validateWithBag('createExperiment', [[39m[0m
  [32m+            'train_data' => ['required', 'integer', 'exists:App\Models\ExperimentData,id'],[39m[0m
  [32m+            'test_data' => ['nullable', 'integer', 'different:train_data', 'exists:App\Models\ExperimentData,id'],[39m[0m
  [32m+            'name' => ['required'],[39m[0m
  [32m+            'description' => ['nullable'],[39m[0m
  [32m+            'model' => ['required', new Enum(ExperimentModelTypeEnum::class)],[39m[0m
  [32m+            'epochs' => ['required', 'numeric', 'integer'],[39m[0m
  [32m+            'batch_size' => ['required', 'numeric', 'integer'],[39m[0m
  [32m+            'learning_rate' => ['required', 'numeric'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $experiment = auth()->user()->currentTeam->experiments()->create([[39m[0m
  [32m+            'user_id' => auth()->id(),[39m[0m
  [32m+            'train_data_id' => $request->train_data,[39m[0m
  [32m+            'test_data_id' => $request->test_data,[39m[0m
  [32m+            'name' => $request->name,[39m[0m
  [32m+            'description' => $request->description,[39m[0m
  [32m+            'status' => ExperimentStatusEnum::Idle,[39m[0m
  [32m+            'options' => [[39m[0m
  [32m+                'model' => $request->model,[39m[0m
  [32m+                'epochs' => $request->epochs,[39m[0m
  [32m+                'batch_size' => $request->batch_size,[39m[0m
  [32m+                'learning_rate' => $request->learning_rate,[39m[0m
  [32m+            ],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('experiments.show', $experiment);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function show(Request $request, Experiment $experiment)[39m[0m
  [32m+    {[39m[0m
  [32m+        return Inertia::render('Experiments/Show', [[39m[0m
  [32m+            'experiment' => $experiment,[39m[0m
  [32m+            'learning_curve_detailed' => Http::get(config('services.api.url').'/experiments/'.$experiment->id.'/learning/detail')->json(),[39m[0m
  [32m+            'confusion_matrix' => Http::get(config('services.api.url').'/experiments/'.$experiment->id.'/confusion')->json(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function destroy(Request $request, Experiment $experiment)[39m[0m
  [32m+    {[39m[0m
  [32m+        $experiment->delete();[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('experiments.index');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/ExperimentDataController.php [90m                      braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m76 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m76 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\ExperimentDataResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\GridCellResource;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use App\Models\ExperimentData;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Pagination\LengthAwarePaginator;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentDataController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function show(Request $request, ExperimentData $data)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $data = $data->load(['team', 'team.labelClasses', 'datasets']);[0m
  [35;1m[39m[0m
  [31m-        $pagination = ($data->datasets->count() === 1) ? 9 : 10;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $labels = $data->labels()->paginate($pagination);[0m
  [35;1m[39m[0m
  [31m-        $gridCells = $labels->map(function ($label) {[0m
  [35;1m[39m[0m
  [31m-            return $label->gridCell;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-        $gridCells = new LengthAwarePaginator($gridCells, $labels->total(), $labels->perPage(), $labels->currentPage(), [[0m
  [35;1m[39m[0m
  [31m-            'path' => $labels->path(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Experiments/Data/Show', [[0m
  [35;1m[39m[0m
  [31m-            'experiment_data' => ExperimentDataResource::make($data),[0m
  [35;1m[39m[0m
  [31m-            'grid_cells' => GridCellResource::collection($gridCells),[0m
  [35;1m[39m[0m
  [31m-            'labels' => $labels->items(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        // $request->validateWithBag('consolidateDatasets', [[0m
  [35;1m[39m[0m
  [31m-        //     'datasets' => ['required', 'array', 'min:1', 'max:2'],[0m
  [35;1m[39m[0m
  [31m-        //     'datasets.*' => ['numeric', 'exists:App\Models\Dataset,id'],[0m
  [35;1m[39m[0m
  [31m-        //     'name' => ['required'],[0m
  [35;1m[39m[0m
  [31m-        //     'description' => ['nullable'],[0m
  [35;1m[39m[0m
  [31m-        // ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        dd($request);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $datasets = Dataset::findOrFail($request->datasets);[0m
  [35;1m[39m[0m
  [31m-        $labels = collect($this->consolidate(auth()->user()->currentTeam, $datasets, $datasets[0]->gridCells())['labels'])->map(function ($label) {[0m
  [35;1m[39m[0m
  [31m-            return [[0m
  [35;1m[39m[0m
  [31m-                'grid_cell_id' => $label['grid_cell_id'],[0m
  [35;1m[39m[0m
  [31m-                'label_class_id' => $label['label_class_id'],[0m
  [35;1m[39m[0m
  [31m-            ];[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        DB::transaction(function () use ($request, $labels) {[0m
  [35;1m[39m[0m
  [31m-            $experimentData = auth()->user()->currentTeam->experimentData()->create([[0m
  [35;1m[39m[0m
  [31m-                'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                'name' => $request->name,[0m
  [35;1m[39m[0m
  [31m-                'description' => $request->description,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $experimentData->datasets()->attach($request->datasets);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $experimentData->labels()->createMany($labels);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('experiments.index');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function destroy(ExperimentData $data)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $data->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->back();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Http\Resources\ExperimentDataResource;[39m[0m
  [32m+use App\Http\Resources\GridCellResource;[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use App\Models\ExperimentData;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Pagination\LengthAwarePaginator;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentDataController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function show(Request $request, ExperimentData $data)[39m[0m
  [32m+    {[39m[0m
  [32m+        $data = $data->load(['team', 'team.labelClasses', 'datasets']);[39m[0m
  [32m+        $pagination = ($data->datasets->count() === 1) ? 9 : 10;[39m[0m
  [32m+[39m[0m
  [32m+        $labels = $data->labels()->paginate($pagination);[39m[0m
  [32m+        $gridCells = $labels->map(function ($label) {[39m[0m
  [32m+            return $label->gridCell;[39m[0m
  [32m+        });[39m[0m
  [32m+        $gridCells = new LengthAwarePaginator($gridCells, $labels->total(), $labels->perPage(), $labels->currentPage(), [[39m[0m
  [32m+            'path' => $labels->path(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        return Inertia::render('Experiments/Data/Show', [[39m[0m
  [32m+            'experiment_data' => ExperimentDataResource::make($data),[39m[0m
  [32m+            'grid_cells' => GridCellResource::collection($gridCells),[39m[0m
  [32m+            'labels' => $labels->items(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function store(Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        // $request->validateWithBag('consolidateDatasets', [[39m[0m
  [32m+        //     'datasets' => ['required', 'array', 'min:1', 'max:2'],[39m[0m
  [32m+        //     'datasets.*' => ['numeric', 'exists:App\Models\Dataset,id'],[39m[0m
  [32m+        //     'name' => ['required'],[39m[0m
  [32m+        //     'description' => ['nullable'],[39m[0m
  [32m+        // ]);[39m[0m
  [32m+[39m[0m
  [32m+        dd($request);[39m[0m
  [32m+[39m[0m
  [32m+        $datasets = Dataset::findOrFail($request->datasets);[39m[0m
  [32m+        $labels = collect($this->consolidate(auth()->user()->currentTeam, $datasets, $datasets[0]->gridCells())['labels'])->map(function ($label) {[39m[0m
  [32m+            return [[39m[0m
  [32m+                'grid_cell_id' => $label['grid_cell_id'],[39m[0m
  [32m+                'label_class_id' => $label['label_class_id'],[39m[0m
  [32m+            ];[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        DB::transaction(function () use ($request, $labels) {[39m[0m
  [32m+            $experimentData = auth()->user()->currentTeam->experimentData()->create([[39m[0m
  [32m+                'user_id' => auth()->id(),[39m[0m
  [32m+                'name' => $request->name,[39m[0m
  [32m+                'description' => $request->description,[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $experimentData->datasets()->attach($request->datasets);[39m[0m
  [32m+[39m[0m
  [32m+            $experimentData->labels()->createMany($labels);[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('experiments.index');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function destroy(ExperimentData $data)[39m[0m
  [32m+    {[39m[0m
  [32m+        $data->delete();[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->back();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/ExperimentDownloadController.php [90m                  braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m16 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m16 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Experiment;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Http;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentDownloadController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function download(Experiment $experiment)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return response()->streamDownload(function () use ($experiment) {[0m
  [35;1m[39m[0m
  [31m-            echo Http::get(config('services.api.url').'/experiments/'.$experiment->id.'/experiment');[0m
  [35;1m[39m[0m
  [31m-        }, 'Experiment #'.$experiment->id.'.py');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Experiment;[39m[0m
  [32m+use Illuminate\Support\Facades\Http;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentDownloadController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function download(Experiment $experiment)[39m[0m
  [32m+    {[39m[0m
  [32m+        return response()->streamDownload(function () use ($experiment) {[39m[0m
  [32m+            echo Http::get(config('services.api.url').'/experiments/'.$experiment->id.'/experiment');[39m[0m
  [32m+        }, 'Experiment #'.$experiment->id.'.py');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/ExperimentFinishController.php [90m                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\ExperimentStatusEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Experiment;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentFinishController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request, Experiment $experiment)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $request->validate([[0m
  [35;1m[39m[0m
  [31m-            'accuracy' => ['required', 'numeric', 'min:0', 'max:100', 'regex:/^\d+((.)|(.\d{0,1})?)$/'],[0m
  [35;1m[39m[0m
  [31m-            'precision' => ['required', 'numeric', 'min:0', 'max:100', 'regex:/^\d+((.)|(.\d{0,1})?)$/'],[0m
  [35;1m[39m[0m
  [31m-            'recall' => ['required', 'numeric', 'min:0', 'max:100', 'regex:/^\d+((.)|(.\d{0,1})?)$/'],[0m
  [35;1m[39m[0m
  [31m-            'f1_score' => ['required', 'numeric', 'min:0', 'max:100', 'regex:/^\d+((.)|(.\d{0,1})?)$/'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $experiment->update([[0m
  [35;1m[39m[0m
  [31m-            'status' => ExperimentStatusEnum::Finished,[0m
  [35;1m[39m[0m
  [31m-            'statistics' => [[0m
  [35;1m[39m[0m
  [31m-                'accuracy' => $request->accuracy,[0m
  [35;1m[39m[0m
  [31m-                'precision' => $request->precision,[0m
  [35;1m[39m[0m
  [31m-                'recall' => $request->recall,[0m
  [35;1m[39m[0m
  [31m-                'f1_score' => $request->f1_score,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return $experiment;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\ExperimentStatusEnum;[39m[0m
  [32m+use App\Models\Experiment;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentFinishController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function store(Request $request, Experiment $experiment)[39m[0m
  [32m+    {[39m[0m
  [32m+        $request->validate([[39m[0m
  [32m+            'accuracy' => ['required', 'numeric', 'min:0', 'max:100', 'regex:/^\d+((.)|(.\d{0,1})?)$/'],[39m[0m
  [32m+            'precision' => ['required', 'numeric', 'min:0', 'max:100', 'regex:/^\d+((.)|(.\d{0,1})?)$/'],[39m[0m
  [32m+            'recall' => ['required', 'numeric', 'min:0', 'max:100', 'regex:/^\d+((.)|(.\d{0,1})?)$/'],[39m[0m
  [32m+            'f1_score' => ['required', 'numeric', 'min:0', 'max:100', 'regex:/^\d+((.)|(.\d{0,1})?)$/'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $experiment->update([[39m[0m
  [32m+            'status' => ExperimentStatusEnum::Finished,[39m[0m
  [32m+            'statistics' => [[39m[0m
  [32m+                'accuracy' => $request->accuracy,[39m[0m
  [32m+                'precision' => $request->precision,[39m[0m
  [32m+                'recall' => $request->recall,[39m[0m
  [32m+                'f1_score' => $request->f1_score,[39m[0m
  [32m+            ],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        return $experiment;[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/ExperimentTrainController.php [90m                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Experiment;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentTrainController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function start(Request $request, Experiment $experiment)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $experiment->start();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('experiments.show', $experiment);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function stop(Request $request, Experiment $experiment)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $experiment->stop();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('experiments.show', $experiment);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Experiment;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentTrainController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function start(Request $request, Experiment $experiment)[39m[0m
  [32m+    {[39m[0m
  [32m+        $experiment->start();[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('experiments.show', $experiment);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function stop(Request $request, Experiment $experiment)[39m[0m
  [32m+    {[39m[0m
  [32m+        $experiment->stop();[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('experiments.show', $experiment);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/InspectController.php [90mbraces, curly_braces_position, line_ending, no_unused_imports, ordered_[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m174 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m170 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Actions\DeepGeoStat\ConsolidateDataset;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use App\Models\InspectDataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use App\Enums\LabelEvidenceTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Enums\TeamDetectionTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Pagination\Paginator;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Http;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Cache;[0m
  [35;1m[39m[0m
  [31m-use App\Rules\DatasetHasLabelEvidence;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\DatasetResource;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Validator;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\DatasetGridResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Traits\ConsolidateDatasetsTrait;[0m
  [35;1m[39m[0m
  [31m-use App\Jobs\CreateInspectDataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Pagination\LengthAwarePaginator;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class InspectController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function index(Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Inspect/Index', [[0m
  [35;1m[39m[0m
  [31m-            'availableDatasets' => DatasetResource::collection(auth()->user()->currentTeam->datasets),[0m
  [35;1m[39m[0m
  [31m-            'experimentData' => auth()->user()->currentTeam->experimentData,[0m
  [35;1m[39m[0m
  [31m-            'labelClasses' => auth()->user()->currentTeam->labelClasses,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function show(Request $request, InspectDataset $inspectDataset) {[0m
  [35;1m[39m[0m
  [31m-        $dataset = $inspectDataset->dataset;[0m
  [35;1m[39m[0m
  [31m-        $paginateAmount = ($dataset->team->detection_type === TeamDetectionTypeEnum::Classification) ? 9 : 10;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # Apply Label Class filters.[0m
  [35;1m[39m[0m
  [31m-        if ($request->labelClasses) {[0m
  [35;1m[39m[0m
  [31m-            $selectedLabelClassesIds = array_filter(Validator::make(explode(',', $request->labelClasses), [[0m
  [35;1m[39m[0m
  [31m-                '*' => ['integer', 'exists:App\Models\LabelClass,id'],[0m
  [35;1m[39m[0m
  [31m-            ])->validated());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $selectedLabelClasses = $dataset->team->labelClasses()->find($selectedLabelClassesIds)->pluck('id');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # Apply Confidence filters.[0m
  [35;1m[39m[0m
  [31m-        if ($request->confidence) {[0m
  [35;1m[39m[0m
  [31m-            $selectedConfidence = Validator::make(explode('-', $request->confidence), [[0m
  [35;1m[39m[0m
  [31m-                '*' => ['integer', 'min:0', 'max:100'],[0m
  [35;1m[39m[0m
  [31m-            ])->validated();[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # Count Label Distribution.[0m
  [35;1m[39m[0m
  [31m-        $labelDistribution = [];[0m
  [35;1m[39m[0m
  [31m-        $inspectDataset->labels()[0m
  [35;1m[39m[0m
  [31m-                    ->select(DB::raw('label_class_id, COUNT(*)'))[0m
  [35;1m[39m[0m
  [31m-                    ->groupBy('label_class_id')[0m
  [35;1m[39m[0m
  [31m-                    ->get()[0m
  [35;1m[39m[0m
  [31m-                    ->each(function ($labelClass) use (&$labelDistribution) {[0m
  [35;1m[39m[0m
  [31m-                        $labelDistribution[$labelClass['label_class_id']] = $labelClass['count'];[0m
  [35;1m[39m[0m
  [31m-                    });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # Get filtered Labels with paginate.[0m
  [35;1m[39m[0m
  [31m-        $paginatedLabels = $inspectDataset->labels()[0m
  [35;1m[39m[0m
  [31m-                    ->when(isset($selectedLabelClasses) && $selectedLabelClasses->isNotEmpty(), function ($query) use (&$selectedLabelClasses) {[0m
  [35;1m[39m[0m
  [31m-                        $query->whereIn('label_class_id', $selectedLabelClasses);[0m
  [35;1m[39m[0m
  [31m-                    })[0m
  [35;1m[39m[0m
  [31m-                    ->when(isset($selectedConfidence), function ($query) use (&$selectedConfidence) {[0m
  [35;1m[39m[0m
  [31m-                        $query->whereBetween('information->confidence->level', $selectedConfidence);[0m
  [35;1m[39m[0m
  [31m-                    })[0m
  [35;1m[39m[0m
  [31m-                    ->paginate($paginateAmount)[0m
  [35;1m[39m[0m
  [31m-                    ->withQueryString();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # Take Grids associated with the Labels on the current page and make this a paginator.[0m
  [35;1m[39m[0m
  [31m-        $grids = new LengthAwarePaginator([0m
  [35;1m[39m[0m
  [31m-            $dataset->grids()->with(['sourceGridCell', 'sourceGridCell.dataset', 'sourceGridCell.gridCell', 'changeGridCell', 'changeGridCell.dataset', 'changeGridCell.gridCell', 'sourcePolygon', 'changePolygon'])->whereIn('id', collect($paginatedLabels->items())->pluck('grid_id'))->get(),[0m
  [35;1m[39m[0m
  [31m-            $paginatedLabels->total(),[0m
  [35;1m[39m[0m
  [31m-            $paginatedLabels->perPage(),[0m
  [35;1m[39m[0m
  [31m-            $paginatedLabels->currentPage(),[0m
  [35;1m[39m[0m
  [31m-            [[0m
  [35;1m[39m[0m
  [31m-                'path' => $paginatedLabels->path(),[0m
  [35;1m[39m[0m
  [31m-                'query' => Paginator::resolveQueryString(),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # Transform labels to non paginator to be able to display on the page.[0m
  [35;1m[39m[0m
  [31m-        $labels = collect($paginatedLabels->items())->map(function ($label) {[0m
  [35;1m[39m[0m
  [31m-            return [[0m
  [35;1m[39m[0m
  [31m-                'grid_id' => $label['grid_id'],[0m
  [35;1m[39m[0m
  [31m-                'label_class_id' => $label['label_class_id'],[0m
  [35;1m[39m[0m
  [31m-                'information' => $label['information'],[0m
  [35;1m[39m[0m
  [31m-            ];[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Inspect/Show', [[0m
  [35;1m[39m[0m
  [31m-            'filters' => [[0m
  [35;1m[39m[0m
  [31m-                'labelClasses' => $selectedLabelClasses,[0m
  [35;1m[39m[0m
  [31m-                'confidence' => $selectedConfidence,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'dataset' => DatasetResource::make($dataset->load(['team', 'team.labelClasses', 'team.defaultLabelClass'])->loadCount('grids')),[0m
  [35;1m[39m[0m
  [31m-            'grids' => DatasetGridResource::collection($grids),[0m
  [35;1m[39m[0m
  [31m-            'labels' => $labels,[0m
  [35;1m[39m[0m
  [31m-            'labelDistribution' => $labelDistribution,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $request->validateWithBag('selectConsolidateDatasets', [[0m
  [35;1m[39m[0m
  [31m-            'dataset' => ['required', 'integer', 'exists:App\Models\Dataset,id', new DatasetHasLabelEvidence],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $dataset = Dataset::findOrFail($request->dataset);[0m
  [35;1m[39m[0m
  [31m-        if ($dataset->inspects()->exists()) {[0m
  [35;1m[39m[0m
  [31m-            # Dataset already has an inspect saved.[0m
  [35;1m[39m[0m
  [31m-            $latestInspect = $dataset->inspects()->latest()->first();[0m
  [35;1m[39m[0m
  [31m-            if ($latestInspect->created_at > $dataset->labelEvidence()->orderBy('updated_at', 'desc')->first()->updated_at) {[0m
  [35;1m[39m[0m
  [31m-                # The most recent inspect for the dataset is more recent than the last updated label evidence.[0m
  [35;1m[39m[0m
  [31m-                # This means there are no changes in the labels, so show the last inspect.[0m
  [35;1m[39m[0m
  [31m-                return redirect()->route('inspect.show', [[0m
  [35;1m[39m[0m
  [31m-                    'inspectDataset' => $latestInspect,[0m
  [35;1m[39m[0m
  [31m-                    'labelClasses' => $dataset->team->labelClasses->implode('id', ','),[0m
  [35;1m[39m[0m
  [31m-                    'confidence' => '0-100',[0m
  [35;1m[39m[0m
  [31m-                ]);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # Dataset has more than 25.000 grids it will be queued as it can take awhile.[0m
  [35;1m[39m[0m
  [31m-        if ($dataset->grids()->count() > 25000) {[0m
  [35;1m[39m[0m
  [31m-            // TODO: Remove no time limit.[0m
  [35;1m[39m[0m
  [31m-            set_time_limit(0);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // CreateInspectDataset::dispatch($dataset);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // return back();[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $consolidateResult = ConsolidateDataset::execute($dataset, 60 * 10);[0m
  [35;1m[39m[0m
  [31m-        $inspectDataset = DB::transaction(function () use ($dataset, $consolidateResult) {[0m
  [35;1m[39m[0m
  [31m-            $inspectDataset = InspectDataset::create([[0m
  [35;1m[39m[0m
  [31m-                'dataset_id' => $dataset->id,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $labels = collect($consolidateResult['labels'])->map(function ($label) use ($inspectDataset) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'inspect_dataset_id' => $inspectDataset->id,[0m
  [35;1m[39m[0m
  [31m-                    'grid_id' => $label['grid_id'],[0m
  [35;1m[39m[0m
  [31m-                    'label_class_id' => $label['label_class_id'],[0m
  [35;1m[39m[0m
  [31m-                    'information' => json_encode([[0m
  [35;1m[39m[0m
  [31m-                        'confidence' => [[0m
  [35;1m[39m[0m
  [31m-                            'level' => $label['confidence'],[0m
  [35;1m[39m[0m
  [31m-                            'reason' => $label['confidence_reason'],[0m
  [35;1m[39m[0m
  [31m-                        ],[0m
  [35;1m[39m[0m
  [31m-                    ]),[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            })->toArray();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            foreach (array_chunk($labels, 1000) as $chunk) {[0m
  [35;1m[39m[0m
  [31m-                $inspectDataset->labels()->insert($chunk);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return $inspectDataset;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('inspect.show', [[0m
  [35;1m[39m[0m
  [31m-            'inspectDataset' => $inspectDataset,[0m
  [35;1m[39m[0m
  [31m-            'labelClasses' => $dataset->team->labelClasses->implode('id', ','),[0m
  [35;1m[39m[0m
  [31m-            'confidence' => '0-100',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Actions\DeepGeoStat\ConsolidateDataset;[39m[0m
  [32m+use App\Enums\TeamDetectionTypeEnum;[39m[0m
  [32m+use App\Http\Resources\DatasetGridResource;[39m[0m
  [32m+use App\Http\Resources\DatasetResource;[39m[0m
  [32m+use App\Jobs\CreateInspectDataset;[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use App\Models\InspectDataset;[39m[0m
  [32m+use App\Rules\DatasetHasLabelEvidence;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Pagination\LengthAwarePaginator;[39m[0m
  [32m+use Illuminate\Pagination\Paginator;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Illuminate\Support\Facades\Validator;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class InspectController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function index(Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return Inertia::render('Inspect/Index', [[39m[0m
  [32m+            'availableDatasets' => DatasetResource::collection(auth()->user()->currentTeam->datasets),[39m[0m
  [32m+            'experimentData' => auth()->user()->currentTeam->experimentData,[39m[0m
  [32m+            'labelClasses' => auth()->user()->currentTeam->labelClasses,[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function show(Request $request, InspectDataset $inspectDataset)[39m[0m
  [32m+    {[39m[0m
  [32m+        $dataset = $inspectDataset->dataset;[39m[0m
  [32m+        $paginateAmount = ($dataset->team->detection_type === TeamDetectionTypeEnum::Classification) ? 9 : 10;[39m[0m
  [32m+[39m[0m
  [32m+        // Apply Label Class filters.[39m[0m
  [32m+        if ($request->labelClasses) {[39m[0m
  [32m+            $selectedLabelClassesIds = array_filter(Validator::make(explode(',', $request->labelClasses), [[39m[0m
  [32m+                '*' => ['integer', 'exists:App\Models\LabelClass,id'],[39m[0m
  [32m+            ])->validated());[39m[0m
  [32m+[39m[0m
  [32m+            $selectedLabelClasses = $dataset->team->labelClasses()->find($selectedLabelClassesIds)->pluck('id');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        // Apply Confidence filters.[39m[0m
  [32m+        if ($request->confidence) {[39m[0m
  [32m+            $selectedConfidence = Validator::make(explode('-', $request->confidence), [[39m[0m
  [32m+                '*' => ['integer', 'min:0', 'max:100'],[39m[0m
  [32m+            ])->validated();[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        // Count Label Distribution.[39m[0m
  [32m+        $labelDistribution = [];[39m[0m
  [32m+        $inspectDataset->labels()[39m[0m
  [32m+                    ->select(DB::raw('label_class_id, COUNT(*)'))[39m[0m
  [32m+                    ->groupBy('label_class_id')[39m[0m
  [32m+                    ->get()[39m[0m
  [32m+                    ->each(function ($labelClass) use (&$labelDistribution) {[39m[0m
  [32m+                        $labelDistribution[$labelClass['label_class_id']] = $labelClass['count'];[39m[0m
  [32m+                    });[39m[0m
  [32m+[39m[0m
  [32m+        // Get filtered Labels with paginate.[39m[0m
  [32m+        $paginatedLabels = $inspectDataset->labels()[39m[0m
  [32m+                    ->when(isset($selectedLabelClasses) && $selectedLabelClasses->isNotEmpty(), function ($query) use (&$selectedLabelClasses) {[39m[0m
  [32m+                        $query->whereIn('label_class_id', $selectedLabelClasses);[39m[0m
  [32m+                    })[39m[0m
  [32m+                    ->when(isset($selectedConfidence), function ($query) use (&$selectedConfidence) {[39m[0m
  [32m+                        $query->whereBetween('information->confidence->level', $selectedConfidence);[39m[0m
  [32m+                    })[39m[0m
  [32m+                    ->paginate($paginateAmount)[39m[0m
  [32m+                    ->withQueryString();[39m[0m
  [32m+[39m[0m
  [32m+        // Take Grids associated with the Labels on the current page and make this a paginator.[39m[0m
  [32m+        $grids = new LengthAwarePaginator([39m[0m
  [32m+            $dataset->grids()->with(['sourceGridCell', 'sourceGridCell.dataset', 'sourceGridCell.gridCell', 'changeGridCell', 'changeGridCell.dataset', 'changeGridCell.gridCell', 'sourcePolygon', 'changePolygon'])->whereIn('id', collect($paginatedLabels->items())->pluck('grid_id'))->get(),[39m[0m
  [32m+            $paginatedLabels->total(),[39m[0m
  [32m+            $paginatedLabels->perPage(),[39m[0m
  [32m+            $paginatedLabels->currentPage(),[39m[0m
  [32m+            [[39m[0m
  [32m+                'path' => $paginatedLabels->path(),[39m[0m
  [32m+                'query' => Paginator::resolveQueryString(),[39m[0m
  [32m+            ],[39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        // Transform labels to non paginator to be able to display on the page.[39m[0m
  [32m+        $labels = collect($paginatedLabels->items())->map(function ($label) {[39m[0m
  [32m+            return [[39m[0m
  [32m+                'grid_id' => $label['grid_id'],[39m[0m
  [32m+                'label_class_id' => $label['label_class_id'],[39m[0m
  [32m+                'information' => $label['information'],[39m[0m
  [32m+            ];[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        return Inertia::render('Inspect/Show', [[39m[0m
  [32m+            'filters' => [[39m[0m
  [32m+                'labelClasses' => $selectedLabelClasses,[39m[0m
  [32m+                'confidence' => $selectedConfidence,[39m[0m
  [32m+            ],[39m[0m
  [32m+            'dataset' => DatasetResource::make($dataset->load(['team', 'team.labelClasses', 'team.defaultLabelClass'])->loadCount('grids')),[39m[0m
  [32m+            'grids' => DatasetGridResource::collection($grids),[39m[0m
  [32m+            'labels' => $labels,[39m[0m
  [32m+            'labelDistribution' => $labelDistribution,[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function store(Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        $request->validateWithBag('selectConsolidateDatasets', [[39m[0m
  [32m+            'dataset' => ['required', 'integer', 'exists:App\Models\Dataset,id', new DatasetHasLabelEvidence],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $dataset = Dataset::findOrFail($request->dataset);[39m[0m
  [32m+        if ($dataset->inspects()->exists()) {[39m[0m
  [32m+            // Dataset already has an inspect saved.[39m[0m
  [32m+            $latestInspect = $dataset->inspects()->latest()->first();[39m[0m
  [32m+            if ($latestInspect->created_at > $dataset->labelEvidence()->orderBy('updated_at', 'desc')->first()->updated_at) {[39m[0m
  [32m+                // The most recent inspect for the dataset is more recent than the last updated label evidence.[39m[0m
  [32m+                // This means there are no changes in the labels, so show the last inspect.[39m[0m
  [32m+                return redirect()->route('inspect.show', [[39m[0m
  [32m+                    'inspectDataset' => $latestInspect,[39m[0m
  [32m+                    'labelClasses' => $dataset->team->labelClasses->implode('id', ','),[39m[0m
  [32m+                    'confidence' => '0-100',[39m[0m
  [32m+                ]);[39m[0m
  [32m+            }[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        // Dataset has more than 25.000 grids it will be queued as it can take awhile.[39m[0m
  [32m+        if ($dataset->grids()->count() > 25000) {[39m[0m
  [32m+            // TODO: Remove no time limit.[39m[0m
  [32m+            set_time_limit(0);[39m[0m
  [32m+[39m[0m
  [32m+            // CreateInspectDataset::dispatch($dataset);[39m[0m
  [32m+[39m[0m
  [32m+            // return back();[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $consolidateResult = ConsolidateDataset::execute($dataset, 60 * 10);[39m[0m
  [32m+        $inspectDataset = DB::transaction(function () use ($dataset, $consolidateResult) {[39m[0m
  [32m+            $inspectDataset = InspectDataset::create([[39m[0m
  [32m+                'dataset_id' => $dataset->id,[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $labels = collect($consolidateResult['labels'])->map(function ($label) use ($inspectDataset) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'inspect_dataset_id' => $inspectDataset->id,[39m[0m
  [32m+                    'grid_id' => $label['grid_id'],[39m[0m
  [32m+                    'label_class_id' => $label['label_class_id'],[39m[0m
  [32m+                    'information' => json_encode([[39m[0m
  [32m+                        'confidence' => [[39m[0m
  [32m+                            'level' => $label['confidence'],[39m[0m
  [32m+                            'reason' => $label['confidence_reason'],[39m[0m
  [32m+                        ],[39m[0m
  [32m+                    ]),[39m[0m
  [32m+                ];[39m[0m
  [32m+            })->toArray();[39m[0m
  [32m+[39m[0m
  [32m+            foreach (array_chunk($labels, 1000) as $chunk) {[39m[0m
  [32m+                $inspectDataset->labels()->insert($chunk);[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            return $inspectDataset;[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('inspect.show', [[39m[0m
  [32m+            'inspectDataset' => $inspectDataset,[39m[0m
  [32m+            'labelClasses' => $dataset->team->labelClasses->implode('id', ','),[39m[0m
  [32m+            'confidence' => '0-100',[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/LabelEvidenceController.php [90mbraces, curly_braces_position, line_ending, no_whitespace_in_blan[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m72 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m72 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use App\Models\LabelEvidence;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use App\Enums\LabelEvidenceTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Enums\TeamDetectionTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Requests\StoreLabelEvidenceRequest;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\DatasetGridResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\LabelEvidenceResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\LabelEvidenceLabelResource;[0m
  [35;1m[39m[0m
  [31m-use App\Jobs\CreateLabelEvidenceFromRegister;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelEvidenceController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function show(LabelEvidence $labelEvidence)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $paginateAmount = ($labelEvidence->team->detection_type === TeamDetectionTypeEnum::Classification) ? 9 : 10;[0m
  [35;1m[39m[0m
  [31m-        $grids = $labelEvidence->dataset->grids()->orderBy('id', 'asc')->with(['sourceGridCell', 'sourceGridCell.dataset', 'sourceGridCell.gridCell', 'changeGridCell', 'changeGridCell.dataset', 'changeGridCell.gridCell', 'sourcePolygon', 'changePolygon'])->paginate($paginateAmount);[0m
  [35;1m[39m[0m
  [31m-        $labels = $labelEvidence->labels()->whereIn('grid_id', collect($grids->items())->pluck('id'))->get();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Data/LabelEvidence/Show', [[0m
  [35;1m[39m[0m
  [31m-            'can' => [[0m
  [35;1m[39m[0m
  [31m-                'createLabels' => ($labelEvidence->type === LabelEvidenceTypeEnum::AnnotationCampaign) ? true : false,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'labelEvidence' => LabelEvidenceResource::make($labelEvidence->load(['team', 'team.labelClasses', 'team.defaultLabelClass', 'dataset' => function ($query) {[0m
  [35;1m[39m[0m
  [31m-                $query->withCount('grids');[0m
  [35;1m[39m[0m
  [31m-            }])),[0m
  [35;1m[39m[0m
  [31m-            'grids' => DatasetGridResource::collection($grids),[0m
  [35;1m[39m[0m
  [31m-            'labels' => LabelEvidenceLabelResource::collection($labels),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function store(StoreLabelEvidenceRequest $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $type = LabelEvidenceTypeEnum::from($request->type);[0m
  [35;1m[39m[0m
  [31m-        if ($type === LabelEvidenceTypeEnum::AnnotationCampaign) {[0m
  [35;1m[39m[0m
  [31m-            DB::transaction(function () use ($request) {[0m
  [35;1m[39m[0m
  [31m-                auth()->user()->currentTeam->labelEvidence()->create([[0m
  [35;1m[39m[0m
  [31m-                    'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                    'dataset_id' => $request->dataset,[0m
  [35;1m[39m[0m
  [31m-                    'title' => $request->title,[0m
  [35;1m[39m[0m
  [31m-                    'description' => $request->description,[0m
  [35;1m[39m[0m
  [31m-                    'type' => LabelEvidenceTypeEnum::AnnotationCampaign,[0m
  [35;1m[39m[0m
  [31m-                ]);[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        } else {[0m
  [35;1m[39m[0m
  [31m-            $user = auth()->user();[0m
  [35;1m[39m[0m
  [31m-            $team = $user->currentTeam;[0m
  [35;1m[39m[0m
  [31m-            $input = $request->safe()->except(['register_file']);[0m
  [35;1m[39m[0m
  [31m-            if ($request->hasFile('register_file')) {[0m
  [35;1m[39m[0m
  [31m-                $csvPath = $request->register_file->store('registers');[0m
  [35;1m[39m[0m
  [31m-    [0m
  [35;1m[39m[0m
  [31m-                CreateLabelEvidenceFromRegister::dispatch($user, $team, $input, $csvPath);[0m
  [35;1m[39m[0m
  [31m-            } else {[0m
  [35;1m[39m[0m
  [31m-                CreateLabelEvidenceFromRegister::dispatch($user, $team, $input);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('data.index');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function destroy(Request $request, LabelEvidence $labelEvidence)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $labelEvidence->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('data.index');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\LabelEvidenceTypeEnum;[39m[0m
  [32m+use App\Enums\TeamDetectionTypeEnum;[39m[0m
  [32m+use App\Http\Requests\StoreLabelEvidenceRequest;[39m[0m
  [32m+use App\Http\Resources\DatasetGridResource;[39m[0m
  [32m+use App\Http\Resources\LabelEvidenceLabelResource;[39m[0m
  [32m+use App\Http\Resources\LabelEvidenceResource;[39m[0m
  [32m+use App\Jobs\CreateLabelEvidenceFromRegister;[39m[0m
  [32m+use App\Models\LabelEvidence;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class LabelEvidenceController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function show(LabelEvidence $labelEvidence)[39m[0m
  [32m+    {[39m[0m
  [32m+        $paginateAmount = ($labelEvidence->team->detection_type === TeamDetectionTypeEnum::Classification) ? 9 : 10;[39m[0m
  [32m+        $grids = $labelEvidence->dataset->grids()->orderBy('id', 'asc')->with(['sourceGridCell', 'sourceGridCell.dataset', 'sourceGridCell.gridCell', 'changeGridCell', 'changeGridCell.dataset', 'changeGridCell.gridCell', 'sourcePolygon', 'changePolygon'])->paginate($paginateAmount);[39m[0m
  [32m+        $labels = $labelEvidence->labels()->whereIn('grid_id', collect($grids->items())->pluck('id'))->get();[39m[0m
  [32m+[39m[0m
  [32m+        return Inertia::render('Data/LabelEvidence/Show', [[39m[0m
  [32m+            'can' => [[39m[0m
  [32m+                'createLabels' => ($labelEvidence->type === LabelEvidenceTypeEnum::AnnotationCampaign) ? true : false,[39m[0m
  [32m+            ],[39m[0m
  [32m+            'labelEvidence' => LabelEvidenceResource::make($labelEvidence->load(['team', 'team.labelClasses', 'team.defaultLabelClass', 'dataset' => function ($query) {[39m[0m
  [32m+                $query->withCount('grids');[39m[0m
  [32m+            }])),[39m[0m
  [32m+            'grids' => DatasetGridResource::collection($grids),[39m[0m
  [32m+            'labels' => LabelEvidenceLabelResource::collection($labels),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function store(StoreLabelEvidenceRequest $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        $type = LabelEvidenceTypeEnum::from($request->type);[39m[0m
  [32m+        if ($type === LabelEvidenceTypeEnum::AnnotationCampaign) {[39m[0m
  [32m+            DB::transaction(function () use ($request) {[39m[0m
  [32m+                auth()->user()->currentTeam->labelEvidence()->create([[39m[0m
  [32m+                    'user_id' => auth()->id(),[39m[0m
  [32m+                    'dataset_id' => $request->dataset,[39m[0m
  [32m+                    'title' => $request->title,[39m[0m
  [32m+                    'description' => $request->description,[39m[0m
  [32m+                    'type' => LabelEvidenceTypeEnum::AnnotationCampaign,[39m[0m
  [32m+                ]);[39m[0m
  [32m+            });[39m[0m
  [32m+        } else {[39m[0m
  [32m+            $user = auth()->user();[39m[0m
  [32m+            $team = $user->currentTeam;[39m[0m
  [32m+            $input = $request->safe()->except(['register_file']);[39m[0m
  [32m+            if ($request->hasFile('register_file')) {[39m[0m
  [32m+                $csvPath = $request->register_file->store('registers');[39m[0m
  [32m+[39m[0m
  [32m+                CreateLabelEvidenceFromRegister::dispatch($user, $team, $input, $csvPath);[39m[0m
  [32m+            } else {[39m[0m
  [32m+                CreateLabelEvidenceFromRegister::dispatch($user, $team, $input);[39m[0m
  [32m+            }[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('data.index');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function destroy(Request $request, LabelEvidence $labelEvidence)[39m[0m
  [32m+    {[39m[0m
  [32m+        $labelEvidence->delete();[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('data.index');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/LabelEvidenceGridController.php [90m                   braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\LabelEvidence;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelEvidenceGridController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request, LabelEvidence $labelEvidence)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $request->validateWithBag('createLabels', [[0m
  [35;1m[39m[0m
  [31m-            'labels' => ['required', 'array', 'min:1'],[0m
  [35;1m[39m[0m
  [31m-            'labels.*.grid_id' => ['required', 'integer', 'exists:App\Models\DatasetGrid,id'],[0m
  [35;1m[39m[0m
  [31m-            'labels.*.label_class_id' => ['required', 'integer', 'exists:App\Models\LabelClass,id'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $labels = collect($request->labels)->map(function ($label) use ($labelEvidence) {[0m
  [35;1m[39m[0m
  [31m-            return [[0m
  [35;1m[39m[0m
  [31m-                'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                'label_evidence_id' => $labelEvidence->id,[0m
  [35;1m[39m[0m
  [31m-                'grid_id' => $label['grid_id'],[0m
  [35;1m[39m[0m
  [31m-                'label_class_id' => $label['label_class_id'],[0m
  [35;1m[39m[0m
  [31m-            ];[0m
  [35;1m[39m[0m
  [31m-        })->toArray();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $labelEvidence->touch();[0m
  [35;1m[39m[0m
  [31m-        $labelEvidence->labels()->upsert($labels, ['label_evidence_id', 'grid_id'], ['user_id', 'label_class_id']);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return back();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\LabelEvidence;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+[39m[0m
  [32m+class LabelEvidenceGridController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function store(Request $request, LabelEvidence $labelEvidence)[39m[0m
  [32m+    {[39m[0m
  [32m+        $request->validateWithBag('createLabels', [[39m[0m
  [32m+            'labels' => ['required', 'array', 'min:1'],[39m[0m
  [32m+            'labels.*.grid_id' => ['required', 'integer', 'exists:App\Models\DatasetGrid,id'],[39m[0m
  [32m+            'labels.*.label_class_id' => ['required', 'integer', 'exists:App\Models\LabelClass,id'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $labels = collect($request->labels)->map(function ($label) use ($labelEvidence) {[39m[0m
  [32m+            return [[39m[0m
  [32m+                'user_id' => auth()->id(),[39m[0m
  [32m+                'label_evidence_id' => $labelEvidence->id,[39m[0m
  [32m+                'grid_id' => $label['grid_id'],[39m[0m
  [32m+                'label_class_id' => $label['label_class_id'],[39m[0m
  [32m+            ];[39m[0m
  [32m+        })->toArray();[39m[0m
  [32m+[39m[0m
  [32m+        $labelEvidence->touch();[39m[0m
  [32m+        $labelEvidence->labels()->upsert($labels, ['label_evidence_id', 'grid_id'], ['user_id', 'label_class_id']);[39m[0m
  [32m+[39m[0m
  [32m+        return back();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/PredictionDownloadController.php [90m                  braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Prediction;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class PredictionDownloadController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function download(Prediction $prediction)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $columns = ['Grid Cell', 'Label'];[0m
  [35;1m[39m[0m
  [31m-        $callback = function () use ($prediction, $columns) {[0m
  [35;1m[39m[0m
  [31m-            $file = fopen('php://output', 'w');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Put column names to top of CSV file.[0m
  [35;1m[39m[0m
  [31m-            fputcsv($file, $columns);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Put the Labels in the CSV file.[0m
  [35;1m[39m[0m
  [31m-            $prediction->labels->each(function ($label) use ($file) {[0m
  [35;1m[39m[0m
  [31m-                fputcsv($file, [[0m
  [35;1m[39m[0m
  [31m-                    $label->gridCell->name,[0m
  [35;1m[39m[0m
  [31m-                    $label->labelClass->name,[0m
  [35;1m[39m[0m
  [31m-                ]);[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            fclose($file);[0m
  [35;1m[39m[0m
  [31m-        };[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return response()->streamDownload($callback, $prediction->name.'.csv', [[0m
  [35;1m[39m[0m
  [31m-            'Content-type' => 'text/csv',[0m
  [35;1m[39m[0m
  [31m-            'Content-Disposition' => 'attachment; filename='.$prediction->name.'.csv',[0m
  [35;1m[39m[0m
  [31m-            'Pragma' => 'no-cache',[0m
  [35;1m[39m[0m
  [31m-            'Cache-Control' => 'must-revalidate, post-check=0, pre-check=0',[0m
  [35;1m[39m[0m
  [31m-            'Expires' => '0',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Prediction;[39m[0m
  [32m+[39m[0m
  [32m+class PredictionDownloadController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function download(Prediction $prediction)[39m[0m
  [32m+    {[39m[0m
  [32m+        $columns = ['Grid Cell', 'Label'];[39m[0m
  [32m+        $callback = function () use ($prediction, $columns) {[39m[0m
  [32m+            $file = fopen('php://output', 'w');[39m[0m
  [32m+[39m[0m
  [32m+            // Put column names to top of CSV file.[39m[0m
  [32m+            fputcsv($file, $columns);[39m[0m
  [32m+[39m[0m
  [32m+            // Put the Labels in the CSV file.[39m[0m
  [32m+            $prediction->labels->each(function ($label) use ($file) {[39m[0m
  [32m+                fputcsv($file, [[39m[0m
  [32m+                    $label->gridCell->name,[39m[0m
  [32m+                    $label->labelClass->name,[39m[0m
  [32m+                ]);[39m[0m
  [32m+            });[39m[0m
  [32m+[39m[0m
  [32m+            fclose($file);[39m[0m
  [32m+        };[39m[0m
  [32m+[39m[0m
  [32m+        return response()->streamDownload($callback, $prediction->name.'.csv', [[39m[0m
  [32m+            'Content-type' => 'text/csv',[39m[0m
  [32m+            'Content-Disposition' => 'attachment; filename='.$prediction->name.'.csv',[39m[0m
  [32m+            'Pragma' => 'no-cache',[39m[0m
  [32m+            'Cache-Control' => 'must-revalidate, post-check=0, pre-check=0',[39m[0m
  [32m+            'Expires' => '0',[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/RegisterController.php [90m                            braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m106 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m106 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\GridCellResource;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Resources\RegisterResource;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Register;[0m
  [35;1m[39m[0m
  [31m-use App\Rules\DatasetsCompatible;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class RegisterController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function show(Request $request, Register $register)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $register = $register->load(['team', 'team.defaultLabelClass', 'team.labelClasses', 'datasets']);[0m
  [35;1m[39m[0m
  [31m-        $pagination = ($register->datasets->count() === 1) ? 9 : 10;[0m
  [35;1m[39m[0m
  [31m-        $grid_cells = $register->datasets[0]->gridCells()->paginate($pagination);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Data/Registers/Show', [[0m
  [35;1m[39m[0m
  [31m-            'register' => RegisterResource::make($register),[0m
  [35;1m[39m[0m
  [31m-            'grid_cells' => GridCellResource::collection($grid_cells),[0m
  [35;1m[39m[0m
  [31m-            'label_evidence' => $register->labelEvidence()->whereIn('grid_cell_id', collect($grid_cells->items())->pluck('id'))->get(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function store(Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $request->validateWithBag('importRegister', [[0m
  [35;1m[39m[0m
  [31m-            'datasets' => ['required', 'array', 'min:1', 'max:2', new DatasetsCompatible],[0m
  [35;1m[39m[0m
  [31m-            'datasets.*' => ['integer', 'exists:App\Models\Dataset,id'],[0m
  [35;1m[39m[0m
  [31m-            'title' => ['required'],[0m
  [35;1m[39m[0m
  [31m-            'description' => ['nullable'],[0m
  [35;1m[39m[0m
  [31m-            'label_identifiers' => ['required', 'array'],[0m
  [35;1m[39m[0m
  [31m-            'label_identifiers.*.label_class_id' => ['required', 'exists:App\Models\LabelClass,id'],[0m
  [35;1m[39m[0m
  [31m-            'label_identifiers.*.identifier' => ['required'],[0m
  [35;1m[39m[0m
  [31m-            'file' => ['required', 'file', 'mimes:csv'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $datasets = auth()->user()->currentTeam->datasets()->find($request->datasets);[0m
  [35;1m[39m[0m
  [31m-        $grid_cells = $datasets[0]->gridCells()->pluck('id', 'name');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $label_classes = auth()->user()->currentTeam->labelClasses;[0m
  [35;1m[39m[0m
  [31m-        foreach ($request->label_identifiers as $label_identifier) {[0m
  [35;1m[39m[0m
  [31m-            $label_class = $label_classes->firstWhere('id', $label_identifier['label_class_id']);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            if ($label_class->identifier !== $label_identifier['identifier']) {[0m
  [35;1m[39m[0m
  [31m-                $label_class->identifier = $label_identifier['identifier'];[0m
  [35;1m[39m[0m
  [31m-                $label_class->save();[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $row_i = 0;[0m
  [35;1m[39m[0m
  [31m-        $label_evidence = [];[0m
  [35;1m[39m[0m
  [31m-        if (($handle = fopen($request->file->getRealPath(), 'r')) !== false) {[0m
  [35;1m[39m[0m
  [31m-            while (($data = fgetcsv($handle, 0, ',')) !== false) {[0m
  [35;1m[39m[0m
  [31m-                if ($row_i > 0) {[0m
  [35;1m[39m[0m
  [31m-                    $grid_cell = $data[0];[0m
  [35;1m[39m[0m
  [31m-                    $label_class = $data[1];[0m
  [35;1m[39m[0m
  [31m-                    $weight = (array_key_exists(2, $data)) ? $data[2] : null;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                    if ($grid_cells->has($grid_cell)) {[0m
  [35;1m[39m[0m
  [31m-                        $grid_cell = $grid_cells[$grid_cell];[0m
  [35;1m[39m[0m
  [31m-                        $label_class = $label_classes->firstWhere('identifier', $label_class);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                        $label_evidence[] = [[0m
  [35;1m[39m[0m
  [31m-                            'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                            'grid_cell_id' => $grid_cell,[0m
  [35;1m[39m[0m
  [31m-                            'label_class_id' => $label_class->id,[0m
  [35;1m[39m[0m
  [31m-                            'weight' => $weight,[0m
  [35;1m[39m[0m
  [31m-                        ];[0m
  [35;1m[39m[0m
  [31m-                    }[0m
  [35;1m[39m[0m
  [31m-                }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                $row_i++;[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $register = DB::transaction(function () use ($request, $label_evidence) {[0m
  [35;1m[39m[0m
  [31m-            $register = auth()->user()->currentTeam->registers()->create([[0m
  [35;1m[39m[0m
  [31m-                'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-                'title' => $request->title,[0m
  [35;1m[39m[0m
  [31m-                'description' => $request->description,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $register->datasets()->attach($request->datasets);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $chunks = array_chunk($label_evidence, 25000);[0m
  [35;1m[39m[0m
  [31m-            foreach ($chunks as $chunk) {[0m
  [35;1m[39m[0m
  [31m-                $register->labelEvidence()->createMany($chunk);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return $register;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('data.registers.show', $register);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function destroy(Request $request, Register $register)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $register->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return back();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Http\Resources\GridCellResource;[39m[0m
  [32m+use App\Http\Resources\RegisterResource;[39m[0m
  [32m+use App\Models\Register;[39m[0m
  [32m+use App\Rules\DatasetsCompatible;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+[39m[0m
  [32m+class RegisterController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function show(Request $request, Register $register)[39m[0m
  [32m+    {[39m[0m
  [32m+        $register = $register->load(['team', 'team.defaultLabelClass', 'team.labelClasses', 'datasets']);[39m[0m
  [32m+        $pagination = ($register->datasets->count() === 1) ? 9 : 10;[39m[0m
  [32m+        $grid_cells = $register->datasets[0]->gridCells()->paginate($pagination);[39m[0m
  [32m+[39m[0m
  [32m+        return Inertia::render('Data/Registers/Show', [[39m[0m
  [32m+            'register' => RegisterResource::make($register),[39m[0m
  [32m+            'grid_cells' => GridCellResource::collection($grid_cells),[39m[0m
  [32m+            'label_evidence' => $register->labelEvidence()->whereIn('grid_cell_id', collect($grid_cells->items())->pluck('id'))->get(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function store(Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        $request->validateWithBag('importRegister', [[39m[0m
  [32m+            'datasets' => ['required', 'array', 'min:1', 'max:2', new DatasetsCompatible],[39m[0m
  [32m+            'datasets.*' => ['integer', 'exists:App\Models\Dataset,id'],[39m[0m
  [32m+            'title' => ['required'],[39m[0m
  [32m+            'description' => ['nullable'],[39m[0m
  [32m+            'label_identifiers' => ['required', 'array'],[39m[0m
  [32m+            'label_identifiers.*.label_class_id' => ['required', 'exists:App\Models\LabelClass,id'],[39m[0m
  [32m+            'label_identifiers.*.identifier' => ['required'],[39m[0m
  [32m+            'file' => ['required', 'file', 'mimes:csv'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $datasets = auth()->user()->currentTeam->datasets()->find($request->datasets);[39m[0m
  [32m+        $grid_cells = $datasets[0]->gridCells()->pluck('id', 'name');[39m[0m
  [32m+[39m[0m
  [32m+        $label_classes = auth()->user()->currentTeam->labelClasses;[39m[0m
  [32m+        foreach ($request->label_identifiers as $label_identifier) {[39m[0m
  [32m+            $label_class = $label_classes->firstWhere('id', $label_identifier['label_class_id']);[39m[0m
  [32m+[39m[0m
  [32m+            if ($label_class->identifier !== $label_identifier['identifier']) {[39m[0m
  [32m+                $label_class->identifier = $label_identifier['identifier'];[39m[0m
  [32m+                $label_class->save();[39m[0m
  [32m+            }[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $row_i = 0;[39m[0m
  [32m+        $label_evidence = [];[39m[0m
  [32m+        if (($handle = fopen($request->file->getRealPath(), 'r')) !== false) {[39m[0m
  [32m+            while (($data = fgetcsv($handle, 0, ',')) !== false) {[39m[0m
  [32m+                if ($row_i > 0) {[39m[0m
  [32m+                    $grid_cell = $data[0];[39m[0m
  [32m+                    $label_class = $data[1];[39m[0m
  [32m+                    $weight = (array_key_exists(2, $data)) ? $data[2] : null;[39m[0m
  [32m+[39m[0m
  [32m+                    if ($grid_cells->has($grid_cell)) {[39m[0m
  [32m+                        $grid_cell = $grid_cells[$grid_cell];[39m[0m
  [32m+                        $label_class = $label_classes->firstWhere('identifier', $label_class);[39m[0m
  [32m+[39m[0m
  [32m+                        $label_evidence[] = [[39m[0m
  [32m+                            'user_id' => auth()->id(),[39m[0m
  [32m+                            'grid_cell_id' => $grid_cell,[39m[0m
  [32m+                            'label_class_id' => $label_class->id,[39m[0m
  [32m+                            'weight' => $weight,[39m[0m
  [32m+                        ];[39m[0m
  [32m+                    }[39m[0m
  [32m+                }[39m[0m
  [32m+[39m[0m
  [32m+                $row_i++;[39m[0m
  [32m+            }[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $register = DB::transaction(function () use ($request, $label_evidence) {[39m[0m
  [32m+            $register = auth()->user()->currentTeam->registers()->create([[39m[0m
  [32m+                'user_id' => auth()->id(),[39m[0m
  [32m+                'title' => $request->title,[39m[0m
  [32m+                'description' => $request->description,[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $register->datasets()->attach($request->datasets);[39m[0m
  [32m+[39m[0m
  [32m+            $chunks = array_chunk($label_evidence, 25000);[39m[0m
  [32m+            foreach ($chunks as $chunk) {[39m[0m
  [32m+                $register->labelEvidence()->createMany($chunk);[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            return $register;[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        return redirect()->route('data.registers.show', $register);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function destroy(Request $request, Register $register)[39m[0m
  [32m+    {[39m[0m
  [32m+        $register->delete();[39m[0m
  [32m+[39m[0m
  [32m+        return back();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Controllers/TeamController.php [90m                                braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m47 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m47 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Controllers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Gate;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Inertia;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TeamController extends Controller[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function index()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return Inertia::render('Teams/Index', [[0m
  [35;1m[39m[0m
  [31m-            'teams' => auth()->user()->allTeams(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Show the team management screen.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @param  int  $teamId[0m
  [35;1m[39m[0m
  [31m-     * @return \Inertia\Response[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function show(Request $request, $teamId)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $team = Jetstream::newTeamModel()->findOrFail($teamId);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Gate::authorize('view', $team);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return Jetstream::inertia()->render($request, 'Teams/Show', [[0m
  [35;1m[39m[0m
  [31m-            'team' => $team->load(['owner', 'users', 'teamInvitations', 'defaultLabelClass', 'labelClasses' => function ($query) {[0m
  [35;1m[39m[0m
  [31m-                $query->orderBy('created_at', 'asc');[0m
  [35;1m[39m[0m
  [31m-            }]),[0m
  [35;1m[39m[0m
  [31m-            'availableRoles' => array_values(Jetstream::$roles),[0m
  [35;1m[39m[0m
  [31m-            'availablePermissions' => Jetstream::$permissions,[0m
  [35;1m[39m[0m
  [31m-            'defaultPermissions' => Jetstream::$defaultPermissions,[0m
  [35;1m[39m[0m
  [31m-            'permissions' => [[0m
  [35;1m[39m[0m
  [31m-                'canAddTeamMembers' => Gate::check('addTeamMember', $team),[0m
  [35;1m[39m[0m
  [31m-                'canDeleteTeam' => Gate::check('delete', $team),[0m
  [35;1m[39m[0m
  [31m-                'canRemoveTeamMembers' => Gate::check('removeTeamMember', $team),[0m
  [35;1m[39m[0m
  [31m-                'canUpdateTeam' => Gate::check('update', $team),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Controllers;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Support\Facades\Gate;[39m[0m
  [32m+use Inertia\Inertia;[39m[0m
  [32m+use Laravel\Jetstream\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+class TeamController extends Controller[39m[0m
  [32m+{[39m[0m
  [32m+    public function index()[39m[0m
  [32m+    {[39m[0m
  [32m+        return Inertia::render('Teams/Index', [[39m[0m
  [32m+            'teams' => auth()->user()->allTeams(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Show the team management screen.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @param  int  $teamId[39m[0m
  [32m+     * @return \Inertia\Response[39m[0m
  [32m+     */[39m[0m
  [32m+    public function show(Request $request, $teamId)[39m[0m
  [32m+    {[39m[0m
  [32m+        $team = Jetstream::newTeamModel()->findOrFail($teamId);[39m[0m
  [32m+[39m[0m
  [32m+        Gate::authorize('view', $team);[39m[0m
  [32m+[39m[0m
  [32m+        return Jetstream::inertia()->render($request, 'Teams/Show', [[39m[0m
  [32m+            'team' => $team->load(['owner', 'users', 'teamInvitations', 'defaultLabelClass', 'labelClasses' => function ($query) {[39m[0m
  [32m+                $query->orderBy('created_at', 'asc');[39m[0m
  [32m+            }]),[39m[0m
  [32m+            'availableRoles' => array_values(Jetstream::$roles),[39m[0m
  [32m+            'availablePermissions' => Jetstream::$permissions,[39m[0m
  [32m+            'defaultPermissions' => Jetstream::$defaultPermissions,[39m[0m
  [32m+            'permissions' => [[39m[0m
  [32m+                'canAddTeamMembers' => Gate::check('addTeamMember', $team),[39m[0m
  [32m+                'canDeleteTeam' => Gate::check('delete', $team),[39m[0m
  [32m+                'canRemoveTeamMembers' => Gate::check('removeTeamMember', $team),[39m[0m
  [32m+                'canUpdateTeam' => Gate::check('update', $team),[39m[0m
  [32m+            ],[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Kernel.php [90m                                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m69 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m69 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Http\Kernel as HttpKernel;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Kernel extends HttpKernel[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The application's global HTTP middleware stack.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * These middleware are run during every request to your application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[39m[31m<int, class-string|string>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $middleware = [[0m
  [35;1m[39m[0m
  [31m-        // \App\Http\Middleware\TrustHosts::class,[0m
  [35;1m[39m[0m
  [31m-        \App\Http\Middleware\TrustProxies::class,[0m
  [35;1m[39m[0m
  [31m-        \Illuminate\Http\Middleware\HandleCors::class,[0m
  [35;1m[39m[0m
  [31m-        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,[0m
  [35;1m[39m[0m
  [31m-        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,[0m
  [35;1m[39m[0m
  [31m-        \App\Http\Middleware\TrimStrings::class,[0m
  [35;1m[39m[0m
  [31m-        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The application's route middleware groups.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array<string, array[39m[31m<int, class-string|string>[39m[31m>[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $middlewareGroups = [[0m
  [35;1m[39m[0m
  [31m-        'web' => [[0m
  [35;1m[39m[0m
  [31m-            \App\Http\Middleware\EncryptCookies::class,[0m
  [35;1m[39m[0m
  [31m-            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,[0m
  [35;1m[39m[0m
  [31m-            \Illuminate\Session\Middleware\StartSession::class,[0m
  [35;1m[39m[0m
  [31m-            \Laravel\Jetstream\Http\Middleware\AuthenticateSession::class,[0m
  [35;1m[39m[0m
  [31m-            \Illuminate\View\Middleware\ShareErrorsFromSession::class,[0m
  [35;1m[39m[0m
  [31m-            \App\Http\Middleware\VerifyCsrfToken::class,[0m
  [35;1m[39m[0m
  [31m-            \Illuminate\Routing\Middleware\SubstituteBindings::class,[0m
  [35;1m[39m[0m
  [31m-            \App\Http\Middleware\HandleInertiaRequests::class,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'api' => [[0m
  [35;1m[39m[0m
  [31m-            // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,[0m
  [35;1m[39m[0m
  [31m-            'throttle:api',[0m
  [35;1m[39m[0m
  [31m-            \Illuminate\Routing\Middleware\SubstituteBindings::class,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The application's route middleware.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * These middleware may be assigned to groups or used individually.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[39m[31m<string, class-string|string>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $routeMiddleware = [[0m
  [35;1m[39m[0m
  [31m-        'auth' => \App\Http\Middleware\Authenticate::class,[0m
  [35;1m[39m[0m
  [31m-        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,[0m
  [35;1m[39m[0m
  [31m-        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,[0m
  [35;1m[39m[0m
  [31m-        'can' => \Illuminate\Auth\Middleware\Authorize::class,[0m
  [35;1m[39m[0m
  [31m-        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,[0m
  [35;1m[39m[0m
  [31m-        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,[0m
  [35;1m[39m[0m
  [31m-        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,[0m
  [35;1m[39m[0m
  [31m-        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,[0m
  [35;1m[39m[0m
  [31m-        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,[0m
  [35;1m[39m[0m
  [31m-        'team' => \App\Http\Middleware\EnsureHasTeam::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Foundation\Http\Kernel as HttpKernel;[39m[0m
  [32m+[39m[0m
  [32m+class Kernel extends HttpKernel[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The application's global HTTP middleware stack.[39m[0m
  [32m+     *[39m[0m
  [32m+     * These middleware are run during every request to your application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[32m<int, class-string|string>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $middleware = [[39m[0m
  [32m+        // \App\Http\Middleware\TrustHosts::class,[39m[0m
  [32m+        \App\Http\Middleware\TrustProxies::class,[39m[0m
  [32m+        \Illuminate\Http\Middleware\HandleCors::class,[39m[0m
  [32m+        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,[39m[0m
  [32m+        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,[39m[0m
  [32m+        \App\Http\Middleware\TrimStrings::class,[39m[0m
  [32m+        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The application's route middleware groups.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array<string, array[39m[32m<int, class-string|string>[39m[32m>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $middlewareGroups = [[39m[0m
  [32m+        'web' => [[39m[0m
  [32m+            \App\Http\Middleware\EncryptCookies::class,[39m[0m
  [32m+            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,[39m[0m
  [32m+            \Illuminate\Session\Middleware\StartSession::class,[39m[0m
  [32m+            \Laravel\Jetstream\Http\Middleware\AuthenticateSession::class,[39m[0m
  [32m+            \Illuminate\View\Middleware\ShareErrorsFromSession::class,[39m[0m
  [32m+            \App\Http\Middleware\VerifyCsrfToken::class,[39m[0m
  [32m+            \Illuminate\Routing\Middleware\SubstituteBindings::class,[39m[0m
  [32m+            \App\Http\Middleware\HandleInertiaRequests::class,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'api' => [[39m[0m
  [32m+            // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,[39m[0m
  [32m+            'throttle:api',[39m[0m
  [32m+            \Illuminate\Routing\Middleware\SubstituteBindings::class,[39m[0m
  [32m+        ],[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The application's route middleware.[39m[0m
  [32m+     *[39m[0m
  [32m+     * These middleware may be assigned to groups or used individually.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[32m<string, class-string|string>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $routeMiddleware = [[39m[0m
  [32m+        'auth' => \App\Http\Middleware\Authenticate::class,[39m[0m
  [32m+        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,[39m[0m
  [32m+        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,[39m[0m
  [32m+        'can' => \Illuminate\Auth\Middleware\Authorize::class,[39m[0m
  [32m+        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,[39m[0m
  [32m+        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,[39m[0m
  [32m+        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,[39m[0m
  [32m+        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,[39m[0m
  [32m+        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,[39m[0m
  [32m+        'team' => \App\Http\Middleware\EnsureHasTeam::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/Authenticate.php [90mbraces, line_ending, unary_operator_spaces, not_operator_with_successor_space[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m21 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m21 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Auth\Middleware\Authenticate as Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Authenticate extends Middleware[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the path the user should be redirected to when they are not authenticated.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return string|null[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function redirectTo($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! $request->expectsJson()) {[0m
  [35;1m[39m[0m
  [31m-            return route('login');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Auth\Middleware\Authenticate as Middleware;[39m[0m
  [32m+[39m[0m
  [32m+class Authenticate extends Middleware[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the path the user should be redirected to when they are not authenticated.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return string|null[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function redirectTo($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! $request->expectsJson()) {[39m[0m
  [32m+            return route('login');[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/EncryptCookies.php [90m                                                        braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m17 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m17 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Cookie\Middleware\EncryptCookies as Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class EncryptCookies extends Middleware[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The names of the cookies that should not be encrypted.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[39m[31m<int, string>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $except = [[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Cookie\Middleware\EncryptCookies as Middleware;[39m[0m
  [32m+[39m[0m
  [32m+class EncryptCookies extends Middleware[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The names of the cookies that should not be encrypted.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[32m<int, string>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $except = [[39m[0m
  [32m+        //[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/EnsureHasTeam.php [90m                                                         braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Closure;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class EnsureHasTeam[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Handle an incoming request.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function handle(Request $request, Closure $next)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (auth()->user()->allTeams()->isEmpty()) {[0m
  [35;1m[39m[0m
  [31m-            return redirect()->route('teams.index');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->ensureUserHasCurrentTeamSet();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return $next($request);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    private function ensureUserHasCurrentTeamSet()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        // If the user currently has no current team set, set the current team to their first team.[0m
  [35;1m[39m[0m
  [31m-        if (is_null(auth()->user()->current_team_id)) {[0m
  [35;1m[39m[0m
  [31m-            auth()->user()->switchTeam(auth()->user()->allTeams()->first());[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Closure;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+[39m[0m
  [32m+class EnsureHasTeam[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Handle an incoming request.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next[39m[0m
  [32m+     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse[39m[0m
  [32m+     */[39m[0m
  [32m+    public function handle(Request $request, Closure $next)[39m[0m
  [32m+    {[39m[0m
  [32m+        if (auth()->user()->allTeams()->isEmpty()) {[39m[0m
  [32m+            return redirect()->route('teams.index');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $this->ensureUserHasCurrentTeamSet();[39m[0m
  [32m+[39m[0m
  [32m+        return $next($request);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    private function ensureUserHasCurrentTeamSet()[39m[0m
  [32m+    {[39m[0m
  [32m+        // If the user currently has no current team set, set the current team to their first team.[39m[0m
  [32m+        if (is_null(auth()->user()->current_team_id)) {[39m[0m
  [32m+            auth()->user()->switchTeam(auth()->user()->allTeams()->first());[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/HandleInertiaRequests.php [90m                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m46 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m46 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Inertia\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class HandleInertiaRequests extends Middleware[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The root template that's loaded on the first page visit.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @see https://inertiajs.com/server-side-setup#root-template[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var string[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $rootView = 'app';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determines the current asset version.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @see https://inertiajs.com/asset-versioning[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return string|null[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function version(Request $request): ?string[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return parent::version($request);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Defines the props that are shared by default.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @see https://inertiajs.com/shared-data[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function share(Request $request): array[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return array_merge(parent::share($request), [[0m
  [35;1m[39m[0m
  [31m-            //[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Inertia\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+class HandleInertiaRequests extends Middleware[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The root template that's loaded on the first page visit.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @see https://inertiajs.com/server-side-setup#root-template[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var string[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $rootView = 'app';[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determines the current asset version.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @see https://inertiajs.com/asset-versioning[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return string|null[39m[0m
  [32m+     */[39m[0m
  [32m+    public function version(Request $request): ?string[39m[0m
  [32m+    {[39m[0m
  [32m+        return parent::version($request);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Defines the props that are shared by default.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @see https://inertiajs.com/shared-data[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array[39m[0m
  [32m+     */[39m[0m
  [32m+    public function share(Request $request): array[39m[0m
  [32m+    {[39m[0m
  [32m+        return array_merge(parent::share($request), [[39m[0m
  [32m+            //[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/PreventRequestsDuringMaintenance.php [90m                                      braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m17 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m17 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance as Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class PreventRequestsDuringMaintenance extends Middleware[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The URIs that should be reachable while maintenance mode is enabled.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[39m[31m<int, string>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $except = [[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance as Middleware;[39m[0m
  [32m+[39m[0m
  [32m+class PreventRequestsDuringMaintenance extends Middleware[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The URIs that should be reachable while maintenance mode is enabled.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[32m<int, string>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $except = [[39m[0m
  [32m+        //[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/RedirectIfAuthenticated.php [90m                                               braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Providers\RouteServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Closure;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Auth;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class RedirectIfAuthenticated[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Handle an incoming request.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next[0m
  [35;1m[39m[0m
  [31m-     * @param  string|null  ...$guards[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function handle(Request $request, Closure $next, ...$guards)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $guards = empty($guards) ? [null] : $guards;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        foreach ($guards as $guard) {[0m
  [35;1m[39m[0m
  [31m-            if (Auth::guard($guard)->check()) {[0m
  [35;1m[39m[0m
  [31m-                return redirect(RouteServiceProvider::HOME);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return $next($request);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use App\Providers\RouteServiceProvider;[39m[0m
  [32m+use Closure;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Support\Facades\Auth;[39m[0m
  [32m+[39m[0m
  [32m+class RedirectIfAuthenticated[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Handle an incoming request.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next[39m[0m
  [32m+     * @param  string|null  ...$guards[39m[0m
  [32m+     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse[39m[0m
  [32m+     */[39m[0m
  [32m+    public function handle(Request $request, Closure $next, ...$guards)[39m[0m
  [32m+    {[39m[0m
  [32m+        $guards = empty($guards) ? [null] : $guards;[39m[0m
  [32m+[39m[0m
  [32m+        foreach ($guards as $guard) {[39m[0m
  [32m+            if (Auth::guard($guard)->check()) {[39m[0m
  [32m+                return redirect(RouteServiceProvider::HOME);[39m[0m
  [32m+            }[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        return $next($request);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/TrimStrings.php [90m                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Http\Middleware\TrimStrings as Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TrimStrings extends Middleware[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The names of the attributes that should not be trimmed.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[39m[31m<int, string>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $except = [[0m
  [35;1m[39m[0m
  [31m-        'current_password',[0m
  [35;1m[39m[0m
  [31m-        'password',[0m
  [35;1m[39m[0m
  [31m-        'password_confirmation',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Foundation\Http\Middleware\TrimStrings as Middleware;[39m[0m
  [32m+[39m[0m
  [32m+class TrimStrings extends Middleware[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The names of the attributes that should not be trimmed.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[32m<int, string>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $except = [[39m[0m
  [32m+        'current_password',[39m[0m
  [32m+        'password',[39m[0m
  [32m+        'password_confirmation',[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/TrustHosts.php [90m                                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m20 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m20 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Middleware\TrustHosts as Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TrustHosts extends Middleware[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the host patterns that should be trusted.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return array[39m[31m<int, string|null>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function hosts()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            $this->allSubdomainsOfApplicationUrl(),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Middleware\TrustHosts as Middleware;[39m[0m
  [32m+[39m[0m
  [32m+class TrustHosts extends Middleware[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the host patterns that should be trusted.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return array[39m[32m<int, string|null>[39m[0m
  [32m+     */[39m[0m
  [32m+    public function hosts()[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            $this->allSubdomainsOfApplicationUrl(),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/TrustProxies.php [90m                                                          braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m28 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m28 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Middleware\TrustProxies as Middleware;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TrustProxies extends Middleware[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The trusted proxies for this application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[39m[31m<int, string>[39m[31m|string|null[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $proxies;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The headers that should be used to detect proxies.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var int[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $headers =[0m
  [35;1m[39m[0m
  [31m-        Request::HEADER_X_FORWARDED_FOR |[0m
  [35;1m[39m[0m
  [31m-        Request::HEADER_X_FORWARDED_HOST |[0m
  [35;1m[39m[0m
  [31m-        Request::HEADER_X_FORWARDED_PORT |[0m
  [35;1m[39m[0m
  [31m-        Request::HEADER_X_FORWARDED_PROTO |[0m
  [35;1m[39m[0m
  [31m-        Request::HEADER_X_FORWARDED_AWS_ELB;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Middleware\TrustProxies as Middleware;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+[39m[0m
  [32m+class TrustProxies extends Middleware[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The trusted proxies for this application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[32m<int, string>[39m[32m|string|null[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $proxies;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The headers that should be used to detect proxies.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var int[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $headers =[39m[0m
  [32m+        Request::HEADER_X_FORWARDED_FOR |[39m[0m
  [32m+        Request::HEADER_X_FORWARDED_HOST |[39m[0m
  [32m+        Request::HEADER_X_FORWARDED_PORT |[39m[0m
  [32m+        Request::HEADER_X_FORWARDED_PROTO |[39m[0m
  [32m+        Request::HEADER_X_FORWARDED_AWS_ELB;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Middleware/VerifyCsrfToken.php [90m                                                       braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m17 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m17 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class VerifyCsrfToken extends Middleware[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The URIs that should be excluded from CSRF verification.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[39m[31m<int, string>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $except = [[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Middleware;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;[39m[0m
  [32m+[39m[0m
  [32m+class VerifyCsrfToken extends Middleware[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The URIs that should be excluded from CSRF verification.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[32m<int, string>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $except = [[39m[0m
  [32m+        //[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Requests/StoreDatasetRequest.php [90m                                                     braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m68 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m68 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Requests;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\TeamDetectionTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Http\FormRequest;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\Rule;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class StoreDatasetRequest extends FormRequest[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    protected $errorBag = 'createDataset';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine if the user is authorized to make this request.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return bool[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function authorize()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return true;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the validation rules that apply to the request.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return array[39m[31m<string, mixed>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function rules()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $team = auth()->user()->currentTeam;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'datasets' => [[0m
  [35;1m[39m[0m
  [31m-                'required', 'array',[0m
  [35;1m[39m[0m
  [31m-                Rule::when($team->detection_type === TeamDetectionTypeEnum::Classification, [[0m
  [35;1m[39m[0m
  [31m-                    'min:1',[0m
  [35;1m[39m[0m
  [31m-                ]),[0m
  [35;1m[39m[0m
  [31m-                Rule::when($team->detection_type === TeamDetectionTypeEnum::ChangeDetection, [[0m
  [35;1m[39m[0m
  [31m-                    'size:2',[0m
  [35;1m[39m[0m
  [31m-                ]),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'datasets.*' => [[0m
  [35;1m[39m[0m
  [31m-                'integer', 'exists:App\Models\SourceDataset,id',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'title' => [[0m
  [35;1m[39m[0m
  [31m-                'required',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'description' => [[0m
  [35;1m[39m[0m
  [31m-                'nullable',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'surface_usage_filters' => [[0m
  [35;1m[39m[0m
  [31m-                'nullable', 'array',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'surface_usage_filters.*' => [[0m
  [35;1m[39m[0m
  [31m-                'integer', 'exists:App\Models\Filter,id',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'surface_usage_filter_mask' => [[0m
  [35;1m[39m[0m
  [31m-                'nullable', 'boolean',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'region_filters' => [[0m
  [35;1m[39m[0m
  [31m-                'nullable', 'array',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'region_filters.*' => [[0m
  [35;1m[39m[0m
  [31m-                'integer', 'exists:App\Models\Region,id',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Requests;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\TeamDetectionTypeEnum;[39m[0m
  [32m+use Illuminate\Foundation\Http\FormRequest;[39m[0m
  [32m+use Illuminate\Validation\Rule;[39m[0m
  [32m+[39m[0m
  [32m+class StoreDatasetRequest extends FormRequest[39m[0m
  [32m+{[39m[0m
  [32m+    protected $errorBag = 'createDataset';[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine if the user is authorized to make this request.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return bool[39m[0m
  [32m+     */[39m[0m
  [32m+    public function authorize()[39m[0m
  [32m+    {[39m[0m
  [32m+        return true;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the validation rules that apply to the request.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return array[39m[32m<string, mixed>[39m[0m
  [32m+     */[39m[0m
  [32m+    public function rules()[39m[0m
  [32m+    {[39m[0m
  [32m+        $team = auth()->user()->currentTeam;[39m[0m
  [32m+[39m[0m
  [32m+        return [[39m[0m
  [32m+            'datasets' => [[39m[0m
  [32m+                'required', 'array',[39m[0m
  [32m+                Rule::when($team->detection_type === TeamDetectionTypeEnum::Classification, [[39m[0m
  [32m+                    'min:1',[39m[0m
  [32m+                ]),[39m[0m
  [32m+                Rule::when($team->detection_type === TeamDetectionTypeEnum::ChangeDetection, [[39m[0m
  [32m+                    'size:2',[39m[0m
  [32m+                ]),[39m[0m
  [32m+            ],[39m[0m
  [32m+            'datasets.*' => [[39m[0m
  [32m+                'integer', 'exists:App\Models\SourceDataset,id',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'title' => [[39m[0m
  [32m+                'required',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'description' => [[39m[0m
  [32m+                'nullable',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'surface_usage_filters' => [[39m[0m
  [32m+                'nullable', 'array',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'surface_usage_filters.*' => [[39m[0m
  [32m+                'integer', 'exists:App\Models\Filter,id',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'surface_usage_filter_mask' => [[39m[0m
  [32m+                'nullable', 'boolean',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'region_filters' => [[39m[0m
  [32m+                'nullable', 'array',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'region_filters.*' => [[39m[0m
  [32m+                'integer', 'exists:App\Models\Region,id',[39m[0m
  [32m+            ],[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Requests/StoreLabelEvidenceRequest.php [90mbraces, concat_space, line_ending, no_trailing_whitespace, trailin[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m58 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m57 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Requests;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\LabelEvidenceTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\Rules\Enum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Http\FormRequest;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Validation\Rule;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class StoreLabelEvidenceRequest extends FormRequest[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine if the user is authorized to make this request.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return bool[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function authorize()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return true;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the validation rules that apply to the request.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return array[39m[31m<string, mixed>[39m[31m[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function rules()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'dataset' => [[0m
  [35;1m[39m[0m
  [31m-                'required', 'integer', 'exists:App\Models\Dataset,id'[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'title' => [[0m
  [35;1m[39m[0m
  [31m-                'required'[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'description' => [[0m
  [35;1m[39m[0m
  [31m-                'nullable'[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'type' => [[0m
  [35;1m[39m[0m
  [31m-                'required', new Enum(LabelEvidenceTypeEnum::class)[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'register_file' => [[0m
  [35;1m[39m[0m
  [31m-                // 'required_if:type,==,' . LabelEvidenceTypeEnum::Register->value,[0m
  [35;1m[39m[0m
  [31m-                'nullable', 'file', 'mimes:txt,csv'[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'register_label_identifiers' => [[0m
  [35;1m[39m[0m
  [31m-                'required_if:type,==,' . LabelEvidenceTypeEnum::Register->value, [0m
  [35;1m[39m[0m
  [31m-                'array',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'register_label_identifiers.*.id' => [[0m
  [35;1m[39m[0m
  [31m-                'required', 'exists:App\Models\LabelClass,id'[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'register_label_identifiers.*.identifier' => [[0m
  [35;1m[39m[0m
  [31m-                'required'[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Requests;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\LabelEvidenceTypeEnum;[39m[0m
  [32m+use Illuminate\Foundation\Http\FormRequest;[39m[0m
  [32m+use Illuminate\Validation\Rules\Enum;[39m[0m
  [32m+[39m[0m
  [32m+class StoreLabelEvidenceRequest extends FormRequest[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine if the user is authorized to make this request.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return bool[39m[0m
  [32m+     */[39m[0m
  [32m+    public function authorize()[39m[0m
  [32m+    {[39m[0m
  [32m+        return true;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the validation rules that apply to the request.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return array[39m[32m<string, mixed>[39m[0m
  [32m+     */[39m[0m
  [32m+    public function rules()[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'dataset' => [[39m[0m
  [32m+                'required', 'integer', 'exists:App\Models\Dataset,id',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'title' => [[39m[0m
  [32m+                'required',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'description' => [[39m[0m
  [32m+                'nullable',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'type' => [[39m[0m
  [32m+                'required', new Enum(LabelEvidenceTypeEnum::class),[39m[0m
  [32m+            ],[39m[0m
  [32m+            'register_file' => [[39m[0m
  [32m+                // 'required_if:type,==,' . LabelEvidenceTypeEnum::Register->value,[39m[0m
  [32m+                'nullable', 'file', 'mimes:txt,csv',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'register_label_identifiers' => [[39m[0m
  [32m+                'required_if:type,==,'.LabelEvidenceTypeEnum::Register->value,[39m[0m
  [32m+                'array',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'register_label_identifiers.*.id' => [[39m[0m
  [32m+                'required', 'exists:App\Models\LabelClass,id',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'register_label_identifiers.*.identifier' => [[39m[0m
  [32m+                'required',[39m[0m
  [32m+            ],[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/AnnotationCampaignResource.php [90m                                             braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class AnnotationCampaignResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'title' => $this->title,[0m
  [35;1m[39m[0m
  [31m-            'description' => $this->description,[0m
  [35;1m[39m[0m
  [31m-            'team' => $this->whenLoaded('team'),[0m
  [35;1m[39m[0m
  [31m-            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class AnnotationCampaignResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'title' => $this->title,[39m[0m
  [32m+            'description' => $this->description,[39m[0m
  [32m+            'team' => $this->whenLoaded('team'),[39m[0m
  [32m+            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/DatasetGridCellResource.php [90m                                                braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\MaskPolygon;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetGridCellResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public $polygon;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function __construct($resource, MaskPolygon $polygon = null)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        parent::__construct($resource);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->polygon = $polygon;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'title' => $this->gridCell->title,[0m
  [35;1m[39m[0m
  [31m-            'url' => "{$this->dataset->url}&VERSION=1.3.0&REQUEST=GetMap&LAYERS={$this->dataset->layer}&CRS={$this->dataset->crs}&WIDTH=500&HEIGHT=500&FORMAT=image/png&styles&bbox={$this->gridCell->x_min},{$this->gridCell->y_min},{$this->gridCell->x_max},{$this->gridCell->y_max}",[0m
  [35;1m[39m[0m
  [31m-            'polygon' => $this->whenNotNull($this->polygon?->getCssPolygon()),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\MaskPolygon;[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetGridCellResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    public $polygon;[39m[0m
  [32m+[39m[0m
  [32m+    public function __construct($resource, MaskPolygon $polygon = null)[39m[0m
  [32m+    {[39m[0m
  [32m+        parent::__construct($resource);[39m[0m
  [32m+[39m[0m
  [32m+        $this->polygon = $polygon;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'title' => $this->gridCell->title,[39m[0m
  [32m+            'url' => "{$this->dataset->url}&VERSION=1.3.0&REQUEST=GetMap&LAYERS={$this->dataset->layer}&CRS={$this->dataset->crs}&WIDTH=500&HEIGHT=500&FORMAT=image/png&styles&bbox={$this->gridCell->x_min},{$this->gridCell->y_min},{$this->gridCell->x_max},{$this->gridCell->y_max}",[39m[0m
  [32m+            'polygon' => $this->whenNotNull($this->polygon?->getCssPolygon()),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/DatasetGridResource.php [90m                             braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m27 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m27 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetGridResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'gridCells' => [[0m
  [35;1m[39m[0m
  [31m-                DatasetGridCellResource::make($this->sourceGridCell, $this->sourcePolygon),[0m
  [35;1m[39m[0m
  [31m-                $this->when($this->changeGridCell, function () {[0m
  [35;1m[39m[0m
  [31m-                    return DatasetGridCellResource::make($this->changeGridCell, $this->changePolygon);[0m
  [35;1m[39m[0m
  [31m-                }),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetGridResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'gridCells' => [[39m[0m
  [32m+                DatasetGridCellResource::make($this->sourceGridCell, $this->sourcePolygon),[39m[0m
  [32m+                $this->when($this->changeGridCell, function () {[39m[0m
  [32m+                    return DatasetGridCellResource::make($this->changeGridCell, $this->changePolygon);[39m[0m
  [32m+                }),[39m[0m
  [32m+            ],[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/DatasetResource.php [90m                                                        braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m26 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m26 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'title' => $this->title,[0m
  [35;1m[39m[0m
  [31m-            'description' => $this->description,[0m
  [35;1m[39m[0m
  [31m-            'user' => UserResource::make($this->whenLoaded('user')),[0m
  [35;1m[39m[0m
  [31m-            'team' => TeamResource::make($this->whenLoaded('team')),[0m
  [35;1m[39m[0m
  [31m-            'gridCount' => $this->whenCounted('grids'),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'title' => $this->title,[39m[0m
  [32m+            'description' => $this->description,[39m[0m
  [32m+            'user' => UserResource::make($this->whenLoaded('user')),[39m[0m
  [32m+            'team' => TeamResource::make($this->whenLoaded('team')),[39m[0m
  [32m+            'gridCount' => $this->whenCounted('grids'),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/ExperimentDataResource.php [90m                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentDataResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'name' => $this->name,[0m
  [35;1m[39m[0m
  [31m-            'description' => $this->description,[0m
  [35;1m[39m[0m
  [31m-            'team' => TeamResource::make($this->whenLoaded('team')),[0m
  [35;1m[39m[0m
  [31m-            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentDataResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'name' => $this->name,[39m[0m
  [32m+            'description' => $this->description,[39m[0m
  [32m+            'team' => TeamResource::make($this->whenLoaded('team')),[39m[0m
  [32m+            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/ExperimentResource.php [90m                                                     braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Http;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'user_id' => $this->user_id,[0m
  [35;1m[39m[0m
  [31m-            'team_id' => $this->team_id,[0m
  [35;1m[39m[0m
  [31m-            'name' => $this->name,[0m
  [35;1m[39m[0m
  [31m-            'description' => $this->description,[0m
  [35;1m[39m[0m
  [31m-            'status' => $this->status->name,[0m
  [35;1m[39m[0m
  [31m-            'options' => $this->options,[0m
  [35;1m[39m[0m
  [31m-            'statistics' => $this->statistics,[0m
  [35;1m[39m[0m
  [31m-            'learning_curve_simple' => Http::get(config('services.api.url').'/experiments/'.$this->id.'/learning/simple')->json(),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+use Illuminate\Support\Facades\Http;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'user_id' => $this->user_id,[39m[0m
  [32m+            'team_id' => $this->team_id,[39m[0m
  [32m+            'name' => $this->name,[39m[0m
  [32m+            'description' => $this->description,[39m[0m
  [32m+            'status' => $this->status->name,[39m[0m
  [32m+            'options' => $this->options,[39m[0m
  [32m+            'statistics' => $this->statistics,[39m[0m
  [32m+            'learning_curve_simple' => Http::get(config('services.api.url').'/experiments/'.$this->id.'/learning/simple')->json(),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/GridCellResource.php [90m                                                       braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class GridCellResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'name' => $this->name,[0m
  [35;1m[39m[0m
  [31m-            'bbox' => "{$this->x_min},{$this->y_min},{$this->x_max},{$this->y_max}",[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class GridCellResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'name' => $this->name,[39m[0m
  [32m+            'bbox' => "{$this->x_min},{$this->y_min},{$this->x_max},{$this->y_max}",[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/LabelClassResource.php [90m                                                     braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelClassResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return parent::toArray($request);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class LabelClassResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return parent::toArray($request);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/LabelEvidenceLabelResource.php [90m                                             braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m22 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m22 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelEvidenceLabelResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'grid_id' => $this->grid_id,[0m
  [35;1m[39m[0m
  [31m-            'label_class_id' => $this->label_class_id,[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class LabelEvidenceLabelResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'grid_id' => $this->grid_id,[39m[0m
  [32m+            'label_class_id' => $this->label_class_id,[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/LabelEvidenceResource.php [90m                                                  braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m26 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m26 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelEvidenceResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'title' => $this->title,[0m
  [35;1m[39m[0m
  [31m-            'description' => $this->description,[0m
  [35;1m[39m[0m
  [31m-            'user' => UserResource::make($this->whenLoaded('user')),[0m
  [35;1m[39m[0m
  [31m-            'team' => TeamResource::make($this->whenLoaded('team')),[0m
  [35;1m[39m[0m
  [31m-            'dataset' => DatasetResource::make($this->whenLoaded('dataset')),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class LabelEvidenceResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'title' => $this->title,[39m[0m
  [32m+            'description' => $this->description,[39m[0m
  [32m+            'user' => UserResource::make($this->whenLoaded('user')),[39m[0m
  [32m+            'team' => TeamResource::make($this->whenLoaded('team')),[39m[0m
  [32m+            'dataset' => DatasetResource::make($this->whenLoaded('dataset')),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/PredictionResource.php [90m                                                     braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class PredictionResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'name' => $this->name,[0m
  [35;1m[39m[0m
  [31m-            'description' => $this->description,[0m
  [35;1m[39m[0m
  [31m-            'team' => TeamResource::make($this->whenLoaded('team')),[0m
  [35;1m[39m[0m
  [31m-            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class PredictionResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'name' => $this->name,[39m[0m
  [32m+            'description' => $this->description,[39m[0m
  [32m+            'team' => TeamResource::make($this->whenLoaded('team')),[39m[0m
  [32m+            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/RegisterResource.php [90m                                                       braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class RegisterResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'title' => $this->title,[0m
  [35;1m[39m[0m
  [31m-            'description' => $this->description,[0m
  [35;1m[39m[0m
  [31m-            'team' => $this->whenLoaded('team'),[0m
  [35;1m[39m[0m
  [31m-            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class RegisterResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'title' => $this->title,[39m[0m
  [32m+            'description' => $this->description,[39m[0m
  [32m+            'team' => $this->whenLoaded('team'),[39m[0m
  [32m+            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/TeamResource.php [90m                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m29 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m29 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TeamResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-            'title' => $this->title,[0m
  [35;1m[39m[0m
  [31m-            'description' => $this->description,[0m
  [35;1m[39m[0m
  [31m-            'detectionType' => $this->detection_type,[0m
  [35;1m[39m[0m
  [31m-            'owner' => UserResource::make($this->whenLoaded('user')),[0m
  [35;1m[39m[0m
  [31m-            'labelClasses' => LabelClassResource::collection($this->whenLoaded('labelClasses')),[0m
  [35;1m[39m[0m
  [31m-            'defaultLabelClass' => LabelClassResource::make($this->whenLoaded('defaultLabelClass')),[0m
  [35;1m[39m[0m
  [31m-            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[0m
  [35;1m[39m[0m
  [31m-            'labelEvidence' => $this->whenLoaded('labelEvidence'),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class TeamResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'id' => $this->id,[39m[0m
  [32m+            'title' => $this->title,[39m[0m
  [32m+            'description' => $this->description,[39m[0m
  [32m+            'detectionType' => $this->detection_type,[39m[0m
  [32m+            'owner' => UserResource::make($this->whenLoaded('user')),[39m[0m
  [32m+            'labelClasses' => LabelClassResource::collection($this->whenLoaded('labelClasses')),[39m[0m
  [32m+            'defaultLabelClass' => LabelClassResource::make($this->whenLoaded('defaultLabelClass')),[39m[0m
  [32m+            'datasets' => DatasetResource::collection($this->whenLoaded('datasets')),[39m[0m
  [32m+            'labelEvidence' => $this->whenLoaded('labelEvidence'),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Resources/UserResource.php [90m                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Resources;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Resources\Json\JsonResource;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class UserResource extends JsonResource[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Transform the resource into an array.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \Illuminate\Http\Request  $request[0m
  [35;1m[39m[0m
  [31m-     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function toArray($request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return parent::toArray($request);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Resources;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Http\Resources\Json\JsonResource;[39m[0m
  [32m+[39m[0m
  [32m+class UserResource extends JsonResource[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Transform the resource into an array.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \Illuminate\Http\Request  $request[39m[0m
  [32m+     * @return array|\Illuminate\Contracts\Support\Arrayable|\JsonSerializable[39m[0m
  [32m+     */[39m[0m
  [32m+    public function toArray($request)[39m[0m
  [32m+    {[39m[0m
  [32m+        return parent::toArray($request);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Http/Traits/CreateSubsetTrait.php [90mbraces, curly_braces_position, line_ending, unary_operator_spaces, not_opera[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m67 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m67 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Http\Traits;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\SubsetTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Region;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-trait CreateSubsetTrait[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public function createSubset(SubsetTypeEnum $type, Dataset $dataset, Request $request)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if ($type === SubsetTypeEnum::RandomSample) {[0m
  [35;1m[39m[0m
  [31m-            // Get the amount of Grid Cells in the selected Dataset.[0m
  [35;1m[39m[0m
  [31m-            $gridCellsCount = $dataset->gridCells()->count();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Check if provided Sample Size is a number or percentage.[0m
  [35;1m[39m[0m
  [31m-            // If it is a percentage convert the percentage into a number.[0m
  [35;1m[39m[0m
  [31m-            $number = $request->sample_size;[0m
  [35;1m[39m[0m
  [31m-            if (! is_numeric($number)) {[0m
  [35;1m[39m[0m
  [31m-                $number = round($gridCellsCount * (round(str_replace('%', '', $number) / 1) / 100));[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Limit the number to the amount of Grid Cells.[0m
  [35;1m[39m[0m
  [31m-            if ($number > $gridCellsCount) {[0m
  [35;1m[39m[0m
  [31m-                $number = $gridCellsCount;[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Get random Grid Cell IDs.[0m
  [35;1m[39m[0m
  [31m-            return $dataset->gridCells()->inRandomOrder()->take($number)->get();[0m
  [35;1m[39m[0m
  [31m-        } elseif ($type === SubsetTypeEnum::Regions) {[0m
  [35;1m[39m[0m
  [31m-            // Get the selected regions.[0m
  [35;1m[39m[0m
  [31m-            $regions = Region::findOrFail($request->regions);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Get the selected regions with the selected dataset year.[0m
  [35;1m[39m[0m
  [31m-            $regions = $regions->map(function ($region) use ($dataset) {[0m
  [35;1m[39m[0m
  [31m-                return Region::where('year', $dataset->year)->where([[0m
  [35;1m[39m[0m
  [31m-                    'name' => $region->name,[0m
  [35;1m[39m[0m
  [31m-                    'region_type' => $region->region_type,[0m
  [35;1m[39m[0m
  [31m-                ])->first() ?: $region;[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Get Grid Cells that are within the selected regions.[0m
  [35;1m[39m[0m
  [31m-            $gridCells = [];[0m
  [35;1m[39m[0m
  [31m-            $regions->each(function ($region) use ($dataset, &$gridCells) {[0m
  [35;1m[39m[0m
  [31m-                $gridCells[] = $dataset->gridCells()->whereRaw('ST_Intersects(grid_cells.geometry, ?)', $region->geometry)->get();[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Turn the Grid Cell array into a single array with no duplicates.[0m
  [35;1m[39m[0m
  [31m-            return $gridCells[0];[0m
  [35;1m[39m[0m
  [31m-        } elseif ($type === SubsetTypeEnum::File) {[0m
  [35;1m[39m[0m
  [31m-            // Get the Grid Cell names specified in the document.[0m
  [35;1m[39m[0m
  [31m-            $gridCellsNames = [];[0m
  [35;1m[39m[0m
  [31m-            if (($handle = fopen($request->file->getRealPath(), 'r')) !== false) {[0m
  [35;1m[39m[0m
  [31m-                while (($data = fgetcsv($handle, 0, ',')) !== false) {[0m
  [35;1m[39m[0m
  [31m-                    $gridCellsNames[] = $data[0];[0m
  [35;1m[39m[0m
  [31m-                }[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Search for the Grid Cell names in the available Grid Cells for the selected dataset.[0m
  [35;1m[39m[0m
  [31m-            return $dataset->gridCells()->whereIn('name', $gridCellsNames)->get();[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return null;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Http\Traits;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\SubsetTypeEnum;[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use App\Models\Region;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+[39m[0m
  [32m+trait CreateSubsetTrait[39m[0m
  [32m+{[39m[0m
  [32m+    public function createSubset(SubsetTypeEnum $type, Dataset $dataset, Request $request)[39m[0m
  [32m+    {[39m[0m
  [32m+        if ($type === SubsetTypeEnum::RandomSample) {[39m[0m
  [32m+            // Get the amount of Grid Cells in the selected Dataset.[39m[0m
  [32m+            $gridCellsCount = $dataset->gridCells()->count();[39m[0m
  [32m+[39m[0m
  [32m+            // Check if provided Sample Size is a number or percentage.[39m[0m
  [32m+            // If it is a percentage convert the percentage into a number.[39m[0m
  [32m+            $number = $request->sample_size;[39m[0m
  [32m+            if (! is_numeric($number)) {[39m[0m
  [32m+                $number = round($gridCellsCount * (round(str_replace('%', '', $number) / 1) / 100));[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            // Limit the number to the amount of Grid Cells.[39m[0m
  [32m+            if ($number > $gridCellsCount) {[39m[0m
  [32m+                $number = $gridCellsCount;[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            // Get random Grid Cell IDs.[39m[0m
  [32m+            return $dataset->gridCells()->inRandomOrder()->take($number)->get();[39m[0m
  [32m+        } elseif ($type === SubsetTypeEnum::Regions) {[39m[0m
  [32m+            // Get the selected regions.[39m[0m
  [32m+            $regions = Region::findOrFail($request->regions);[39m[0m
  [32m+[39m[0m
  [32m+            // Get the selected regions with the selected dataset year.[39m[0m
  [32m+            $regions = $regions->map(function ($region) use ($dataset) {[39m[0m
  [32m+                return Region::where('year', $dataset->year)->where([[39m[0m
  [32m+                    'name' => $region->name,[39m[0m
  [32m+                    'region_type' => $region->region_type,[39m[0m
  [32m+                ])->first() ?: $region;[39m[0m
  [32m+            });[39m[0m
  [32m+[39m[0m
  [32m+            // Get Grid Cells that are within the selected regions.[39m[0m
  [32m+            $gridCells = [];[39m[0m
  [32m+            $regions->each(function ($region) use ($dataset, &$gridCells) {[39m[0m
  [32m+                $gridCells[] = $dataset->gridCells()->whereRaw('ST_Intersects(grid_cells.geometry, ?)', $region->geometry)->get();[39m[0m
  [32m+            });[39m[0m
  [32m+[39m[0m
  [32m+            // Turn the Grid Cell array into a single array with no duplicates.[39m[0m
  [32m+            return $gridCells[0];[39m[0m
  [32m+        } elseif ($type === SubsetTypeEnum::File) {[39m[0m
  [32m+            // Get the Grid Cell names specified in the document.[39m[0m
  [32m+            $gridCellsNames = [];[39m[0m
  [32m+            if (($handle = fopen($request->file->getRealPath(), 'r')) !== false) {[39m[0m
  [32m+                while (($data = fgetcsv($handle, 0, ',')) !== false) {[39m[0m
  [32m+                    $gridCellsNames[] = $data[0];[39m[0m
  [32m+                }[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            // Search for the Grid Cell names in the available Grid Cells for the selected dataset.[39m[0m
  [32m+            return $dataset->gridCells()->whereIn('name', $gridCellsNames)->get();[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        return null;[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Jobs/CreateDataset.php [90m                                             braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m167 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m167 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Jobs;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\TeamDetectionTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Filter;[0m
  [35;1m[39m[0m
  [31m-use App\Models\GridCell;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Region;[0m
  [35;1m[39m[0m
  [31m-use App\Models\SourceDataset;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Bus\Queueable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Queue\ShouldQueue;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Bus\Dispatchable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\InteractsWithQueue;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\SerializesModels;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreateDataset implements ShouldQueue[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $timeout = 60 * 5;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $user;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $team;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $datasetDetectionType;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $input;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new job instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct(User $user, Team $team, TeamDetectionTypeEnum $datasetDetectionType, $input)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->user = $user;[0m
  [35;1m[39m[0m
  [31m-        $this->team = $team;[0m
  [35;1m[39m[0m
  [31m-        $this->datasetDetectionType = $datasetDetectionType;[0m
  [35;1m[39m[0m
  [31m-        $this->input = $input;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Execute the job.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function handle()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $filtersSelected = (count($this->input['surface_usage_filters']) !== 0 || count($this->input['region_filters']));[0m
  [35;1m[39m[0m
  [31m-        $sourceDatasets = SourceDataset::select(['id'])->with(['sourceGridCells' => function ($query) {[0m
  [35;1m[39m[0m
  [31m-            $query->select(['source_dataset_grid_cell.id', 'source_dataset_grid_cell.grid_cell_id'])->orderBy('grid_cell_id', 'asc');[0m
  [35;1m[39m[0m
  [31m-        }])->orderBy('year', 'asc')->findOrFail($this->input['datasets']);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        if ($filtersSelected) {[0m
  [35;1m[39m[0m
  [31m-            // Filter Dataset if selected.[0m
  [35;1m[39m[0m
  [31m-            if (count($this->input['surface_usage_filters']) > 0) {[0m
  [35;1m[39m[0m
  [31m-                // Apply Surface usage filters.[0m
  [35;1m[39m[0m
  [31m-                if ($this->input['surface_usage_filter_mask']) {[0m
  [35;1m[39m[0m
  [31m-                    // Apply Masks from Surface usage filters.[0m
  [35;1m[39m[0m
  [31m-                    $datasetGrids = Filter::with(['bbgClass.mask.polygons'])->findOrFail($this->input['surface_usage_filters'])->pluck('bbgClass.mask.polygons')->flatten()->map(function ($polygon) {[0m
  [35;1m[39m[0m
  [31m-                        return [[0m
  [35;1m[39m[0m
  [31m-                            'grid_cell_id' => $polygon->grid_cell_id,[0m
  [35;1m[39m[0m
  [31m-                            'polygon_id' => $polygon->id,[0m
  [35;1m[39m[0m
  [31m-                        ];[0m
  [35;1m[39m[0m
  [31m-                    });[0m
  [35;1m[39m[0m
  [31m-                } else {[0m
  [35;1m[39m[0m
  [31m-                    $datasetGrids = Filter::with(['gridCells' => function ($query) {[0m
  [35;1m[39m[0m
  [31m-                        $query->select(['grid_cell_id']);[0m
  [35;1m[39m[0m
  [31m-                    }])->findOrFail($this->input['surface_usage_filters'])->pluck('gridCells')->flatten()->unique('grid_cell_id')->map(function ($grid) {[0m
  [35;1m[39m[0m
  [31m-                        return [[0m
  [35;1m[39m[0m
  [31m-                            'grid_cell_id' => $grid->grid_cell_id,[0m
  [35;1m[39m[0m
  [31m-                        ];[0m
  [35;1m[39m[0m
  [31m-                    });[0m
  [35;1m[39m[0m
  [31m-                }[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Region filters.[0m
  [35;1m[39m[0m
  [31m-            if (count($this->input['region_filters']) > 0) {[0m
  [35;1m[39m[0m
  [31m-                $regions = Region::findOrFail($this->input['region_filters']);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                $regionGridsQuery = GridCell::select('id')->where(function ($query) use ($regions) {[0m
  [35;1m[39m[0m
  [31m-                    $regions->each(function ($region, $i) use ($query) {[0m
  [35;1m[39m[0m
  [31m-                        $queryString = 'ST_Intersects(grid_cells.geometry, ?)';[0m
  [35;1m[39m[0m
  [31m-                        if ($i === 0) {[0m
  [35;1m[39m[0m
  [31m-                            $query->whereRaw($queryString, $region->geometry);[0m
  [35;1m[39m[0m
  [31m-                        } else {[0m
  [35;1m[39m[0m
  [31m-                            $query->orWhereRaw($queryString, $region->geometry);[0m
  [35;1m[39m[0m
  [31m-                        }[0m
  [35;1m[39m[0m
  [31m-                    });[0m
  [35;1m[39m[0m
  [31m-                });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                if (isset($datasetGrids)) {[0m
  [35;1m[39m[0m
  [31m-                    // Subset has been created of the selected sources.[0m
  [35;1m[39m[0m
  [31m-                    // Check within this subset which are in the selected region(s).[0m
  [35;1m[39m[0m
  [31m-                    $regionGrids = $regionGridsQuery->whereIntegerInRaw('id', $datasetGrids->pluck('grid_cell_id'))->pluck('id');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                    $datasetGrids = $datasetGrids->whereIn('grid_cell_id', $regionGrids)->values();[0m
  [35;1m[39m[0m
  [31m-                } else {[0m
  [35;1m[39m[0m
  [31m-                    // Full source datasets is being used get all grids within selected region(s).[0m
  [35;1m[39m[0m
  [31m-                    $datasetGrids = $regionGridsQuery->pluck('id')->map(function ($gridId) {[0m
  [35;1m[39m[0m
  [31m-                        return [[0m
  [35;1m[39m[0m
  [31m-                            'grid_cell_id' => $gridId,[0m
  [35;1m[39m[0m
  [31m-                        ];[0m
  [35;1m[39m[0m
  [31m-                    });[0m
  [35;1m[39m[0m
  [31m-                }[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        } else {[0m
  [35;1m[39m[0m
  [31m-            $datasetGrids = $sourceDatasets->pluck('sourceGridCells')->flatten()->pluck('grid_cell_id')->unique()->map(function ($gridId) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'grid_cell_id' => $gridId,[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Format Dataset Grids to insert into the database.[0m
  [35;1m[39m[0m
  [31m-        if ($this->datasetDetectionType === TeamDetectionTypeEnum::Classification) {[0m
  [35;1m[39m[0m
  [31m-            $grids = $sourceDatasets->map(function ($sourceDataset) use ($datasetGrids) {[0m
  [35;1m[39m[0m
  [31m-                $sourceGrids = $sourceDataset->sourceGridCells->whereIn('grid_cell_id', $datasetGrids->pluck('grid_cell_id'))->pluck('id', 'grid_cell_id');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                return $datasetGrids->map(function ($grid) use ($sourceGrids) {[0m
  [35;1m[39m[0m
  [31m-                    return [[0m
  [35;1m[39m[0m
  [31m-                        'source_dataset_grid_cell_id' => $sourceGrids[$grid['grid_cell_id']],[0m
  [35;1m[39m[0m
  [31m-                        'polygon_id' => (array_key_exists('polygon_id', $grid)) ? $grid['polygon_id'] : null,[0m
  [35;1m[39m[0m
  [31m-                    ];[0m
  [35;1m[39m[0m
  [31m-                });[0m
  [35;1m[39m[0m
  [31m-            })->flatten(1);[0m
  [35;1m[39m[0m
  [31m-        } else {[0m
  [35;1m[39m[0m
  [31m-            $sourceGridsFrom = $sourceDatasets[0]->sourceGridCells->whereIn('grid_cell_id', $datasetGrids->pluck('grid_cell_id'))->pluck('id', 'grid_cell_id');[0m
  [35;1m[39m[0m
  [31m-            $sourceGridsTo = $sourceDatasets[1]->sourceGridCells->whereIn('grid_cell_id', $datasetGrids->pluck('grid_cell_id'))->pluck('id', 'grid_cell_id');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $grids = $datasetGrids->map(function ($grid) use ($sourceGridsFrom, $sourceGridsTo) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'source_dataset_grid_cell_id' => $sourceGridsFrom[$grid['grid_cell_id']],[0m
  [35;1m[39m[0m
  [31m-                    'change_source_dataset_grid_cell_id' => $sourceGridsTo[$grid['grid_cell_id']],[0m
  [35;1m[39m[0m
  [31m-                    'polygon_id' => (array_key_exists('polygon_id', $grid)) ? $grid['polygon_id'] : null,[0m
  [35;1m[39m[0m
  [31m-                    'change_polygon_id' => (array_key_exists('polygon_id', $grid)) ? $grid['polygon_id'] : null,[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Sort by Grid cell id.[0m
  [35;1m[39m[0m
  [31m-        $grids = $grids->sortBy('source_dataset_grid_cell_id')->values();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        DB::transaction(function () use ($grids) {[0m
  [35;1m[39m[0m
  [31m-            $dataset = $this->team->datasets()->create([[0m
  [35;1m[39m[0m
  [31m-                'user_id' => $this->user->id,[0m
  [35;1m[39m[0m
  [31m-                'title' => $this->input['title'],[0m
  [35;1m[39m[0m
  [31m-                'description' => $this->input['description'],[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $grids = $grids->map(function ($grid) use ($dataset) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'dataset_id' => $dataset->id,[0m
  [35;1m[39m[0m
  [31m-                    ...$grid,[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            })->toArray();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            foreach (array_chunk($grids, 10000) as $chunk) {[0m
  [35;1m[39m[0m
  [31m-                $dataset->grids()->insert($chunk);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Jobs;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\TeamDetectionTypeEnum;[39m[0m
  [32m+use App\Models\Filter;[39m[0m
  [32m+use App\Models\GridCell;[39m[0m
  [32m+use App\Models\Region;[39m[0m
  [32m+use App\Models\SourceDataset;[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Bus\Queueable;[39m[0m
  [32m+use Illuminate\Contracts\Queue\ShouldQueue;[39m[0m
  [32m+use Illuminate\Foundation\Bus\Dispatchable;[39m[0m
  [32m+use Illuminate\Queue\InteractsWithQueue;[39m[0m
  [32m+use Illuminate\Queue\SerializesModels;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+[39m[0m
  [32m+class CreateDataset implements ShouldQueue[39m[0m
  [32m+{[39m[0m
  [32m+    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+    public $timeout = 60 * 5;[39m[0m
  [32m+[39m[0m
  [32m+    public $user;[39m[0m
  [32m+[39m[0m
  [32m+    public $team;[39m[0m
  [32m+[39m[0m
  [32m+    public $datasetDetectionType;[39m[0m
  [32m+[39m[0m
  [32m+    public $input;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new job instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct(User $user, Team $team, TeamDetectionTypeEnum $datasetDetectionType, $input)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->user = $user;[39m[0m
  [32m+        $this->team = $team;[39m[0m
  [32m+        $this->datasetDetectionType = $datasetDetectionType;[39m[0m
  [32m+        $this->input = $input;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Execute the job.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function handle()[39m[0m
  [32m+    {[39m[0m
  [32m+        $filtersSelected = (count($this->input['surface_usage_filters']) !== 0 || count($this->input['region_filters']));[39m[0m
  [32m+        $sourceDatasets = SourceDataset::select(['id'])->with(['sourceGridCells' => function ($query) {[39m[0m
  [32m+            $query->select(['source_dataset_grid_cell.id', 'source_dataset_grid_cell.grid_cell_id'])->orderBy('grid_cell_id', 'asc');[39m[0m
  [32m+        }])->orderBy('year', 'asc')->findOrFail($this->input['datasets']);[39m[0m
  [32m+[39m[0m
  [32m+        if ($filtersSelected) {[39m[0m
  [32m+            // Filter Dataset if selected.[39m[0m
  [32m+            if (count($this->input['surface_usage_filters']) > 0) {[39m[0m
  [32m+                // Apply Surface usage filters.[39m[0m
  [32m+                if ($this->input['surface_usage_filter_mask']) {[39m[0m
  [32m+                    // Apply Masks from Surface usage filters.[39m[0m
  [32m+                    $datasetGrids = Filter::with(['bbgClass.mask.polygons'])->findOrFail($this->input['surface_usage_filters'])->pluck('bbgClass.mask.polygons')->flatten()->map(function ($polygon) {[39m[0m
  [32m+                        return [[39m[0m
  [32m+                            'grid_cell_id' => $polygon->grid_cell_id,[39m[0m
  [32m+                            'polygon_id' => $polygon->id,[39m[0m
  [32m+                        ];[39m[0m
  [32m+                    });[39m[0m
  [32m+                } else {[39m[0m
  [32m+                    $datasetGrids = Filter::with(['gridCells' => function ($query) {[39m[0m
  [32m+                        $query->select(['grid_cell_id']);[39m[0m
  [32m+                    }])->findOrFail($this->input['surface_usage_filters'])->pluck('gridCells')->flatten()->unique('grid_cell_id')->map(function ($grid) {[39m[0m
  [32m+                        return [[39m[0m
  [32m+                            'grid_cell_id' => $grid->grid_cell_id,[39m[0m
  [32m+                        ];[39m[0m
  [32m+                    });[39m[0m
  [32m+                }[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            // Region filters.[39m[0m
  [32m+            if (count($this->input['region_filters']) > 0) {[39m[0m
  [32m+                $regions = Region::findOrFail($this->input['region_filters']);[39m[0m
  [32m+[39m[0m
  [32m+                $regionGridsQuery = GridCell::select('id')->where(function ($query) use ($regions) {[39m[0m
  [32m+                    $regions->each(function ($region, $i) use ($query) {[39m[0m
  [32m+                        $queryString = 'ST_Intersects(grid_cells.geometry, ?)';[39m[0m
  [32m+                        if ($i === 0) {[39m[0m
  [32m+                            $query->whereRaw($queryString, $region->geometry);[39m[0m
  [32m+                        } else {[39m[0m
  [32m+                            $query->orWhereRaw($queryString, $region->geometry);[39m[0m
  [32m+                        }[39m[0m
  [32m+                    });[39m[0m
  [32m+                });[39m[0m
  [32m+[39m[0m
  [32m+                if (isset($datasetGrids)) {[39m[0m
  [32m+                    // Subset has been created of the selected sources.[39m[0m
  [32m+                    // Check within this subset which are in the selected region(s).[39m[0m
  [32m+                    $regionGrids = $regionGridsQuery->whereIntegerInRaw('id', $datasetGrids->pluck('grid_cell_id'))->pluck('id');[39m[0m
  [32m+[39m[0m
  [32m+                    $datasetGrids = $datasetGrids->whereIn('grid_cell_id', $regionGrids)->values();[39m[0m
  [32m+                } else {[39m[0m
  [32m+                    // Full source datasets is being used get all grids within selected region(s).[39m[0m
  [32m+                    $datasetGrids = $regionGridsQuery->pluck('id')->map(function ($gridId) {[39m[0m
  [32m+                        return [[39m[0m
  [32m+                            'grid_cell_id' => $gridId,[39m[0m
  [32m+                        ];[39m[0m
  [32m+                    });[39m[0m
  [32m+                }[39m[0m
  [32m+            }[39m[0m
  [32m+        } else {[39m[0m
  [32m+            $datasetGrids = $sourceDatasets->pluck('sourceGridCells')->flatten()->pluck('grid_cell_id')->unique()->map(function ($gridId) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'grid_cell_id' => $gridId,[39m[0m
  [32m+                ];[39m[0m
  [32m+            });[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        // Format Dataset Grids to insert into the database.[39m[0m
  [32m+        if ($this->datasetDetectionType === TeamDetectionTypeEnum::Classification) {[39m[0m
  [32m+            $grids = $sourceDatasets->map(function ($sourceDataset) use ($datasetGrids) {[39m[0m
  [32m+                $sourceGrids = $sourceDataset->sourceGridCells->whereIn('grid_cell_id', $datasetGrids->pluck('grid_cell_id'))->pluck('id', 'grid_cell_id');[39m[0m
  [32m+[39m[0m
  [32m+                return $datasetGrids->map(function ($grid) use ($sourceGrids) {[39m[0m
  [32m+                    return [[39m[0m
  [32m+                        'source_dataset_grid_cell_id' => $sourceGrids[$grid['grid_cell_id']],[39m[0m
  [32m+                        'polygon_id' => (array_key_exists('polygon_id', $grid)) ? $grid['polygon_id'] : null,[39m[0m
  [32m+                    ];[39m[0m
  [32m+                });[39m[0m
  [32m+            })->flatten(1);[39m[0m
  [32m+        } else {[39m[0m
  [32m+            $sourceGridsFrom = $sourceDatasets[0]->sourceGridCells->whereIn('grid_cell_id', $datasetGrids->pluck('grid_cell_id'))->pluck('id', 'grid_cell_id');[39m[0m
  [32m+            $sourceGridsTo = $sourceDatasets[1]->sourceGridCells->whereIn('grid_cell_id', $datasetGrids->pluck('grid_cell_id'))->pluck('id', 'grid_cell_id');[39m[0m
  [32m+[39m[0m
  [32m+            $grids = $datasetGrids->map(function ($grid) use ($sourceGridsFrom, $sourceGridsTo) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'source_dataset_grid_cell_id' => $sourceGridsFrom[$grid['grid_cell_id']],[39m[0m
  [32m+                    'change_source_dataset_grid_cell_id' => $sourceGridsTo[$grid['grid_cell_id']],[39m[0m
  [32m+                    'polygon_id' => (array_key_exists('polygon_id', $grid)) ? $grid['polygon_id'] : null,[39m[0m
  [32m+                    'change_polygon_id' => (array_key_exists('polygon_id', $grid)) ? $grid['polygon_id'] : null,[39m[0m
  [32m+                ];[39m[0m
  [32m+            });[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        // Sort by Grid cell id.[39m[0m
  [32m+        $grids = $grids->sortBy('source_dataset_grid_cell_id')->values();[39m[0m
  [32m+[39m[0m
  [32m+        DB::transaction(function () use ($grids) {[39m[0m
  [32m+            $dataset = $this->team->datasets()->create([[39m[0m
  [32m+                'user_id' => $this->user->id,[39m[0m
  [32m+                'title' => $this->input['title'],[39m[0m
  [32m+                'description' => $this->input['description'],[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $grids = $grids->map(function ($grid) use ($dataset) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'dataset_id' => $dataset->id,[39m[0m
  [32m+                    ...$grid,[39m[0m
  [32m+                ];[39m[0m
  [32m+            })->toArray();[39m[0m
  [32m+[39m[0m
  [32m+            foreach (array_chunk($grids, 10000) as $chunk) {[39m[0m
  [32m+                $dataset->grids()->insert($chunk);[39m[0m
  [32m+            }[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Jobs/CreateInspectDataset.php [90mbraces, curly_braces_position, line_ending, no_unused_imports, ordered_imports,[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m71 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m70 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Jobs;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Bus\Queueable;[0m
  [35;1m[39m[0m
  [31m-use App\Models\InspectDataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\SerializesModels;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\InteractsWithQueue;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Queue\ShouldQueue;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Bus\Dispatchable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Queue\ShouldBeUnique;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\DeepGeoStat\ConsolidateDataset;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreateInspectDataset implements ShouldQueue[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $timeout = 60 * 15;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $dataset;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new job instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct(Dataset $dataset)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->dataset = $dataset;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Execute the job.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function handle()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $consolidateResult = ConsolidateDataset::execute($this->dataset, $this->timeout);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $inspectDataset = DB::transaction(function () use ($consolidateResult) {[0m
  [35;1m[39m[0m
  [31m-            $inspectDataset = InspectDataset::create([[0m
  [35;1m[39m[0m
  [31m-                'dataset_id' => $this->dataset->id,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $labels = collect($consolidateResult['labels'])->map(function ($label) use ($inspectDataset) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'inspect_dataset_id' => $inspectDataset->id,[0m
  [35;1m[39m[0m
  [31m-                    'grid_id' => $label['grid_id'],[0m
  [35;1m[39m[0m
  [31m-                    'label_class_id' => $label['label_class_id'],[0m
  [35;1m[39m[0m
  [31m-                    'information' => json_encode([[0m
  [35;1m[39m[0m
  [31m-                        'confidence' => [[0m
  [35;1m[39m[0m
  [31m-                            'level' => $label['confidence'],[0m
  [35;1m[39m[0m
  [31m-                            'reason' => $label['confidence_reason'],[0m
  [35;1m[39m[0m
  [31m-                        ],[0m
  [35;1m[39m[0m
  [31m-                    ]),[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            })->toArray();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            foreach (array_chunk($labels, 10000) as $chunk) {[0m
  [35;1m[39m[0m
  [31m-                $inspectDataset->labels()->insert($chunk);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return $inspectDataset;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # TODO: Notification to user that Inspect was finished.[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Jobs;[39m[0m
  [32m+[39m[0m
  [32m+use App\Actions\DeepGeoStat\ConsolidateDataset;[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use App\Models\InspectDataset;[39m[0m
  [32m+use Illuminate\Bus\Queueable;[39m[0m
  [32m+use Illuminate\Contracts\Queue\ShouldQueue;[39m[0m
  [32m+use Illuminate\Foundation\Bus\Dispatchable;[39m[0m
  [32m+use Illuminate\Queue\InteractsWithQueue;[39m[0m
  [32m+use Illuminate\Queue\SerializesModels;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+[39m[0m
  [32m+class CreateInspectDataset implements ShouldQueue[39m[0m
  [32m+{[39m[0m
  [32m+    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+    public $timeout = 60 * 15;[39m[0m
  [32m+[39m[0m
  [32m+    public $dataset;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new job instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct(Dataset $dataset)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->dataset = $dataset;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Execute the job.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function handle()[39m[0m
  [32m+    {[39m[0m
  [32m+        $consolidateResult = ConsolidateDataset::execute($this->dataset, $this->timeout);[39m[0m
  [32m+[39m[0m
  [32m+        $inspectDataset = DB::transaction(function () use ($consolidateResult) {[39m[0m
  [32m+            $inspectDataset = InspectDataset::create([[39m[0m
  [32m+                'dataset_id' => $this->dataset->id,[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $labels = collect($consolidateResult['labels'])->map(function ($label) use ($inspectDataset) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'inspect_dataset_id' => $inspectDataset->id,[39m[0m
  [32m+                    'grid_id' => $label['grid_id'],[39m[0m
  [32m+                    'label_class_id' => $label['label_class_id'],[39m[0m
  [32m+                    'information' => json_encode([[39m[0m
  [32m+                        'confidence' => [[39m[0m
  [32m+                            'level' => $label['confidence'],[39m[0m
  [32m+                            'reason' => $label['confidence_reason'],[39m[0m
  [32m+                        ],[39m[0m
  [32m+                    ]),[39m[0m
  [32m+                ];[39m[0m
  [32m+            })->toArray();[39m[0m
  [32m+[39m[0m
  [32m+            foreach (array_chunk($labels, 10000) as $chunk) {[39m[0m
  [32m+                $inspectDataset->labels()->insert($chunk);[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            return $inspectDataset;[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        // TODO: Notification to user that Inspect was finished.[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Jobs/CreateLabelEvidenceFromRegister.php [90mbraces, function_declaration, curly_braces_position, line_ending, no_[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m133 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m130 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Jobs;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Throwable;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Bus\Queueable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use App\Enums\LabelEvidenceTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\SerializesModels;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Storage;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Queue\InteractsWithQueue;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Queue\ShouldQueue;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Bus\Dispatchable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Queue\ShouldBeUnique;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreateLabelEvidenceFromRegister implements ShouldQueue[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $user;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $team;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $input;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $csvPath;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new job instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct(User $user, Team $team, $input, $csvPath = null)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->user = $user;[0m
  [35;1m[39m[0m
  [31m-        $this->team = $team;[0m
  [35;1m[39m[0m
  [31m-        $this->input = $input;[0m
  [35;1m[39m[0m
  [31m-        $this->csvPath = $csvPath;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Execute the job.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function handle()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $dataset = Dataset::findOrFail($this->input['dataset']);[0m
  [35;1m[39m[0m
  [31m-        $labelClasses = $this->team->labelClasses;[0m
  [35;1m[39m[0m
  [31m-        if ($this->csvPath) {[0m
  [35;1m[39m[0m
  [31m-            # Label Evidence will be imported from CSV.[0m
  [35;1m[39m[0m
  [31m-            dd('Not done yet');[0m
  [35;1m[39m[0m
  [31m-            // $grids = $dataset->grids()->with(['sourceGridCell.gridCell'])->pluck('sourceGridCell.gridCell');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // dd($grids);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // $row_i = 0;[0m
  [35;1m[39m[0m
  [31m-            // $labels = collect([]);[0m
  [35;1m[39m[0m
  [31m-            // if (($handle = fopen(storage_path($this->csvPath), 'r')) !== false) {[0m
  [35;1m[39m[0m
  [31m-            //     while (($data = fgetcsv($handle, 0, ',')) !== false) {[0m
  [35;1m[39m[0m
  [31m-            //         if ($row_i > 0) {[0m
  [35;1m[39m[0m
  [31m-            //             $gridCell = $data[0];[0m
  [35;1m[39m[0m
  [31m-            //             $labelClass = $data[1];[0m
  [35;1m[39m[0m
  [31m-            //             $weight = (array_key_exists(2, $data)) ? $data[2] : null;[0m
  [35;1m[39m[0m
  [31m-    [0m
  [35;1m[39m[0m
  [31m-            //             if ($grid_cells->has($grid_cell)) {[0m
  [35;1m[39m[0m
  [31m-            //                 $grid_cell = $grid_cells[$grid_cell];[0m
  [35;1m[39m[0m
  [31m-            //                 $label_class = $label_classes->firstWhere('identifier', $label_class);[0m
  [35;1m[39m[0m
  [31m-    [0m
  [35;1m[39m[0m
  [31m-            //                 $label_evidence[] = [[0m
  [35;1m[39m[0m
  [31m-            //                     'user_id' => auth()->id(),[0m
  [35;1m[39m[0m
  [31m-            //                     'grid_cell_id' => $grid_cell,[0m
  [35;1m[39m[0m
  [31m-            //                     'label_class_id' => $label_class->id,[0m
  [35;1m[39m[0m
  [31m-            //                     'weight' => $weight,[0m
  [35;1m[39m[0m
  [31m-            //                 ];[0m
  [35;1m[39m[0m
  [31m-            //             }[0m
  [35;1m[39m[0m
  [31m-            //         }[0m
  [35;1m[39m[0m
  [31m-    [0m
  [35;1m[39m[0m
  [31m-            //         $row_i++;[0m
  [35;1m[39m[0m
  [31m-            //     }[0m
  [35;1m[39m[0m
  [31m-            // }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $labels = [];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            Storage::delete($this->csvPath);[0m
  [35;1m[39m[0m
  [31m-        } else {[0m
  [35;1m[39m[0m
  [31m-            # Label Evidence will be imported from database.[0m
  [35;1m[39m[0m
  [31m-            # TODO: Replace with actual labels.[0m
  [35;1m[39m[0m
  [31m-            $labels = $dataset->grids()->with(['sourceGridCell.gridCell'])->get()->map(function($evidence) use ($labelClasses) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'grid_id' => $evidence['id'],[0m
  [35;1m[39m[0m
  [31m-                    'label_class_id' => $labelClasses->random()->id,[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        [0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        DB::transaction(function () use ($dataset, &$labels) {[0m
  [35;1m[39m[0m
  [31m-            $labelEvidence = $this->team->labelEvidence()->create([[0m
  [35;1m[39m[0m
  [31m-                'user_id' => $this->user->id,[0m
  [35;1m[39m[0m
  [31m-                'dataset_id' => $dataset->id,[0m
  [35;1m[39m[0m
  [31m-                'title' => $this->input['title'],[0m
  [35;1m[39m[0m
  [31m-                'description' => $this->input['description'],[0m
  [35;1m[39m[0m
  [31m-                'type' => LabelEvidenceTypeEnum::Register,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $labels = $labels->map(function($label) use ($labelEvidence) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'user_id' => $this->user->id,[0m
  [35;1m[39m[0m
  [31m-                    'label_evidence_id' => $labelEvidence->id,[0m
  [35;1m[39m[0m
  [31m-                    ...$label,[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            })->toArray();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            foreach (array_chunk($labels, 10000) as $chunk) {[0m
  [35;1m[39m[0m
  [31m-                $labelEvidence->labels()->insert($chunk);[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $labelEvidence->touch();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function failed(Throwable $exception)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if ($this->csvPath) {[0m
  [35;1m[39m[0m
  [31m-            Storage::delete($this->csvPath);[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Jobs;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\LabelEvidenceTypeEnum;[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Bus\Queueable;[39m[0m
  [32m+use Illuminate\Contracts\Queue\ShouldQueue;[39m[0m
  [32m+use Illuminate\Foundation\Bus\Dispatchable;[39m[0m
  [32m+use Illuminate\Queue\InteractsWithQueue;[39m[0m
  [32m+use Illuminate\Queue\SerializesModels;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Illuminate\Support\Facades\Storage;[39m[0m
  [32m+use Throwable;[39m[0m
  [32m+[39m[0m
  [32m+class CreateLabelEvidenceFromRegister implements ShouldQueue[39m[0m
  [32m+{[39m[0m
  [32m+    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;[39m[0m
  [32m+[39m[0m
  [32m+    public $user;[39m[0m
  [32m+[39m[0m
  [32m+    public $team;[39m[0m
  [32m+[39m[0m
  [32m+    public $input;[39m[0m
  [32m+[39m[0m
  [32m+    public $csvPath;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new job instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct(User $user, Team $team, $input, $csvPath = null)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->user = $user;[39m[0m
  [32m+        $this->team = $team;[39m[0m
  [32m+        $this->input = $input;[39m[0m
  [32m+        $this->csvPath = $csvPath;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Execute the job.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function handle()[39m[0m
  [32m+    {[39m[0m
  [32m+        $dataset = Dataset::findOrFail($this->input['dataset']);[39m[0m
  [32m+        $labelClasses = $this->team->labelClasses;[39m[0m
  [32m+        if ($this->csvPath) {[39m[0m
  [32m+            // Label Evidence will be imported from CSV.[39m[0m
  [32m+            dd('Not done yet');[39m[0m
  [32m+            // $grids = $dataset->grids()->with(['sourceGridCell.gridCell'])->pluck('sourceGridCell.gridCell');[39m[0m
  [32m+[39m[0m
  [32m+            // dd($grids);[39m[0m
  [32m+[39m[0m
  [32m+            // $row_i = 0;[39m[0m
  [32m+            // $labels = collect([]);[39m[0m
  [32m+            // if (($handle = fopen(storage_path($this->csvPath), 'r')) !== false) {[39m[0m
  [32m+            //     while (($data = fgetcsv($handle, 0, ',')) !== false) {[39m[0m
  [32m+            //         if ($row_i > 0) {[39m[0m
  [32m+            //             $gridCell = $data[0];[39m[0m
  [32m+            //             $labelClass = $data[1];[39m[0m
  [32m+            //             $weight = (array_key_exists(2, $data)) ? $data[2] : null;[39m[0m
  [32m+[39m[0m
  [32m+            //             if ($grid_cells->has($grid_cell)) {[39m[0m
  [32m+            //                 $grid_cell = $grid_cells[$grid_cell];[39m[0m
  [32m+            //                 $label_class = $label_classes->firstWhere('identifier', $label_class);[39m[0m
  [32m+[39m[0m
  [32m+            //                 $label_evidence[] = [[39m[0m
  [32m+            //                     'user_id' => auth()->id(),[39m[0m
  [32m+            //                     'grid_cell_id' => $grid_cell,[39m[0m
  [32m+            //                     'label_class_id' => $label_class->id,[39m[0m
  [32m+            //                     'weight' => $weight,[39m[0m
  [32m+            //                 ];[39m[0m
  [32m+            //             }[39m[0m
  [32m+            //         }[39m[0m
  [32m+[39m[0m
  [32m+            //         $row_i++;[39m[0m
  [32m+            //     }[39m[0m
  [32m+            // }[39m[0m
  [32m+[39m[0m
  [32m+            $labels = [];[39m[0m
  [32m+[39m[0m
  [32m+            Storage::delete($this->csvPath);[39m[0m
  [32m+        } else {[39m[0m
  [32m+            // Label Evidence will be imported from database.[39m[0m
  [32m+            // TODO: Replace with actual labels.[39m[0m
  [32m+            $labels = $dataset->grids()->with(['sourceGridCell.gridCell'])->get()->map(function ($evidence) use ($labelClasses) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'grid_id' => $evidence['id'],[39m[0m
  [32m+                    'label_class_id' => $labelClasses->random()->id,[39m[0m
  [32m+                ];[39m[0m
  [32m+            });[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        DB::transaction(function () use ($dataset, &$labels) {[39m[0m
  [32m+            $labelEvidence = $this->team->labelEvidence()->create([[39m[0m
  [32m+                'user_id' => $this->user->id,[39m[0m
  [32m+                'dataset_id' => $dataset->id,[39m[0m
  [32m+                'title' => $this->input['title'],[39m[0m
  [32m+                'description' => $this->input['description'],[39m[0m
  [32m+                'type' => LabelEvidenceTypeEnum::Register,[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $labels = $labels->map(function ($label) use ($labelEvidence) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'user_id' => $this->user->id,[39m[0m
  [32m+                    'label_evidence_id' => $labelEvidence->id,[39m[0m
  [32m+                    ...$label,[39m[0m
  [32m+                ];[39m[0m
  [32m+            })->toArray();[39m[0m
  [32m+[39m[0m
  [32m+            foreach (array_chunk($labels, 10000) as $chunk) {[39m[0m
  [32m+                $labelEvidence->labels()->insert($chunk);[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            $labelEvidence->touch();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function failed(Throwable $exception)[39m[0m
  [32m+    {[39m[0m
  [32m+        if ($this->csvPath) {[39m[0m
  [32m+            Storage::delete($this->csvPath);[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/BbgClass.php [90m                                                                       braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m18 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m18 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class BbgClass extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $timestamps = false;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function mask()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasOne(Mask::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class BbgClass extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    public $timestamps = false;[39m[0m
  [32m+[39m[0m
  [32m+    public function mask()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasOne(Mask::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Dataset.php [90m                           braces, line_ending, no_unused_imports, single_blank_line_at_eof[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m43 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m42 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Events\DatasetCreated;[0m
  [35;1m[39m[0m
  [31m-use App\Events\DatasetDeleted;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Dataset extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'user_id', 'title', 'description',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $dispatchesEvents = [[0m
  [35;1m[39m[0m
  [31m-        'created' => DatasetCreated::class,[0m
  [35;1m[39m[0m
  [31m-        'deleted' => DatasetDeleted::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Team::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function grids()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(DatasetGrid::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labelEvidence()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(LabelEvidence::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function inspects()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(InspectDataset::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[39m[0m
  [35;1m\ [0m[39;1mNo newline at end of file[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use App\Events\DatasetCreated;[39m[0m
  [32m+use App\Events\DatasetDeleted;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class Dataset extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'user_id', 'title', 'description',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    protected $dispatchesEvents = [[39m[0m
  [32m+        'created' => DatasetCreated::class,[39m[0m
  [32m+        'deleted' => DatasetDeleted::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function team()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Team::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function grids()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(DatasetGrid::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labelEvidence()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(LabelEvidence::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function inspects()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(InspectDataset::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/DatasetGrid.php [90m                                                                    braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetGrid extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $timestamps = false;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'source_dataset_grid_cell_id', 'polygon_id', 'source_dataset_grid_cell_change_id', 'polygon_change_id',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function sourceGridCell()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(SourceDatasetGridCell::class, 'source_dataset_grid_cell_id', 'id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function sourcePolygon()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(MaskPolygon::class, 'polygon_id', 'id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function changeGridCell()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(SourceDatasetGridCell::class, 'change_source_dataset_grid_cell_id', 'id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function changePolygon()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(MaskPolygon::class, 'change_polygon_id', 'id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetGrid extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    public $timestamps = false;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'source_dataset_grid_cell_id', 'polygon_id', 'source_dataset_grid_cell_change_id', 'polygon_change_id',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function sourceGridCell()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(SourceDatasetGridCell::class, 'source_dataset_grid_cell_id', 'id');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function sourcePolygon()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(MaskPolygon::class, 'polygon_id', 'id');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function changeGridCell()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(SourceDatasetGridCell::class, 'change_source_dataset_grid_cell_id', 'id');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function changePolygon()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(MaskPolygon::class, 'change_polygon_id', 'id');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Experiment.php [90m                                              braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m109 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m109 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\ExperimentStatusEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Http;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Experiment extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'user_id', 'train_data_id', 'test_data_id', 'name', 'description', 'status', 'options', 'statistics',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'status' => ExperimentStatusEnum::class,[0m
  [35;1m[39m[0m
  [31m-        'options' => 'array',[0m
  [35;1m[39m[0m
  [31m-        'statistics' => 'array',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public static function boot()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        parent::boot();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Create the Experiment file on the Experiment API when an Experiment is created.[0m
  [35;1m[39m[0m
  [31m-        static::created(function ($experiment) {[0m
  [35;1m[39m[0m
  [31m-            Http::post(config('services.api.url').'/experiments', $experiment->createExperimentData());[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Delete the files saved on the Experiment API when an Experiment is deleted.[0m
  [35;1m[39m[0m
  [31m-        static::deleted(function ($experiment) {[0m
  [35;1m[39m[0m
  [31m-            Http::delete(config('services.api.url').'/experiments/'.$experiment->id);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Team::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function trainData()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasOne(ExperimentData::class, 'id', 'train_data_id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function testData()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasOne(ExperimentData::class, 'id', 'test_data_id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function start()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (Http::post(config('services.api.url').'/experiments/'.$this->id.'/start')->successful()) {[0m
  [35;1m[39m[0m
  [31m-            $this->update([[0m
  [35;1m[39m[0m
  [31m-                'status' => ExperimentStatusEnum::Training,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function stop()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (Http::post(config('services.api.url').'/experiments/'.$this->id.'/stop')->successful()) {[0m
  [35;1m[39m[0m
  [31m-            $this->update([[0m
  [35;1m[39m[0m
  [31m-                'status' => ExperimentStatusEnum::Stopped,[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    private function createExperimentData(): array[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'information' => [[0m
  [35;1m[39m[0m
  [31m-                'experiment' => [[0m
  [35;1m[39m[0m
  [31m-                    'id' => $this->id,[0m
  [35;1m[39m[0m
  [31m-                ],[0m
  [35;1m[39m[0m
  [31m-                'label_classes' => $this->team->labelClasses->map(function ($labelClass) {[0m
  [35;1m[39m[0m
  [31m-                    return $labelClass->name;[0m
  [35;1m[39m[0m
  [31m-                }),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'data' => [[0m
  [35;1m[39m[0m
  [31m-                'train' => $this->experimentDataForTraining($this->trainData),[0m
  [35;1m[39m[0m
  [31m-                'test' => ($this->testData !== null) ? $this->experimentDataForTraining($this->testData) : null,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'options' => $this->options,[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    private function experimentDataForTraining($data): array[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'datasets' => $data->datasets->map(function ($dataset) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'grid_cell_size' => $dataset->gridCells()->first()->type->value,[0m
  [35;1m[39m[0m
  [31m-                    'image_type' => $dataset->image_type->value,[0m
  [35;1m[39m[0m
  [31m-                    'year' => $dataset->year,[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            }),[0m
  [35;1m[39m[0m
  [31m-            'labels' => $data->labels->map(function ($label) {[0m
  [35;1m[39m[0m
  [31m-                return [[0m
  [35;1m[39m[0m
  [31m-                    'grid_cell' => $label->gridCell->name,[0m
  [35;1m[39m[0m
  [31m-                    'label' => $label->labelClass->name,[0m
  [35;1m[39m[0m
  [31m-                ];[0m
  [35;1m[39m[0m
  [31m-            }),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\ExperimentStatusEnum;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+use Illuminate\Support\Facades\Http;[39m[0m
  [32m+[39m[0m
  [32m+class Experiment extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'user_id', 'train_data_id', 'test_data_id', 'name', 'description', 'status', 'options', 'statistics',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'status' => ExperimentStatusEnum::class,[39m[0m
  [32m+        'options' => 'array',[39m[0m
  [32m+        'statistics' => 'array',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public static function boot()[39m[0m
  [32m+    {[39m[0m
  [32m+        parent::boot();[39m[0m
  [32m+[39m[0m
  [32m+        // Create the Experiment file on the Experiment API when an Experiment is created.[39m[0m
  [32m+        static::created(function ($experiment) {[39m[0m
  [32m+            Http::post(config('services.api.url').'/experiments', $experiment->createExperimentData());[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        // Delete the files saved on the Experiment API when an Experiment is deleted.[39m[0m
  [32m+        static::deleted(function ($experiment) {[39m[0m
  [32m+            Http::delete(config('services.api.url').'/experiments/'.$experiment->id);[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function team()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Team::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function trainData()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasOne(ExperimentData::class, 'id', 'train_data_id');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function testData()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasOne(ExperimentData::class, 'id', 'test_data_id');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function start()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (Http::post(config('services.api.url').'/experiments/'.$this->id.'/start')->successful()) {[39m[0m
  [32m+            $this->update([[39m[0m
  [32m+                'status' => ExperimentStatusEnum::Training,[39m[0m
  [32m+            ]);[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function stop()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (Http::post(config('services.api.url').'/experiments/'.$this->id.'/stop')->successful()) {[39m[0m
  [32m+            $this->update([[39m[0m
  [32m+                'status' => ExperimentStatusEnum::Stopped,[39m[0m
  [32m+            ]);[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    private function createExperimentData(): array[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'information' => [[39m[0m
  [32m+                'experiment' => [[39m[0m
  [32m+                    'id' => $this->id,[39m[0m
  [32m+                ],[39m[0m
  [32m+                'label_classes' => $this->team->labelClasses->map(function ($labelClass) {[39m[0m
  [32m+                    return $labelClass->name;[39m[0m
  [32m+                }),[39m[0m
  [32m+            ],[39m[0m
  [32m+            'data' => [[39m[0m
  [32m+                'train' => $this->experimentDataForTraining($this->trainData),[39m[0m
  [32m+                'test' => ($this->testData !== null) ? $this->experimentDataForTraining($this->testData) : null,[39m[0m
  [32m+            ],[39m[0m
  [32m+            'options' => $this->options,[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    private function experimentDataForTraining($data): array[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'datasets' => $data->datasets->map(function ($dataset) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'grid_cell_size' => $dataset->gridCells()->first()->type->value,[39m[0m
  [32m+                    'image_type' => $dataset->image_type->value,[39m[0m
  [32m+                    'year' => $dataset->year,[39m[0m
  [32m+                ];[39m[0m
  [32m+            }),[39m[0m
  [32m+            'labels' => $data->labels->map(function ($label) {[39m[0m
  [32m+                return [[39m[0m
  [32m+                    'grid_cell' => $label->gridCell->name,[39m[0m
  [32m+                    'label' => $label->labelClass->name,[39m[0m
  [32m+                ];[39m[0m
  [32m+            }),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/ExperimentData.php [90m                                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentData extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'user_id', 'name', 'description',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Team::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function datasets()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsToMany(Dataset::class, 'experiment_data_dataset');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labels()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(ExperimentDataLabel::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentData extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'user_id', 'name', 'description',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function team()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Team::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function datasets()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsToMany(Dataset::class, 'experiment_data_dataset');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labels()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(ExperimentDataLabel::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/ExperimentDataLabel.php [90m                                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m27 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m27 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExperimentDataLabel extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $timestamps = false;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'grid_cell_id', 'label_class_id',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function gridCell()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(GridCell::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labelClass()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(LabelClass::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class ExperimentDataLabel extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    public $timestamps = false;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'grid_cell_id', 'label_class_id',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function gridCell()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(GridCell::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labelClass()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(LabelClass::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Filter.php [90m                                                                         braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Filter extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $timestamps = false;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function gridCells()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsToMany(GridCell::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function bbgClass()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(BbgClass::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class Filter extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    public $timestamps = false;[39m[0m
  [32m+[39m[0m
  [32m+    public function gridCells()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsToMany(GridCell::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function bbgClass()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(BbgClass::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/GridCell.php [90m                                                                       braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m29 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m29 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\GridCellTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class GridCell extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'type' => GridCellTypeEnum::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get a new query builder for the model's table.[0m
  [35;1m[39m[0m
  [31m-     * Manipulate in case we need to convert geometrical fields to text.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Database\Eloquent\Builder[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function newQuery()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return parent::newQuery()[0m
  [35;1m[39m[0m
  [31m-            ->addSelect(['*', DB::raw('st_xmin(geometry) AS x_min, st_xmax(geometry) as x_max, st_ymin(geometry) as y_min, st_ymax(geometry) as y_max')]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\GridCellTypeEnum;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+[39m[0m
  [32m+class GridCell extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'type' => GridCellTypeEnum::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get a new query builder for the model's table.[39m[0m
  [32m+     * Manipulate in case we need to convert geometrical fields to text.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return \Illuminate\Database\Eloquent\Builder[39m[0m
  [32m+     */[39m[0m
  [32m+    public function newQuery()[39m[0m
  [32m+    {[39m[0m
  [32m+        return parent::newQuery()[39m[0m
  [32m+            ->addSelect(['*', DB::raw('st_xmin(geometry) AS x_min, st_xmax(geometry) as x_max, st_ymin(geometry) as y_min, st_ymax(geometry) as y_max')]);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/InspectDataset.php [90m                                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m27 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m27 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class InspectDataset extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $table = 'inspect_dataset';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'dataset_id',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function dataset()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Dataset::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labels()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(InspectDatasetLabel::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class InspectDataset extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $table = 'inspect_dataset';[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'dataset_id',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function dataset()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Dataset::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labels()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(InspectDatasetLabel::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/InspectDatasetLabel.php [90m                                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class InspectDatasetLabel extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'information' => 'array',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'grid_id', 'label_class_id', 'information',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class InspectDatasetLabel extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'information' => 'array',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'grid_id', 'label_class_id', 'information',[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/LabelClass.php [90m                                                                     braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m28 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m28 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelClass extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The attributes that are mass assignable.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var string[][0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'user_id',[0m
  [35;1m[39m[0m
  [31m-        'identifier',[0m
  [35;1m[39m[0m
  [31m-        'name',[0m
  [35;1m[39m[0m
  [31m-        'color',[0m
  [35;1m[39m[0m
  [31m-        'default',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'default' => 'boolean',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class LabelClass extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The attributes that are mass assignable.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var string[][39m[0m
  [32m+     */[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'user_id',[39m[0m
  [32m+        'identifier',[39m[0m
  [32m+        'name',[39m[0m
  [32m+        'color',[39m[0m
  [32m+        'default',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'default' => 'boolean',[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/LabelEvidence.php [90m                                                                  braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m47 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m47 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\LabelEvidenceTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Events\LabelEvidenceCreated;[0m
  [35;1m[39m[0m
  [31m-use App\Events\LabelEvidenceDeleted;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelEvidence extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'user_id', 'dataset_id', 'title', 'description', 'type',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'type' => LabelEvidenceTypeEnum::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $dispatchesEvents = [[0m
  [35;1m[39m[0m
  [31m-        'created' => LabelEvidenceCreated::class,[0m
  [35;1m[39m[0m
  [31m-        'deleted' => LabelEvidenceDeleted::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function user()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(User::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function Dataset()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Dataset::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Team::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labels()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(LabelEvidenceLabel::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\LabelEvidenceTypeEnum;[39m[0m
  [32m+use App\Events\LabelEvidenceCreated;[39m[0m
  [32m+use App\Events\LabelEvidenceDeleted;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class LabelEvidence extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'user_id', 'dataset_id', 'title', 'description', 'type',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'type' => LabelEvidenceTypeEnum::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    protected $dispatchesEvents = [[39m[0m
  [32m+        'created' => LabelEvidenceCreated::class,[39m[0m
  [32m+        'deleted' => LabelEvidenceDeleted::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function user()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(User::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function Dataset()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Dataset::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function team()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Team::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labels()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(LabelEvidenceLabel::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/LabelEvidenceLabel.php [90m                                                             braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LabelEvidenceLabel extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'user_id', 'grid_id', 'label_class_id', 'probability',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $touches = ['labelEvidence'];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function user()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labelEvidence()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(LabelEvidence::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function grid()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(DatasetGrid::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labelClass()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(LabelClass::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class LabelEvidenceLabel extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'user_id', 'grid_id', 'label_class_id', 'probability',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    protected $touches = ['labelEvidence'];[39m[0m
  [32m+[39m[0m
  [32m+    public function user()[39m[0m
  [32m+    {[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labelEvidence()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(LabelEvidence::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function grid()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(DatasetGrid::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labelClass()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(LabelClass::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Mask.php [90m                                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m16 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m16 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Mask extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function polygons()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(MaskPolygon::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class Mask extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    public function polygons()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(MaskPolygon::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/MaskPolygon.php [90m                                             braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m26 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m26 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class MaskPolygon extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'polygon' => 'array',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function getCssPolygon()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return collect($this->polygon)->map(function ($coordinates) {[0m
  [35;1m[39m[0m
  [31m-            return collect($coordinates)->map(function ($coordinate) {[0m
  [35;1m[39m[0m
  [31m-                return collect($coordinate)->map(function ($point) {[0m
  [35;1m[39m[0m
  [31m-                    return (($point / $this->polygon_size) * 100).'%';[0m
  [35;1m[39m[0m
  [31m-                })->implode(' ');[0m
  [35;1m[39m[0m
  [31m-            })->implode(', ');[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class MaskPolygon extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'polygon' => 'array',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function getCssPolygon()[39m[0m
  [32m+    {[39m[0m
  [32m+        return collect($this->polygon)->map(function ($coordinates) {[39m[0m
  [32m+            return collect($coordinates)->map(function ($coordinate) {[39m[0m
  [32m+                return collect($coordinate)->map(function ($point) {[39m[0m
  [32m+                    return (($point / $this->polygon_size) * 100).'%';[39m[0m
  [32m+                })->implode(' ');[39m[0m
  [32m+            })->implode(', ');[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Membership.php [90m                                                                     braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m15 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m15 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Membership as JetstreamMembership;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Membership extends JetstreamMembership[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Indicates if the IDs are auto-incrementing.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var bool[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public $incrementing = true;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Laravel\Jetstream\Membership as JetstreamMembership;[39m[0m
  [32m+[39m[0m
  [32m+class Membership extends JetstreamMembership[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Indicates if the IDs are auto-incrementing.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var bool[39m[0m
  [32m+     */[39m[0m
  [32m+    public $incrementing = true;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Prediction.php [90m                                                                     braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Prediction extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'user_id', 'experiment_id', 'name', 'description',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Team::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function datasets()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsToMany(Dataset::class, 'prediction_dataset');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labels()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(PredictionLabel::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class Prediction extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'user_id', 'experiment_id', 'name', 'description',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function team()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Team::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function datasets()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsToMany(Dataset::class, 'prediction_dataset');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labels()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(PredictionLabel::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/PredictionLabel.php [90m                                                                braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class PredictionLabel extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'grid_cell_id', 'label_class_id',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function gridCell()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(GridCell::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labelClass()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(LabelClass::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class PredictionLabel extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'grid_cell_id', 'label_class_id',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function gridCell()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(GridCell::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labelClass()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(LabelClass::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Region.php [90m                                                                         braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m16 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m16 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\RegionTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Region extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'region_type' => RegionTypeEnum::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\RegionTypeEnum;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class Region extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'region_type' => RegionTypeEnum::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Register.php [90m                                                                       braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Register extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'user_id', 'title', 'description',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Team::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function datasets()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsToMany(Dataset::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labelEvidence()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->morphMany(LabelEvidence::class, 'source');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function delete()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->labelEvidence()->delete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return parent::delete();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class Register extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'user_id', 'title', 'description',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function team()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Team::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function datasets()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsToMany(Dataset::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labelEvidence()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->morphMany(LabelEvidence::class, 'source');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function delete()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->labelEvidence()->delete();[39m[0m
  [32m+[39m[0m
  [32m+        return parent::delete();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/SourceDataset.php [90m                                                                  braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m30 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class SourceDataset extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public $timestamps = false;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function gridCells()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsToMany(GridCell::class, 'source_dataset_grid_cell');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function sourceGridCells()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasManyThrough([0m
  [35;1m[39m[0m
  [31m-            GridCell::class,[0m
  [35;1m[39m[0m
  [31m-            SourceDatasetGridCell::class,[0m
  [35;1m[39m[0m
  [31m-            'source_dataset_id',[0m
  [35;1m[39m[0m
  [31m-            'id',[0m
  [35;1m[39m[0m
  [31m-            'id',[0m
  [35;1m[39m[0m
  [31m-            'grid_cell_id',[0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class SourceDataset extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    public $timestamps = false;[39m[0m
  [32m+[39m[0m
  [32m+    public function gridCells()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsToMany(GridCell::class, 'source_dataset_grid_cell');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function sourceGridCells()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasManyThrough([39m[0m
  [32m+            GridCell::class,[39m[0m
  [32m+            SourceDatasetGridCell::class,[39m[0m
  [32m+            'source_dataset_id',[39m[0m
  [32m+            'id',[39m[0m
  [32m+            'id',[39m[0m
  [32m+            'grid_cell_id',[39m[0m
  [32m+        );[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/SourceDatasetGridCell.php [90m                                                          braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Model;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class SourceDatasetGridCell extends Model[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $table = 'source_dataset_grid_cell';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function dataset()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(SourceDataset::class, 'source_dataset_id', 'id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function gridCell()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(GridCell::class, 'grid_cell_id', 'id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Model;[39m[0m
  [32m+[39m[0m
  [32m+class SourceDatasetGridCell extends Model[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    protected $table = 'source_dataset_grid_cell';[39m[0m
  [32m+[39m[0m
  [32m+    public function dataset()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(SourceDataset::class, 'source_dataset_id', 'id');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function gridCell()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(GridCell::class, 'grid_cell_id', 'id');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/Team.php [90m                                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m76 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m76 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\TeamDetectionTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Events\TeamCreated;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Events\TeamDeleted;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Events\TeamUpdated;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Team as JetstreamTeam;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class Team extends JetstreamTeam[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The attributes that are mass assignable.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var string[][0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'name',[0m
  [35;1m[39m[0m
  [31m-        'description',[0m
  [35;1m[39m[0m
  [31m-        'detection_type',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'detection_type' => TeamDetectionTypeEnum::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The event map for the model.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $dispatchesEvents = [[0m
  [35;1m[39m[0m
  [31m-        'created' => TeamCreated::class,[0m
  [35;1m[39m[0m
  [31m-        'updated' => TeamUpdated::class,[0m
  [35;1m[39m[0m
  [31m-        'deleted' => TeamDeleted::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labelClasses()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(LabelClass::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function defaultLabelClass()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasOne(LabelClass::class, 'id', 'default_label_class_id');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function datasets()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(Dataset::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function labelEvidence()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(LabelEvidence::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function experimentData()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(ExperimentData::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function experiments()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(Experiment::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function predictions()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->hasMany(Prediction::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\TeamDetectionTypeEnum;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Laravel\Jetstream\Events\TeamCreated;[39m[0m
  [32m+use Laravel\Jetstream\Events\TeamDeleted;[39m[0m
  [32m+use Laravel\Jetstream\Events\TeamUpdated;[39m[0m
  [32m+use Laravel\Jetstream\Team as JetstreamTeam;[39m[0m
  [32m+[39m[0m
  [32m+class Team extends JetstreamTeam[39m[0m
  [32m+{[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The attributes that are mass assignable.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var string[][39m[0m
  [32m+     */[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'name',[39m[0m
  [32m+        'description',[39m[0m
  [32m+        'detection_type',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'detection_type' => TeamDetectionTypeEnum::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The event map for the model.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $dispatchesEvents = [[39m[0m
  [32m+        'created' => TeamCreated::class,[39m[0m
  [32m+        'updated' => TeamUpdated::class,[39m[0m
  [32m+        'deleted' => TeamDeleted::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    public function labelClasses()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(LabelClass::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function defaultLabelClass()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasOne(LabelClass::class, 'id', 'default_label_class_id');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function datasets()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(Dataset::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function labelEvidence()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(LabelEvidence::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function experimentData()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(ExperimentData::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function experiments()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(Experiment::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function predictions()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->hasMany(Prediction::class);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/TeamInvitation.php [90m                                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m29 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m29 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Jetstream;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\TeamInvitation as JetstreamTeamInvitation;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TeamInvitation extends JetstreamTeamInvitation[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The attributes that are mass assignable.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var string[][0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'email',[0m
  [35;1m[39m[0m
  [31m-        'role',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the team that the invitation belongs to.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->belongsTo(Jetstream::teamModel());[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Laravel\Jetstream\Jetstream;[39m[0m
  [32m+use Laravel\Jetstream\TeamInvitation as JetstreamTeamInvitation;[39m[0m
  [32m+[39m[0m
  [32m+class TeamInvitation extends JetstreamTeamInvitation[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The attributes that are mass assignable.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var string[][39m[0m
  [32m+     */[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'email',[39m[0m
  [32m+        'role',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the team that the invitation belongs to.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo[39m[0m
  [32m+     */[39m[0m
  [32m+    public function team()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->belongsTo(Jetstream::teamModel());[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Models/User.php [90m                                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m60 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m60 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Models;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\HasFactory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Auth\User as Authenticatable;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Notifications\Notifiable;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\TwoFactorAuthenticatable;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\HasProfilePhoto;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\HasTeams;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Sanctum\HasApiTokens;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class User extends Authenticatable[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HasApiTokens;[0m
  [35;1m[39m[0m
  [31m-    use HasFactory;[0m
  [35;1m[39m[0m
  [31m-    use HasProfilePhoto;[0m
  [35;1m[39m[0m
  [31m-    use HasTeams;[0m
  [35;1m[39m[0m
  [31m-    use Notifiable;[0m
  [35;1m[39m[0m
  [31m-    use TwoFactorAuthenticatable;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The attributes that are mass assignable.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var string[][0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $fillable = [[0m
  [35;1m[39m[0m
  [31m-        'name', 'email', 'password',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The attributes that should be hidden for serialization.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $hidden = [[0m
  [35;1m[39m[0m
  [31m-        'password',[0m
  [35;1m[39m[0m
  [31m-        'remember_token',[0m
  [35;1m[39m[0m
  [31m-        'two_factor_recovery_codes',[0m
  [35;1m[39m[0m
  [31m-        'two_factor_secret',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The attributes that should be cast.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $casts = [[0m
  [35;1m[39m[0m
  [31m-        'email_verified_at' => 'datetime',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The accessors to append to the model's array form.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $appends = [[0m
  [35;1m[39m[0m
  [31m-        'profile_photo_url',[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Models;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\HasFactory;[39m[0m
  [32m+use Illuminate\Foundation\Auth\User as Authenticatable;[39m[0m
  [32m+use Illuminate\Notifications\Notifiable;[39m[0m
  [32m+use Laravel\Fortify\TwoFactorAuthenticatable;[39m[0m
  [32m+use Laravel\Jetstream\HasProfilePhoto;[39m[0m
  [32m+use Laravel\Jetstream\HasTeams;[39m[0m
  [32m+use Laravel\Sanctum\HasApiTokens;[39m[0m
  [32m+[39m[0m
  [32m+class User extends Authenticatable[39m[0m
  [32m+{[39m[0m
  [32m+    use HasApiTokens;[39m[0m
  [32m+    use HasFactory;[39m[0m
  [32m+    use HasProfilePhoto;[39m[0m
  [32m+    use HasTeams;[39m[0m
  [32m+    use Notifiable;[39m[0m
  [32m+    use TwoFactorAuthenticatable;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The attributes that are mass assignable.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var string[][39m[0m
  [32m+     */[39m[0m
  [32m+    protected $fillable = [[39m[0m
  [32m+        'name', 'email', 'password',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The attributes that should be hidden for serialization.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $hidden = [[39m[0m
  [32m+        'password',[39m[0m
  [32m+        'remember_token',[39m[0m
  [32m+        'two_factor_recovery_codes',[39m[0m
  [32m+        'two_factor_secret',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The attributes that should be cast.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $casts = [[39m[0m
  [32m+        'email_verified_at' => 'datetime',[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The accessors to append to the model's array form.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $appends = [[39m[0m
  [32m+        'profile_photo_url',[39m[0m
  [32m+    ];[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Policies/TeamPolicy.php [90m                                                                   braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m106 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m106 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Policies;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Auth\Access\HandlesAuthorization;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TeamPolicy[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use HandlesAuthorization;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine whether the user can view any models.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function viewAny(User $user)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return true;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine whether the user can view the model.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\Team  $team[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function view(User $user, Team $team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $user->belongsToTeam($team);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine whether the user can create models.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function create(User $user)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return true;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine whether the user can update the model.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\Team  $team[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function update(User $user, Team $team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $user->ownsTeam($team);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine whether the user can add team members.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\Team  $team[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function addTeamMember(User $user, Team $team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $user->ownsTeam($team);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine whether the user can update team member permissions.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\Team  $team[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function updateTeamMember(User $user, Team $team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $user->ownsTeam($team);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine whether the user can remove team members.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\Team  $team[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function removeTeamMember(User $user, Team $team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $user->ownsTeam($team);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine whether the user can delete the model.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\User  $user[0m
  [35;1m[39m[0m
  [31m-     * @param  \App\Models\Team  $team[0m
  [35;1m[39m[0m
  [31m-     * @return mixed[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function delete(User $user, Team $team)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $user->ownsTeam($team);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Policies;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Auth\Access\HandlesAuthorization;[39m[0m
  [32m+[39m[0m
  [32m+class TeamPolicy[39m[0m
  [32m+{[39m[0m
  [32m+    use HandlesAuthorization;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine whether the user can view any models.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function viewAny(User $user)[39m[0m
  [32m+    {[39m[0m
  [32m+        return true;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine whether the user can view the model.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @param  \App\Models\Team  $team[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function view(User $user, Team $team)[39m[0m
  [32m+    {[39m[0m
  [32m+        return $user->belongsToTeam($team);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine whether the user can create models.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function create(User $user)[39m[0m
  [32m+    {[39m[0m
  [32m+        return true;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine whether the user can update the model.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @param  \App\Models\Team  $team[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function update(User $user, Team $team)[39m[0m
  [32m+    {[39m[0m
  [32m+        return $user->ownsTeam($team);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine whether the user can add team members.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @param  \App\Models\Team  $team[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function addTeamMember(User $user, Team $team)[39m[0m
  [32m+    {[39m[0m
  [32m+        return $user->ownsTeam($team);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine whether the user can update team member permissions.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @param  \App\Models\Team  $team[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function updateTeamMember(User $user, Team $team)[39m[0m
  [32m+    {[39m[0m
  [32m+        return $user->ownsTeam($team);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine whether the user can remove team members.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @param  \App\Models\Team  $team[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function removeTeamMember(User $user, Team $team)[39m[0m
  [32m+    {[39m[0m
  [32m+        return $user->ownsTeam($team);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine whether the user can delete the model.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  \App\Models\User  $user[39m[0m
  [32m+     * @param  \App\Models\Team  $team[39m[0m
  [32m+     * @return mixed[39m[0m
  [32m+     */[39m[0m
  [32m+    public function delete(User $user, Team $team)[39m[0m
  [32m+    {[39m[0m
  [32m+        return $user->ownsTeam($team);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Providers/AppServiceProvider.php [90m                                                          braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m27 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m27 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Providers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\ServiceProvider;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class AppServiceProvider extends ServiceProvider[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Register any application services.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function register()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Bootstrap any application services.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function boot()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Providers;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\ServiceProvider;[39m[0m
  [32m+[39m[0m
  [32m+class AppServiceProvider extends ServiceProvider[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Register any application services.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function register()[39m[0m
  [32m+    {[39m[0m
  [32m+        //[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Bootstrap any application services.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function boot()[39m[0m
  [32m+    {[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Providers/AuthServiceProvider.php [90m                                                         braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m31 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m31 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Providers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use App\Policies\TeamPolicy;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class AuthServiceProvider extends ServiceProvider[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The policy mappings for the application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $policies = [[0m
  [35;1m[39m[0m
  [31m-        Team::class => TeamPolicy::class,[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Register any authentication / authorization services.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function boot()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->registerPolicies();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Providers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use App\Policies\TeamPolicy;[39m[0m
  [32m+use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;[39m[0m
  [32m+[39m[0m
  [32m+class AuthServiceProvider extends ServiceProvider[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The policy mappings for the application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $policies = [[39m[0m
  [32m+        Team::class => TeamPolicy::class,[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Register any authentication / authorization services.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function boot()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->registerPolicies();[39m[0m
  [32m+[39m[0m
  [32m+        //[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Providers/BroadcastServiceProvider.php [90m                                                    braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m21 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m21 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Providers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Broadcast;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\ServiceProvider;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class BroadcastServiceProvider extends ServiceProvider[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Bootstrap any application services.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function boot()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Broadcast::routes();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        require base_path('routes/channels.php');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Providers;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\Broadcast;[39m[0m
  [32m+use Illuminate\Support\ServiceProvider;[39m[0m
  [32m+[39m[0m
  [32m+class BroadcastServiceProvider extends ServiceProvider[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Bootstrap any application services.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function boot()[39m[0m
  [32m+    {[39m[0m
  [32m+        Broadcast::routes();[39m[0m
  [32m+[39m[0m
  [32m+        require base_path('routes/channels.php');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Providers/EventServiceProvider.php [90m                                                        braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m42 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m42 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Providers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Auth\Events\Registered;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Auth\Listeners\SendEmailVerificationNotification;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Event;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class EventServiceProvider extends ServiceProvider[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The event listener mappings for the application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var array<class-string, array[39m[31m<int, class-string>[39m[31m>[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $listen = [[0m
  [35;1m[39m[0m
  [31m-        Registered::class => [[0m
  [35;1m[39m[0m
  [31m-            SendEmailVerificationNotification::class,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Register any events for your application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function boot()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine if events and listeners should be automatically discovered.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return bool[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function shouldDiscoverEvents()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return false;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Providers;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Auth\Events\Registered;[39m[0m
  [32m+use Illuminate\Auth\Listeners\SendEmailVerificationNotification;[39m[0m
  [32m+use Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;[39m[0m
  [32m+use Illuminate\Support\Facades\Event;[39m[0m
  [32m+[39m[0m
  [32m+class EventServiceProvider extends ServiceProvider[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The event listener mappings for the application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var array<class-string, array[39m[32m<int, class-string>[39m[32m>[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $listen = [[39m[0m
  [32m+        Registered::class => [[39m[0m
  [32m+            SendEmailVerificationNotification::class,[39m[0m
  [32m+        ],[39m[0m
  [32m+    ];[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Register any events for your application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function boot()[39m[0m
  [32m+    {[39m[0m
  [32m+        //[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine if events and listeners should be automatically discovered.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return bool[39m[0m
  [32m+     */[39m[0m
  [32m+    public function shouldDiscoverEvents()[39m[0m
  [32m+    {[39m[0m
  [32m+        return false;[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Providers/FortifyServiceProvider.php [90m                               braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m49 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m49 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Providers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Fortify\CreateNewUser;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Fortify\ResetUserPassword;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Fortify\UpdateUserPassword;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Fortify\UpdateUserProfileInformation;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Cache\RateLimiting\Limit;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\RateLimiter;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\ServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Fortify;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class FortifyServiceProvider extends ServiceProvider[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Register any application services.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function register()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Bootstrap any application services.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function boot()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Fortify::createUsersUsing(CreateNewUser::class);[0m
  [35;1m[39m[0m
  [31m-        Fortify::updateUserProfileInformationUsing(UpdateUserProfileInformation::class);[0m
  [35;1m[39m[0m
  [31m-        Fortify::updateUserPasswordsUsing(UpdateUserPassword::class);[0m
  [35;1m[39m[0m
  [31m-        Fortify::resetUserPasswordsUsing(ResetUserPassword::class);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        RateLimiter::for('login', function (Request $request) {[0m
  [35;1m[39m[0m
  [31m-            $email = (string) $request->email;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return Limit::perMinute(5)->by($email.$request->ip());[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        RateLimiter::for('two-factor', function (Request $request) {[0m
  [35;1m[39m[0m
  [31m-            return Limit::perMinute(5)->by($request->session()->get('login.id'));[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Providers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Actions\Fortify\CreateNewUser;[39m[0m
  [32m+use App\Actions\Fortify\ResetUserPassword;[39m[0m
  [32m+use App\Actions\Fortify\UpdateUserPassword;[39m[0m
  [32m+use App\Actions\Fortify\UpdateUserProfileInformation;[39m[0m
  [32m+use Illuminate\Cache\RateLimiting\Limit;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Support\Facades\RateLimiter;[39m[0m
  [32m+use Illuminate\Support\ServiceProvider;[39m[0m
  [32m+use Laravel\Fortify\Fortify;[39m[0m
  [32m+[39m[0m
  [32m+class FortifyServiceProvider extends ServiceProvider[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Register any application services.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function register()[39m[0m
  [32m+    {[39m[0m
  [32m+        //[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Bootstrap any application services.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function boot()[39m[0m
  [32m+    {[39m[0m
  [32m+        Fortify::createUsersUsing(CreateNewUser::class);[39m[0m
  [32m+        Fortify::updateUserProfileInformationUsing(UpdateUserProfileInformation::class);[39m[0m
  [32m+        Fortify::updateUserPasswordsUsing(UpdateUserPassword::class);[39m[0m
  [32m+        Fortify::resetUserPasswordsUsing(ResetUserPassword::class);[39m[0m
  [32m+[39m[0m
  [32m+        RateLimiter::for('login', function (Request $request) {[39m[0m
  [32m+            $email = (string) $request->email;[39m[0m
  [32m+[39m[0m
  [32m+            return Limit::perMinute(5)->by($email.$request->ip());[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        RateLimiter::for('two-factor', function (Request $request) {[39m[0m
  [32m+            return Limit::perMinute(5)->by($request->session()->get('login.id'));[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Providers/JetstreamServiceProvider.php [90m                                                    braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m67 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m67 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Providers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Jetstream\AddTeamMember;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Jetstream\CreateTeam;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Jetstream\DeleteTeam;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Jetstream\DeleteUser;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Jetstream\InviteTeamMember;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Jetstream\RemoveTeamMember;[0m
  [35;1m[39m[0m
  [31m-use App\Actions\Jetstream\UpdateTeamName;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\ServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Jetstream;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class JetstreamServiceProvider extends ServiceProvider[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Register any application services.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function register()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Bootstrap any application services.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function boot()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->configurePermissions();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Jetstream::createTeamsUsing(CreateTeam::class);[0m
  [35;1m[39m[0m
  [31m-        Jetstream::updateTeamNamesUsing(UpdateTeamName::class);[0m
  [35;1m[39m[0m
  [31m-        Jetstream::addTeamMembersUsing(AddTeamMember::class);[0m
  [35;1m[39m[0m
  [31m-        Jetstream::inviteTeamMembersUsing(InviteTeamMember::class);[0m
  [35;1m[39m[0m
  [31m-        Jetstream::removeTeamMembersUsing(RemoveTeamMember::class);[0m
  [35;1m[39m[0m
  [31m-        Jetstream::deleteTeamsUsing(DeleteTeam::class);[0m
  [35;1m[39m[0m
  [31m-        Jetstream::deleteUsersUsing(DeleteUser::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Configure the roles and permissions that are available within the application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function configurePermissions()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Jetstream::defaultApiTokenPermissions(['read']);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Jetstream::role('admin', 'Administrator', [[0m
  [35;1m[39m[0m
  [31m-            'create',[0m
  [35;1m[39m[0m
  [31m-            'read',[0m
  [35;1m[39m[0m
  [31m-            'update',[0m
  [35;1m[39m[0m
  [31m-            'delete',[0m
  [35;1m[39m[0m
  [31m-        ])->description('Administrator users can perform any action.');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Jetstream::role('editor', 'Editor', [[0m
  [35;1m[39m[0m
  [31m-            'read',[0m
  [35;1m[39m[0m
  [31m-            'create',[0m
  [35;1m[39m[0m
  [31m-            'update',[0m
  [35;1m[39m[0m
  [31m-        ])->description('Editor users have the ability to read, create, and update.');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Providers;[39m[0m
  [32m+[39m[0m
  [32m+use App\Actions\Jetstream\AddTeamMember;[39m[0m
  [32m+use App\Actions\Jetstream\CreateTeam;[39m[0m
  [32m+use App\Actions\Jetstream\DeleteTeam;[39m[0m
  [32m+use App\Actions\Jetstream\DeleteUser;[39m[0m
  [32m+use App\Actions\Jetstream\InviteTeamMember;[39m[0m
  [32m+use App\Actions\Jetstream\RemoveTeamMember;[39m[0m
  [32m+use App\Actions\Jetstream\UpdateTeamName;[39m[0m
  [32m+use Illuminate\Support\ServiceProvider;[39m[0m
  [32m+use Laravel\Jetstream\Jetstream;[39m[0m
  [32m+[39m[0m
  [32m+class JetstreamServiceProvider extends ServiceProvider[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Register any application services.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function register()[39m[0m
  [32m+    {[39m[0m
  [32m+        //[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Bootstrap any application services.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function boot()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->configurePermissions();[39m[0m
  [32m+[39m[0m
  [32m+        Jetstream::createTeamsUsing(CreateTeam::class);[39m[0m
  [32m+        Jetstream::updateTeamNamesUsing(UpdateTeamName::class);[39m[0m
  [32m+        Jetstream::addTeamMembersUsing(AddTeamMember::class);[39m[0m
  [32m+        Jetstream::inviteTeamMembersUsing(InviteTeamMember::class);[39m[0m
  [32m+        Jetstream::removeTeamMembersUsing(RemoveTeamMember::class);[39m[0m
  [32m+        Jetstream::deleteTeamsUsing(DeleteTeam::class);[39m[0m
  [32m+        Jetstream::deleteUsersUsing(DeleteUser::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Configure the roles and permissions that are available within the application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function configurePermissions()[39m[0m
  [32m+    {[39m[0m
  [32m+        Jetstream::defaultApiTokenPermissions(['read']);[39m[0m
  [32m+[39m[0m
  [32m+        Jetstream::role('admin', 'Administrator', [[39m[0m
  [32m+            'create',[39m[0m
  [32m+            'read',[39m[0m
  [32m+            'update',[39m[0m
  [32m+            'delete',[39m[0m
  [32m+        ])->description('Administrator users can perform any action.');[39m[0m
  [32m+[39m[0m
  [32m+        Jetstream::role('editor', 'Editor', [[39m[0m
  [32m+            'read',[39m[0m
  [32m+            'create',[39m[0m
  [32m+            'update',[39m[0m
  [32m+        ])->description('Editor users have the ability to read, create, and update.');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Providers/RouteServiceProvider.php [90m                                 braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m52 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m52 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Providers;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Cache\RateLimiting\Limit;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\RateLimiter;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Route;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class RouteServiceProvider extends ServiceProvider[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The path to the "home" route for your application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * This is used by Laravel authentication to redirect users after login.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var string[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public const HOME = '/';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Define your route model bindings, pattern filters, etc.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function boot()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->configureRateLimiting();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->routes(function () {[0m
  [35;1m[39m[0m
  [31m-            Route::prefix('api')[0m
  [35;1m[39m[0m
  [31m-                ->middleware('api')[0m
  [35;1m[39m[0m
  [31m-                ->group(base_path('routes/api.php'));[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            Route::middleware('web')[0m
  [35;1m[39m[0m
  [31m-                ->group(base_path('routes/web.php'));[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Configure the rate limiters for the application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected function configureRateLimiting()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        RateLimiter::for('api', function (Request $request) {[0m
  [35;1m[39m[0m
  [31m-            return Limit::perMinute(60)->by($request->user()?->id ?: $request->ip());[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Providers;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Cache\RateLimiting\Limit;[39m[0m
  [32m+use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+use Illuminate\Support\Facades\RateLimiter;[39m[0m
  [32m+use Illuminate\Support\Facades\Route;[39m[0m
  [32m+[39m[0m
  [32m+class RouteServiceProvider extends ServiceProvider[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The path to the "home" route for your application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * This is used by Laravel authentication to redirect users after login.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var string[39m[0m
  [32m+     */[39m[0m
  [32m+    public const HOME = '/';[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Define your route model bindings, pattern filters, etc.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function boot()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->configureRateLimiting();[39m[0m
  [32m+[39m[0m
  [32m+        $this->routes(function () {[39m[0m
  [32m+            Route::prefix('api')[39m[0m
  [32m+                ->middleware('api')[39m[0m
  [32m+                ->group(base_path('routes/api.php'));[39m[0m
  [32m+[39m[0m
  [32m+            Route::middleware('web')[39m[0m
  [32m+                ->group(base_path('routes/web.php'));[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Configure the rate limiters for the application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    protected function configureRateLimiting()[39m[0m
  [32m+    {[39m[0m
  [32m+        RateLimiter::for('api', function (Request $request) {[39m[0m
  [32m+            return Limit::perMinute(60)->by($request->user()?->id ?: $request->ip());[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Rules/DatasetHasLabelEvidence.php [90m                              braces, line_ending, single_line_comment_style[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m52 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m52 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Rules;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Validation\Rule;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetHasLabelEvidence implements Rule[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new rule instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine if the validation rule passes.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  string  $attribute[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $value[0m
  [35;1m[39m[0m
  [31m-     * @return bool[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function passes($attribute, $value)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $dataset = Dataset::findOrFail($value);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        # Dataset has Label Evidence[0m
  [35;1m[39m[0m
  [31m-        if ($dataset->labelEvidence->isNotEmpty()) {[0m
  [35;1m[39m[0m
  [31m-            if ($dataset->team->defaultLabelClass()->exists()) {[0m
  [35;1m[39m[0m
  [31m-                return true;[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return true;[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return false;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the validation error message.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return string[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function message()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return 'The :attribute must have label evidence associated to it.';[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Rules;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use Illuminate\Contracts\Validation\Rule;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetHasLabelEvidence implements Rule[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new rule instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct()[39m[0m
  [32m+    {[39m[0m
  [32m+        //[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine if the validation rule passes.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  string  $attribute[39m[0m
  [32m+     * @param  mixed  $value[39m[0m
  [32m+     * @return bool[39m[0m
  [32m+     */[39m[0m
  [32m+    public function passes($attribute, $value)[39m[0m
  [32m+    {[39m[0m
  [32m+        $dataset = Dataset::findOrFail($value);[39m[0m
  [32m+[39m[0m
  [32m+        // Dataset has Label Evidence[39m[0m
  [32m+        if ($dataset->labelEvidence->isNotEmpty()) {[39m[0m
  [32m+            if ($dataset->team->defaultLabelClass()->exists()) {[39m[0m
  [32m+                return true;[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            return true;[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        return false;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the validation error message.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return string[39m[0m
  [32m+     */[39m[0m
  [32m+    public function message()[39m[0m
  [32m+    {[39m[0m
  [32m+        return 'The :attribute must have label evidence associated to it.';[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m app/Rules/DatasetsCompatible.php [90m                                                              braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m74 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m74 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace App\Rules;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Dataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Validation\Rule;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatasetsCompatible implements Rule[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Create a new rule instance.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function __construct()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Determine if the validation rule passes.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @param  string  $attribute[0m
  [35;1m[39m[0m
  [31m-     * @param  mixed  $value[0m
  [35;1m[39m[0m
  [31m-     * @return bool[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function passes($attribute, $value)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        // Check if there are 2 or more datasets selected. If not there is no need for a compatability check.[0m
  [35;1m[39m[0m
  [31m-        if (count($value) > 1) {[0m
  [35;1m[39m[0m
  [31m-            $datasets = Dataset::find($value);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Check if datasets have same Grid Cell Type.[0m
  [35;1m[39m[0m
  [31m-            $grid_cells_type = null;[0m
  [35;1m[39m[0m
  [31m-            foreach ($datasets as $dataset) {[0m
  [35;1m[39m[0m
  [31m-                $grid_cell_type = $dataset->gridCells()->first()->type;[0m
  [35;1m[39m[0m
  [31m-                if ($grid_cells_type === null) {[0m
  [35;1m[39m[0m
  [31m-                    $grid_cells_type = $grid_cell_type;[0m
  [35;1m[39m[0m
  [31m-                }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                if ($grid_cells_type !== $grid_cell_type) {[0m
  [35;1m[39m[0m
  [31m-                    return false;[0m
  [35;1m[39m[0m
  [31m-                }[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Check if datasets have the same amount of Grid Cells.[0m
  [35;1m[39m[0m
  [31m-            $grid_cells_count = null;[0m
  [35;1m[39m[0m
  [31m-            foreach ($datasets as $dataset) {[0m
  [35;1m[39m[0m
  [31m-                $grid_cell_count = $dataset->gridCells()->count();[0m
  [35;1m[39m[0m
  [31m-                if ($grid_cells_count === null) {[0m
  [35;1m[39m[0m
  [31m-                    $grid_cells_count = $grid_cell_count;[0m
  [35;1m[39m[0m
  [31m-                }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-                if ($grid_cells_count !== $grid_cell_count) {[0m
  [35;1m[39m[0m
  [31m-                    return false;[0m
  [35;1m[39m[0m
  [31m-                }[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // TODO: In the future might add compatibility check for actual Grid Cells instead of just count.[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return true;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Get the validation error message.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return string[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function message()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return 'The :attribute must be compatible.';[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace App\Rules;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Dataset;[39m[0m
  [32m+use Illuminate\Contracts\Validation\Rule;[39m[0m
  [32m+[39m[0m
  [32m+class DatasetsCompatible implements Rule[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Create a new rule instance.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function __construct()[39m[0m
  [32m+    {[39m[0m
  [32m+        //[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Determine if the validation rule passes.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @param  string  $attribute[39m[0m
  [32m+     * @param  mixed  $value[39m[0m
  [32m+     * @return bool[39m[0m
  [32m+     */[39m[0m
  [32m+    public function passes($attribute, $value)[39m[0m
  [32m+    {[39m[0m
  [32m+        // Check if there are 2 or more datasets selected. If not there is no need for a compatability check.[39m[0m
  [32m+        if (count($value) > 1) {[39m[0m
  [32m+            $datasets = Dataset::find($value);[39m[0m
  [32m+[39m[0m
  [32m+            // Check if datasets have same Grid Cell Type.[39m[0m
  [32m+            $grid_cells_type = null;[39m[0m
  [32m+            foreach ($datasets as $dataset) {[39m[0m
  [32m+                $grid_cell_type = $dataset->gridCells()->first()->type;[39m[0m
  [32m+                if ($grid_cells_type === null) {[39m[0m
  [32m+                    $grid_cells_type = $grid_cell_type;[39m[0m
  [32m+                }[39m[0m
  [32m+[39m[0m
  [32m+                if ($grid_cells_type !== $grid_cell_type) {[39m[0m
  [32m+                    return false;[39m[0m
  [32m+                }[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            // Check if datasets have the same amount of Grid Cells.[39m[0m
  [32m+            $grid_cells_count = null;[39m[0m
  [32m+            foreach ($datasets as $dataset) {[39m[0m
  [32m+                $grid_cell_count = $dataset->gridCells()->count();[39m[0m
  [32m+                if ($grid_cells_count === null) {[39m[0m
  [32m+                    $grid_cells_count = $grid_cell_count;[39m[0m
  [32m+                }[39m[0m
  [32m+[39m[0m
  [32m+                if ($grid_cells_count !== $grid_cell_count) {[39m[0m
  [32m+                    return false;[39m[0m
  [32m+                }[39m[0m
  [32m+            }[39m[0m
  [32m+[39m[0m
  [32m+            // TODO: In the future might add compatibility check for actual Grid Cells instead of just count.[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        return true;[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Get the validation error message.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return string[39m[0m
  [32m+     */[39m[0m
  [32m+    public function message()[39m[0m
  [32m+    {[39m[0m
  [32m+        return 'The :attribute must be compatible.';[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m bootstrap/app.php [90m                                                                                     line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m55 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m55 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Create The Application[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| The first thing we will do is create a new Laravel application instance[0m
  [35;1m[39m[0m
  [31m-| which serves as the "glue" for all the components of Laravel, and is[0m
  [35;1m[39m[0m
  [31m-| the IoC container for the system binding all of the various parts.[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-$app = new Illuminate\Foundation\Application([0m
  [35;1m[39m[0m
  [31m-    $_ENV['APP_BASE_PATH'] ?? dirname(__DIR__)[0m
  [35;1m[39m[0m
  [31m-);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Bind Important Interfaces[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| Next, we need to bind some important interfaces into the container so[0m
  [35;1m[39m[0m
  [31m-| we will be able to resolve them when needed. The kernels serve the[0m
  [35;1m[39m[0m
  [31m-| incoming requests to this application from both the web and CLI.[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-$app->singleton([0m
  [35;1m[39m[0m
  [31m-    Illuminate\Contracts\Http\Kernel::class,[0m
  [35;1m[39m[0m
  [31m-    App\Http\Kernel::class[0m
  [35;1m[39m[0m
  [31m-);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-$app->singleton([0m
  [35;1m[39m[0m
  [31m-    Illuminate\Contracts\Console\Kernel::class,[0m
  [35;1m[39m[0m
  [31m-    App\Console\Kernel::class[0m
  [35;1m[39m[0m
  [31m-);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-$app->singleton([0m
  [35;1m[39m[0m
  [31m-    Illuminate\Contracts\Debug\ExceptionHandler::class,[0m
  [35;1m[39m[0m
  [31m-    App\Exceptions\Handler::class[0m
  [35;1m[39m[0m
  [31m-);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Return The Application[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| This script returns the application instance. The instance is given to[0m
  [35;1m[39m[0m
  [31m-| the calling script so we can separate the building of the instances[0m
  [35;1m[39m[0m
  [31m-| from the actual running of the application and sending responses.[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return $app;[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Create The Application[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| The first thing we will do is create a new Laravel application instance[39m[0m
  [32m+| which serves as the "glue" for all the components of Laravel, and is[39m[0m
  [32m+| the IoC container for the system binding all of the various parts.[39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+$app = new Illuminate\Foundation\Application([39m[0m
  [32m+    $_ENV['APP_BASE_PATH'] ?? dirname(__DIR__)[39m[0m
  [32m+);[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Bind Important Interfaces[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| Next, we need to bind some important interfaces into the container so[39m[0m
  [32m+| we will be able to resolve them when needed. The kernels serve the[39m[0m
  [32m+| incoming requests to this application from both the web and CLI.[39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+$app->singleton([39m[0m
  [32m+    Illuminate\Contracts\Http\Kernel::class,[39m[0m
  [32m+    App\Http\Kernel::class[39m[0m
  [32m+);[39m[0m
  [32m+[39m[0m
  [32m+$app->singleton([39m[0m
  [32m+    Illuminate\Contracts\Console\Kernel::class,[39m[0m
  [32m+    App\Console\Kernel::class[39m[0m
  [32m+);[39m[0m
  [32m+[39m[0m
  [32m+$app->singleton([39m[0m
  [32m+    Illuminate\Contracts\Debug\ExceptionHandler::class,[39m[0m
  [32m+    App\Exceptions\Handler::class[39m[0m
  [32m+);[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Return The Application[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| This script returns the application instance. The instance is given to[39m[0m
  [32m+| the calling script so we can separate the building of the instances[39m[0m
  [32m+| from the actual running of the application and sending responses.[39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+return $app;[39m[0m
  
  [32;1mâœ“[39;22m config/app.php [90m                                                                                        line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m199 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m199 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Facade;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Application Name[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This value is the name of your application. This value is used when the[0m
  [35;1m[39m[0m
  [31m-    | framework needs to place the application's name in a notification or[0m
  [35;1m[39m[0m
  [31m-    | any other location as required by the application or its packages.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'name' => env('APP_NAME', 'Laravel'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Application Environment[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This value determines the "environment" your application is currently[0m
  [35;1m[39m[0m
  [31m-    | running in. This may determine how you prefer to configure various[0m
  [35;1m[39m[0m
  [31m-    | services the application utilizes. Set this in your ".env" file.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'env' => env('APP_ENV', 'production'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Application Debug Mode[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | When your application is in debug mode, detailed error messages with[0m
  [35;1m[39m[0m
  [31m-    | stack traces will be shown on every error that occurs within your[0m
  [35;1m[39m[0m
  [31m-    | application. If disabled, a simple generic error page is shown.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'debug' => (bool) env('APP_DEBUG', false),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Application URL[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This URL is used by the console to properly generate URLs when using[0m
  [35;1m[39m[0m
  [31m-    | the Artisan command line tool. You should set this to the root of[0m
  [35;1m[39m[0m
  [31m-    | your application so that it is used when running Artisan tasks.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'url' => env('APP_URL', 'http://localhost'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'asset_url' => env('ASSET_URL'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Application Timezone[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify the default timezone for your application, which[0m
  [35;1m[39m[0m
  [31m-    | will be used by the PHP date and date-time functions. We have gone[0m
  [35;1m[39m[0m
  [31m-    | ahead and set this to a sensible default for you out of the box.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'timezone' => 'UTC',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Application Locale Configuration[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The application locale determines the default locale that will be used[0m
  [35;1m[39m[0m
  [31m-    | by the translation service provider. You are free to set this value[0m
  [35;1m[39m[0m
  [31m-    | to any of the locales which will be supported by the application.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'locale' => 'en',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Application Fallback Locale[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The fallback locale determines the locale to use when the current one[0m
  [35;1m[39m[0m
  [31m-    | is not available. You may change the value to correspond to any of[0m
  [35;1m[39m[0m
  [31m-    | the language folders that are provided through your application.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'fallback_locale' => 'en',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Faker Locale[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This locale will be used by the Faker PHP library when generating fake[0m
  [35;1m[39m[0m
  [31m-    | data for your database seeds. For example, this will be used to get[0m
  [35;1m[39m[0m
  [31m-    | localized telephone numbers, street address information and more.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'faker_locale' => 'en_US',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Encryption Key[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This key is used by the Illuminate encrypter service and should be set[0m
  [35;1m[39m[0m
  [31m-    | to a random, 32 character string, otherwise these encrypted strings[0m
  [35;1m[39m[0m
  [31m-    | will not be safe. Please do this before deploying an application![0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'key' => env('APP_KEY'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'cipher' => 'AES-256-CBC',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Autoloaded Service Providers[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The service providers listed here will be automatically loaded on the[0m
  [35;1m[39m[0m
  [31m-    | request to your application. Feel free to add your own services to[0m
  [35;1m[39m[0m
  [31m-    | this array to grant expanded functionality to your applications.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'providers' => [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * Laravel Framework Service Providers...[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Auth\AuthServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Broadcasting\BroadcastServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Bus\BusServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Cache\CacheServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Foundation\Providers\ConsoleSupportServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Cookie\CookieServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Database\DatabaseServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Encryption\EncryptionServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Filesystem\FilesystemServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Foundation\Providers\FoundationServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Hashing\HashServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Mail\MailServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Notifications\NotificationServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Pagination\PaginationServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Pipeline\PipelineServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Queue\QueueServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Redis\RedisServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Auth\Passwords\PasswordResetServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Session\SessionServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Translation\TranslationServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\Validation\ValidationServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        Illuminate\View\ViewServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * Package Service Providers...[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * Application Service Providers...[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        App\Providers\AppServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        App\Providers\AuthServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        App\Providers\BroadcastServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        App\Providers\EventServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        App\Providers\RouteServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        App\Providers\FortifyServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-        App\Providers\JetstreamServiceProvider::class,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Class Aliases[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This array of class aliases will be registered when this application[0m
  [35;1m[39m[0m
  [31m-    | is started. However, feel free to register as many as you wish as[0m
  [35;1m[39m[0m
  [31m-    | the aliases are "lazy" loaded so they don't hinder performance.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'aliases' => Facade::defaultAliases()->merge([[0m
  [35;1m[39m[0m
  [31m-        // ...[0m
  [35;1m[39m[0m
  [31m-    ])->toArray(),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\Facade;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Application Name[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This value is the name of your application. This value is used when the[39m[0m
  [32m+    | framework needs to place the application's name in a notification or[39m[0m
  [32m+    | any other location as required by the application or its packages.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'name' => env('APP_NAME', 'Laravel'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Application Environment[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This value determines the "environment" your application is currently[39m[0m
  [32m+    | running in. This may determine how you prefer to configure various[39m[0m
  [32m+    | services the application utilizes. Set this in your ".env" file.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'env' => env('APP_ENV', 'production'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Application Debug Mode[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | When your application is in debug mode, detailed error messages with[39m[0m
  [32m+    | stack traces will be shown on every error that occurs within your[39m[0m
  [32m+    | application. If disabled, a simple generic error page is shown.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'debug' => (bool) env('APP_DEBUG', false),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Application URL[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This URL is used by the console to properly generate URLs when using[39m[0m
  [32m+    | the Artisan command line tool. You should set this to the root of[39m[0m
  [32m+    | your application so that it is used when running Artisan tasks.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'url' => env('APP_URL', 'http://localhost'),[39m[0m
  [32m+[39m[0m
  [32m+    'asset_url' => env('ASSET_URL'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Application Timezone[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify the default timezone for your application, which[39m[0m
  [32m+    | will be used by the PHP date and date-time functions. We have gone[39m[0m
  [32m+    | ahead and set this to a sensible default for you out of the box.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'timezone' => 'UTC',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Application Locale Configuration[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The application locale determines the default locale that will be used[39m[0m
  [32m+    | by the translation service provider. You are free to set this value[39m[0m
  [32m+    | to any of the locales which will be supported by the application.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'locale' => 'en',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Application Fallback Locale[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The fallback locale determines the locale to use when the current one[39m[0m
  [32m+    | is not available. You may change the value to correspond to any of[39m[0m
  [32m+    | the language folders that are provided through your application.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'fallback_locale' => 'en',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Faker Locale[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This locale will be used by the Faker PHP library when generating fake[39m[0m
  [32m+    | data for your database seeds. For example, this will be used to get[39m[0m
  [32m+    | localized telephone numbers, street address information and more.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'faker_locale' => 'en_US',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Encryption Key[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This key is used by the Illuminate encrypter service and should be set[39m[0m
  [32m+    | to a random, 32 character string, otherwise these encrypted strings[39m[0m
  [32m+    | will not be safe. Please do this before deploying an application![39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'key' => env('APP_KEY'),[39m[0m
  [32m+[39m[0m
  [32m+    'cipher' => 'AES-256-CBC',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Autoloaded Service Providers[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The service providers listed here will be automatically loaded on the[39m[0m
  [32m+    | request to your application. Feel free to add your own services to[39m[0m
  [32m+    | this array to grant expanded functionality to your applications.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'providers' => [[39m[0m
  [32m+[39m[0m
  [32m+        /*[39m[0m
  [32m+         * Laravel Framework Service Providers...[39m[0m
  [32m+         */[39m[0m
  [32m+        Illuminate\Auth\AuthServiceProvider::class,[39m[0m
  [32m+        Illuminate\Broadcasting\BroadcastServiceProvider::class,[39m[0m
  [32m+        Illuminate\Bus\BusServiceProvider::class,[39m[0m
  [32m+        Illuminate\Cache\CacheServiceProvider::class,[39m[0m
  [32m+        Illuminate\Foundation\Providers\ConsoleSupportServiceProvider::class,[39m[0m
  [32m+        Illuminate\Cookie\CookieServiceProvider::class,[39m[0m
  [32m+        Illuminate\Database\DatabaseServiceProvider::class,[39m[0m
  [32m+        Illuminate\Encryption\EncryptionServiceProvider::class,[39m[0m
  [32m+        Illuminate\Filesystem\FilesystemServiceProvider::class,[39m[0m
  [32m+        Illuminate\Foundation\Providers\FoundationServiceProvider::class,[39m[0m
  [32m+        Illuminate\Hashing\HashServiceProvider::class,[39m[0m
  [32m+        Illuminate\Mail\MailServiceProvider::class,[39m[0m
  [32m+        Illuminate\Notifications\NotificationServiceProvider::class,[39m[0m
  [32m+        Illuminate\Pagination\PaginationServiceProvider::class,[39m[0m
  [32m+        Illuminate\Pipeline\PipelineServiceProvider::class,[39m[0m
  [32m+        Illuminate\Queue\QueueServiceProvider::class,[39m[0m
  [32m+        Illuminate\Redis\RedisServiceProvider::class,[39m[0m
  [32m+        Illuminate\Auth\Passwords\PasswordResetServiceProvider::class,[39m[0m
  [32m+        Illuminate\Session\SessionServiceProvider::class,[39m[0m
  [32m+        Illuminate\Translation\TranslationServiceProvider::class,[39m[0m
  [32m+        Illuminate\Validation\ValidationServiceProvider::class,[39m[0m
  [32m+        Illuminate\View\ViewServiceProvider::class,[39m[0m
  [32m+[39m[0m
  [32m+        /*[39m[0m
  [32m+         * Package Service Providers...[39m[0m
  [32m+         */[39m[0m
  [32m+[39m[0m
  [32m+        /*[39m[0m
  [32m+         * Application Service Providers...[39m[0m
  [32m+         */[39m[0m
  [32m+        App\Providers\AppServiceProvider::class,[39m[0m
  [32m+        App\Providers\AuthServiceProvider::class,[39m[0m
  [32m+        App\Providers\BroadcastServiceProvider::class,[39m[0m
  [32m+        App\Providers\EventServiceProvider::class,[39m[0m
  [32m+        App\Providers\RouteServiceProvider::class,[39m[0m
  [32m+        App\Providers\FortifyServiceProvider::class,[39m[0m
  [32m+        App\Providers\JetstreamServiceProvider::class,[39m[0m
  [32m+[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Class Aliases[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This array of class aliases will be registered when this application[39m[0m
  [32m+    | is started. However, feel free to register as many as you wish as[39m[0m
  [32m+    | the aliases are "lazy" loaded so they don't hinder performance.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'aliases' => Facade::defaultAliases()->merge([[39m[0m
  [32m+        // ...[39m[0m
  [32m+    ])->toArray(),[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/auth.php [90m                                                                                       line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m111 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m111 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Authentication Defaults[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option controls the default authentication "guard" and password[0m
  [35;1m[39m[0m
  [31m-    | reset options for your application. You may change these defaults[0m
  [35;1m[39m[0m
  [31m-    | as required, but they're a perfect start for most applications.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'defaults' => [[0m
  [35;1m[39m[0m
  [31m-        'guard' => 'web',[0m
  [35;1m[39m[0m
  [31m-        'passwords' => 'users',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Authentication Guards[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Next, you may define every authentication guard for your application.[0m
  [35;1m[39m[0m
  [31m-    | Of course, a great default configuration has been defined for you[0m
  [35;1m[39m[0m
  [31m-    | here which uses session storage and the Eloquent user provider.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | All authentication drivers have a user provider. This defines how the[0m
  [35;1m[39m[0m
  [31m-    | users are actually retrieved out of your database or other storage[0m
  [35;1m[39m[0m
  [31m-    | mechanisms used by this application to persist your user's data.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported: "session"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'guards' => [[0m
  [35;1m[39m[0m
  [31m-        'web' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'session',[0m
  [35;1m[39m[0m
  [31m-            'provider' => 'users',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | User Providers[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | All authentication drivers have a user provider. This defines how the[0m
  [35;1m[39m[0m
  [31m-    | users are actually retrieved out of your database or other storage[0m
  [35;1m[39m[0m
  [31m-    | mechanisms used by this application to persist your user's data.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | If you have multiple user tables or models you may configure multiple[0m
  [35;1m[39m[0m
  [31m-    | sources which represent each model / table. These sources may then[0m
  [35;1m[39m[0m
  [31m-    | be assigned to any extra authentication guards you have defined.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported: "database", "eloquent"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'providers' => [[0m
  [35;1m[39m[0m
  [31m-        'users' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'eloquent',[0m
  [35;1m[39m[0m
  [31m-            'model' => App\Models\User::class,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // 'users' => [[0m
  [35;1m[39m[0m
  [31m-        //     'driver' => 'database',[0m
  [35;1m[39m[0m
  [31m-        //     'table' => 'users',[0m
  [35;1m[39m[0m
  [31m-        // ],[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Resetting Passwords[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | You may specify multiple password reset configurations if you have more[0m
  [35;1m[39m[0m
  [31m-    | than one user table or model in the application and you want to have[0m
  [35;1m[39m[0m
  [31m-    | separate password reset settings based on the specific user types.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The expire time is the number of minutes that each reset token will be[0m
  [35;1m[39m[0m
  [31m-    | considered valid. This security feature keeps tokens short-lived so[0m
  [35;1m[39m[0m
  [31m-    | they have less time to be guessed. You may change this as needed.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'passwords' => [[0m
  [35;1m[39m[0m
  [31m-        'users' => [[0m
  [35;1m[39m[0m
  [31m-            'provider' => 'users',[0m
  [35;1m[39m[0m
  [31m-            'table' => 'password_resets',[0m
  [35;1m[39m[0m
  [31m-            'expire' => 60,[0m
  [35;1m[39m[0m
  [31m-            'throttle' => 60,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Password Confirmation Timeout[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may define the amount of seconds before a password confirmation[0m
  [35;1m[39m[0m
  [31m-    | times out and the user is prompted to re-enter their password via the[0m
  [35;1m[39m[0m
  [31m-    | confirmation screen. By default, the timeout lasts for three hours.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'password_timeout' => 10800,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Authentication Defaults[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option controls the default authentication "guard" and password[39m[0m
  [32m+    | reset options for your application. You may change these defaults[39m[0m
  [32m+    | as required, but they're a perfect start for most applications.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'defaults' => [[39m[0m
  [32m+        'guard' => 'web',[39m[0m
  [32m+        'passwords' => 'users',[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Authentication Guards[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Next, you may define every authentication guard for your application.[39m[0m
  [32m+    | Of course, a great default configuration has been defined for you[39m[0m
  [32m+    | here which uses session storage and the Eloquent user provider.[39m[0m
  [32m+    |[39m[0m
  [32m+    | All authentication drivers have a user provider. This defines how the[39m[0m
  [32m+    | users are actually retrieved out of your database or other storage[39m[0m
  [32m+    | mechanisms used by this application to persist your user's data.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported: "session"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'guards' => [[39m[0m
  [32m+        'web' => [[39m[0m
  [32m+            'driver' => 'session',[39m[0m
  [32m+            'provider' => 'users',[39m[0m
  [32m+        ],[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | User Providers[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | All authentication drivers have a user provider. This defines how the[39m[0m
  [32m+    | users are actually retrieved out of your database or other storage[39m[0m
  [32m+    | mechanisms used by this application to persist your user's data.[39m[0m
  [32m+    |[39m[0m
  [32m+    | If you have multiple user tables or models you may configure multiple[39m[0m
  [32m+    | sources which represent each model / table. These sources may then[39m[0m
  [32m+    | be assigned to any extra authentication guards you have defined.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported: "database", "eloquent"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'providers' => [[39m[0m
  [32m+        'users' => [[39m[0m
  [32m+            'driver' => 'eloquent',[39m[0m
  [32m+            'model' => App\Models\User::class,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        // 'users' => [[39m[0m
  [32m+        //     'driver' => 'database',[39m[0m
  [32m+        //     'table' => 'users',[39m[0m
  [32m+        // ],[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Resetting Passwords[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | You may specify multiple password reset configurations if you have more[39m[0m
  [32m+    | than one user table or model in the application and you want to have[39m[0m
  [32m+    | separate password reset settings based on the specific user types.[39m[0m
  [32m+    |[39m[0m
  [32m+    | The expire time is the number of minutes that each reset token will be[39m[0m
  [32m+    | considered valid. This security feature keeps tokens short-lived so[39m[0m
  [32m+    | they have less time to be guessed. You may change this as needed.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'passwords' => [[39m[0m
  [32m+        'users' => [[39m[0m
  [32m+            'provider' => 'users',[39m[0m
  [32m+            'table' => 'password_resets',[39m[0m
  [32m+            'expire' => 60,[39m[0m
  [32m+            'throttle' => 60,[39m[0m
  [32m+        ],[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Password Confirmation Timeout[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may define the amount of seconds before a password confirmation[39m[0m
  [32m+    | times out and the user is prompted to re-enter their password via the[39m[0m
  [32m+    | confirmation screen. By default, the timeout lasts for three hours.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'password_timeout' => 10800,[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/broadcasting.php [90m                                                                               line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m70 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m70 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Broadcaster[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option controls the default broadcaster that will be used by the[0m
  [35;1m[39m[0m
  [31m-    | framework when an event needs to be broadcast. You may set this to[0m
  [35;1m[39m[0m
  [31m-    | any of the connections defined in the "connections" array below.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported: "pusher", "ably", "redis", "log", "null"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'default' => env('BROADCAST_DRIVER', 'null'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Broadcast Connections[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may define all of the broadcast connections that will be used[0m
  [35;1m[39m[0m
  [31m-    | to broadcast events to other systems or over websockets. Samples of[0m
  [35;1m[39m[0m
  [31m-    | each available type of connection are provided inside this array.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'connections' => [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'pusher' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'pusher',[0m
  [35;1m[39m[0m
  [31m-            'key' => env('PUSHER_APP_KEY'),[0m
  [35;1m[39m[0m
  [31m-            'secret' => env('PUSHER_APP_SECRET'),[0m
  [35;1m[39m[0m
  [31m-            'app_id' => env('PUSHER_APP_ID'),[0m
  [35;1m[39m[0m
  [31m-            'options' => [[0m
  [35;1m[39m[0m
  [31m-                'cluster' => env('PUSHER_APP_CLUSTER'),[0m
  [35;1m[39m[0m
  [31m-                'encrypted' => true,[0m
  [35;1m[39m[0m
  [31m-                'host' => env('WEBSOCKETS_HOST'),[0m
  [35;1m[39m[0m
  [31m-                'port' => env('WEBSOCKETS_PORT'),[0m
  [35;1m[39m[0m
  [31m-                'scheme' => 'http',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'client_options' => [[0m
  [35;1m[39m[0m
  [31m-                // Guzzle client options: https://docs.guzzlephp.org/en/stable/request-options.html[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'ably' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'ably',[0m
  [35;1m[39m[0m
  [31m-            'key' => env('ABLY_KEY'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'redis' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'redis',[0m
  [35;1m[39m[0m
  [31m-            'connection' => 'default',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'log' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'log',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'null' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'null',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Broadcaster[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option controls the default broadcaster that will be used by the[39m[0m
  [32m+    | framework when an event needs to be broadcast. You may set this to[39m[0m
  [32m+    | any of the connections defined in the "connections" array below.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported: "pusher", "ably", "redis", "log", "null"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'default' => env('BROADCAST_DRIVER', 'null'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Broadcast Connections[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may define all of the broadcast connections that will be used[39m[0m
  [32m+    | to broadcast events to other systems or over websockets. Samples of[39m[0m
  [32m+    | each available type of connection are provided inside this array.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'connections' => [[39m[0m
  [32m+[39m[0m
  [32m+        'pusher' => [[39m[0m
  [32m+            'driver' => 'pusher',[39m[0m
  [32m+            'key' => env('PUSHER_APP_KEY'),[39m[0m
  [32m+            'secret' => env('PUSHER_APP_SECRET'),[39m[0m
  [32m+            'app_id' => env('PUSHER_APP_ID'),[39m[0m
  [32m+            'options' => [[39m[0m
  [32m+                'cluster' => env('PUSHER_APP_CLUSTER'),[39m[0m
  [32m+                'encrypted' => true,[39m[0m
  [32m+                'host' => env('WEBSOCKETS_HOST'),[39m[0m
  [32m+                'port' => env('WEBSOCKETS_PORT'),[39m[0m
  [32m+                'scheme' => 'http',[39m[0m
  [32m+            ],[39m[0m
  [32m+            'client_options' => [[39m[0m
  [32m+                // Guzzle client options: https://docs.guzzlephp.org/en/stable/request-options.html[39m[0m
  [32m+            ],[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'ably' => [[39m[0m
  [32m+            'driver' => 'ably',[39m[0m
  [32m+            'key' => env('ABLY_KEY'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'redis' => [[39m[0m
  [32m+            'driver' => 'redis',[39m[0m
  [32m+            'connection' => 'default',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'log' => [[39m[0m
  [32m+            'driver' => 'log',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'null' => [[39m[0m
  [32m+            'driver' => 'null',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/cache.php [90m                                                                                      line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m110 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m110 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Cache Store[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option controls the default cache connection that gets used while[0m
  [35;1m[39m[0m
  [31m-    | using this caching library. This connection is used when another is[0m
  [35;1m[39m[0m
  [31m-    | not explicitly specified when executing a given caching function.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'default' => env('CACHE_DRIVER', 'file'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Cache Stores[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may define all of the cache "stores" for your application as[0m
  [35;1m[39m[0m
  [31m-    | well as their drivers. You may even define multiple stores for the[0m
  [35;1m[39m[0m
  [31m-    | same cache driver to group types of items stored in your caches.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported drivers: "apc", "array", "database", "file",[0m
  [35;1m[39m[0m
  [31m-    |         "memcached", "redis", "dynamodb", "octane", "null"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'stores' => [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'apc' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'apc',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'array' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'array',[0m
  [35;1m[39m[0m
  [31m-            'serialize' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'database' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'database',[0m
  [35;1m[39m[0m
  [31m-            'table' => 'cache',[0m
  [35;1m[39m[0m
  [31m-            'connection' => null,[0m
  [35;1m[39m[0m
  [31m-            'lock_connection' => null,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'file' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'file',[0m
  [35;1m[39m[0m
  [31m-            'path' => storage_path('framework/cache/data'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'memcached' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'memcached',[0m
  [35;1m[39m[0m
  [31m-            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),[0m
  [35;1m[39m[0m
  [31m-            'sasl' => [[0m
  [35;1m[39m[0m
  [31m-                env('MEMCACHED_USERNAME'),[0m
  [35;1m[39m[0m
  [31m-                env('MEMCACHED_PASSWORD'),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'options' => [[0m
  [35;1m[39m[0m
  [31m-                // Memcached::OPT_CONNECT_TIMEOUT => 2000,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            'servers' => [[0m
  [35;1m[39m[0m
  [31m-                [[0m
  [35;1m[39m[0m
  [31m-                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),[0m
  [35;1m[39m[0m
  [31m-                    'port' => env('MEMCACHED_PORT', 11211),[0m
  [35;1m[39m[0m
  [31m-                    'weight' => 100,[0m
  [35;1m[39m[0m
  [31m-                ],[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'redis' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'redis',[0m
  [35;1m[39m[0m
  [31m-            'connection' => 'cache',[0m
  [35;1m[39m[0m
  [31m-            'lock_connection' => 'default',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'dynamodb' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'dynamodb',[0m
  [35;1m[39m[0m
  [31m-            'key' => env('AWS_ACCESS_KEY_ID'),[0m
  [35;1m[39m[0m
  [31m-            'secret' => env('AWS_SECRET_ACCESS_KEY'),[0m
  [35;1m[39m[0m
  [31m-            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),[0m
  [35;1m[39m[0m
  [31m-            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),[0m
  [35;1m[39m[0m
  [31m-            'endpoint' => env('DYNAMODB_ENDPOINT'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'octane' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'octane',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Cache Key Prefix[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | When utilizing a RAM based store such as APC or Memcached, there might[0m
  [35;1m[39m[0m
  [31m-    | be other applications utilizing the same cache. So, we'll specify a[0m
  [35;1m[39m[0m
  [31m-    | value to get prefixed to all our keys so we can avoid collisions.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Str;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Cache Store[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option controls the default cache connection that gets used while[39m[0m
  [32m+    | using this caching library. This connection is used when another is[39m[0m
  [32m+    | not explicitly specified when executing a given caching function.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'default' => env('CACHE_DRIVER', 'file'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Cache Stores[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may define all of the cache "stores" for your application as[39m[0m
  [32m+    | well as their drivers. You may even define multiple stores for the[39m[0m
  [32m+    | same cache driver to group types of items stored in your caches.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported drivers: "apc", "array", "database", "file",[39m[0m
  [32m+    |         "memcached", "redis", "dynamodb", "octane", "null"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'stores' => [[39m[0m
  [32m+[39m[0m
  [32m+        'apc' => [[39m[0m
  [32m+            'driver' => 'apc',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'array' => [[39m[0m
  [32m+            'driver' => 'array',[39m[0m
  [32m+            'serialize' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'database' => [[39m[0m
  [32m+            'driver' => 'database',[39m[0m
  [32m+            'table' => 'cache',[39m[0m
  [32m+            'connection' => null,[39m[0m
  [32m+            'lock_connection' => null,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'file' => [[39m[0m
  [32m+            'driver' => 'file',[39m[0m
  [32m+            'path' => storage_path('framework/cache/data'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'memcached' => [[39m[0m
  [32m+            'driver' => 'memcached',[39m[0m
  [32m+            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),[39m[0m
  [32m+            'sasl' => [[39m[0m
  [32m+                env('MEMCACHED_USERNAME'),[39m[0m
  [32m+                env('MEMCACHED_PASSWORD'),[39m[0m
  [32m+            ],[39m[0m
  [32m+            'options' => [[39m[0m
  [32m+                // Memcached::OPT_CONNECT_TIMEOUT => 2000,[39m[0m
  [32m+            ],[39m[0m
  [32m+            'servers' => [[39m[0m
  [32m+                [[39m[0m
  [32m+                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),[39m[0m
  [32m+                    'port' => env('MEMCACHED_PORT', 11211),[39m[0m
  [32m+                    'weight' => 100,[39m[0m
  [32m+                ],[39m[0m
  [32m+            ],[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'redis' => [[39m[0m
  [32m+            'driver' => 'redis',[39m[0m
  [32m+            'connection' => 'cache',[39m[0m
  [32m+            'lock_connection' => 'default',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'dynamodb' => [[39m[0m
  [32m+            'driver' => 'dynamodb',[39m[0m
  [32m+            'key' => env('AWS_ACCESS_KEY_ID'),[39m[0m
  [32m+            'secret' => env('AWS_SECRET_ACCESS_KEY'),[39m[0m
  [32m+            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),[39m[0m
  [32m+            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),[39m[0m
  [32m+            'endpoint' => env('DYNAMODB_ENDPOINT'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'octane' => [[39m[0m
  [32m+            'driver' => 'octane',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Cache Key Prefix[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | When utilizing a RAM based store such as APC or Memcached, there might[39m[0m
  [32m+    | be other applications utilizing the same cache. So, we'll specify a[39m[0m
  [32m+    | value to get prefixed to all our keys so we can avoid collisions.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/cors.php [90m                                                                                       line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m34 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m34 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Cross-Origin Resource Sharing (CORS) Configuration[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may configure your settings for cross-origin resource sharing[0m
  [35;1m[39m[0m
  [31m-    | or "CORS". This determines what cross-origin operations may execute[0m
  [35;1m[39m[0m
  [31m-    | in web browsers. You are free to adjust these settings as needed.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | To learn more: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'paths' => ['api/*', 'sanctum/csrf-cookie'],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'allowed_methods' => ['*'],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'allowed_origins' => [config('services.api.url')],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'allowed_origins_patterns' => [],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'allowed_headers' => ['*'],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'exposed_headers' => [],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'max_age' => 0,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'supports_credentials' => false,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Cross-Origin Resource Sharing (CORS) Configuration[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may configure your settings for cross-origin resource sharing[39m[0m
  [32m+    | or "CORS". This determines what cross-origin operations may execute[39m[0m
  [32m+    | in web browsers. You are free to adjust these settings as needed.[39m[0m
  [32m+    |[39m[0m
  [32m+    | To learn more: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'paths' => ['api/*', 'sanctum/csrf-cookie'],[39m[0m
  [32m+[39m[0m
  [32m+    'allowed_methods' => ['*'],[39m[0m
  [32m+[39m[0m
  [32m+    'allowed_origins' => [config('services.api.url')],[39m[0m
  [32m+[39m[0m
  [32m+    'allowed_origins_patterns' => [],[39m[0m
  [32m+[39m[0m
  [32m+    'allowed_headers' => ['*'],[39m[0m
  [32m+[39m[0m
  [32m+    'exposed_headers' => [],[39m[0m
  [32m+[39m[0m
  [32m+    'max_age' => 0,[39m[0m
  [32m+[39m[0m
  [32m+    'supports_credentials' => false,[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/database.php [90m                                                                                   line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m147 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m147 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Database Connection Name[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify which of the database connections below you wish[0m
  [35;1m[39m[0m
  [31m-    | to use as your default connection for all database work. Of course[0m
  [35;1m[39m[0m
  [31m-    | you may use many connections at once using the Database library.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'default' => env('DB_CONNECTION', 'mysql'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Database Connections[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here are each of the database connections setup for your application.[0m
  [35;1m[39m[0m
  [31m-    | Of course, examples of configuring each database platform that is[0m
  [35;1m[39m[0m
  [31m-    | supported by Laravel is shown below to make development simple.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | All database work in Laravel is done through the PHP PDO facilities[0m
  [35;1m[39m[0m
  [31m-    | so make sure you have the driver for your particular database of[0m
  [35;1m[39m[0m
  [31m-    | choice installed on your machine before you begin development.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'connections' => [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'sqlite' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'sqlite',[0m
  [35;1m[39m[0m
  [31m-            'url' => env('DATABASE_URL'),[0m
  [35;1m[39m[0m
  [31m-            'database' => env('DB_DATABASE', database_path('database.sqlite')),[0m
  [35;1m[39m[0m
  [31m-            'prefix' => '',[0m
  [35;1m[39m[0m
  [31m-            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'mysql' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'mysql',[0m
  [35;1m[39m[0m
  [31m-            'url' => env('DATABASE_URL'),[0m
  [35;1m[39m[0m
  [31m-            'host' => env('DB_HOST', '127.0.0.1'),[0m
  [35;1m[39m[0m
  [31m-            'port' => env('DB_PORT', '3306'),[0m
  [35;1m[39m[0m
  [31m-            'database' => env('DB_DATABASE', 'forge'),[0m
  [35;1m[39m[0m
  [31m-            'username' => env('DB_USERNAME', 'forge'),[0m
  [35;1m[39m[0m
  [31m-            'password' => env('DB_PASSWORD', ''),[0m
  [35;1m[39m[0m
  [31m-            'unix_socket' => env('DB_SOCKET', ''),[0m
  [35;1m[39m[0m
  [31m-            'charset' => 'utf8mb4',[0m
  [35;1m[39m[0m
  [31m-            'collation' => 'utf8mb4_unicode_ci',[0m
  [35;1m[39m[0m
  [31m-            'prefix' => '',[0m
  [35;1m[39m[0m
  [31m-            'prefix_indexes' => true,[0m
  [35;1m[39m[0m
  [31m-            'strict' => true,[0m
  [35;1m[39m[0m
  [31m-            'engine' => null,[0m
  [35;1m[39m[0m
  [31m-            'options' => extension_loaded('pdo_mysql') ? array_filter([[0m
  [35;1m[39m[0m
  [31m-                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),[0m
  [35;1m[39m[0m
  [31m-            ]) : [],[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'pgsql' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'pgsql',[0m
  [35;1m[39m[0m
  [31m-            'url' => env('DATABASE_URL'),[0m
  [35;1m[39m[0m
  [31m-            'host' => env('DB_HOST', '127.0.0.1'),[0m
  [35;1m[39m[0m
  [31m-            'port' => env('DB_PORT', '5432'),[0m
  [35;1m[39m[0m
  [31m-            'database' => env('DB_DATABASE', 'forge'),[0m
  [35;1m[39m[0m
  [31m-            'username' => env('DB_USERNAME', 'forge'),[0m
  [35;1m[39m[0m
  [31m-            'password' => env('DB_PASSWORD', ''),[0m
  [35;1m[39m[0m
  [31m-            'charset' => 'utf8',[0m
  [35;1m[39m[0m
  [31m-            'prefix' => '',[0m
  [35;1m[39m[0m
  [31m-            'prefix_indexes' => true,[0m
  [35;1m[39m[0m
  [31m-            'search_path' => 'public',[0m
  [35;1m[39m[0m
  [31m-            'sslmode' => 'prefer',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'sqlsrv' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'sqlsrv',[0m
  [35;1m[39m[0m
  [31m-            'url' => env('DATABASE_URL'),[0m
  [35;1m[39m[0m
  [31m-            'host' => env('DB_HOST', 'localhost'),[0m
  [35;1m[39m[0m
  [31m-            'port' => env('DB_PORT', '1433'),[0m
  [35;1m[39m[0m
  [31m-            'database' => env('DB_DATABASE', 'forge'),[0m
  [35;1m[39m[0m
  [31m-            'username' => env('DB_USERNAME', 'forge'),[0m
  [35;1m[39m[0m
  [31m-            'password' => env('DB_PASSWORD', ''),[0m
  [35;1m[39m[0m
  [31m-            'charset' => 'utf8',[0m
  [35;1m[39m[0m
  [31m-            'prefix' => '',[0m
  [35;1m[39m[0m
  [31m-            'prefix_indexes' => true,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Migration Repository Table[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This table keeps track of all the migrations that have already run for[0m
  [35;1m[39m[0m
  [31m-    | your application. Using this information, we can determine which of[0m
  [35;1m[39m[0m
  [31m-    | the migrations on disk haven't actually been run in the database.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'migrations' => 'migrations',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Redis Databases[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Redis is an open source, fast, and advanced key-value store that also[0m
  [35;1m[39m[0m
  [31m-    | provides a richer body of commands than a typical key-value system[0m
  [35;1m[39m[0m
  [31m-    | such as APC or Memcached. Laravel makes it easy to dig right in.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'redis' => [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'client' => env('REDIS_CLIENT', 'phpredis'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'options' => [[0m
  [35;1m[39m[0m
  [31m-            'cluster' => env('REDIS_CLUSTER', 'redis'),[0m
  [35;1m[39m[0m
  [31m-            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'default' => [[0m
  [35;1m[39m[0m
  [31m-            'url' => env('REDIS_URL'),[0m
  [35;1m[39m[0m
  [31m-            'host' => env('REDIS_HOST', '127.0.0.1'),[0m
  [35;1m[39m[0m
  [31m-            'password' => env('REDIS_PASSWORD'),[0m
  [35;1m[39m[0m
  [31m-            'port' => env('REDIS_PORT', '6379'),[0m
  [35;1m[39m[0m
  [31m-            'database' => env('REDIS_DB', '0'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'cache' => [[0m
  [35;1m[39m[0m
  [31m-            'url' => env('REDIS_URL'),[0m
  [35;1m[39m[0m
  [31m-            'host' => env('REDIS_HOST', '127.0.0.1'),[0m
  [35;1m[39m[0m
  [31m-            'password' => env('REDIS_PASSWORD'),[0m
  [35;1m[39m[0m
  [31m-            'port' => env('REDIS_PORT', '6379'),[0m
  [35;1m[39m[0m
  [31m-            'database' => env('REDIS_CACHE_DB', '1'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Str;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Database Connection Name[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify which of the database connections below you wish[39m[0m
  [32m+    | to use as your default connection for all database work. Of course[39m[0m
  [32m+    | you may use many connections at once using the Database library.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'default' => env('DB_CONNECTION', 'mysql'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Database Connections[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here are each of the database connections setup for your application.[39m[0m
  [32m+    | Of course, examples of configuring each database platform that is[39m[0m
  [32m+    | supported by Laravel is shown below to make development simple.[39m[0m
  [32m+    |[39m[0m
  [32m+    |[39m[0m
  [32m+    | All database work in Laravel is done through the PHP PDO facilities[39m[0m
  [32m+    | so make sure you have the driver for your particular database of[39m[0m
  [32m+    | choice installed on your machine before you begin development.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'connections' => [[39m[0m
  [32m+[39m[0m
  [32m+        'sqlite' => [[39m[0m
  [32m+            'driver' => 'sqlite',[39m[0m
  [32m+            'url' => env('DATABASE_URL'),[39m[0m
  [32m+            'database' => env('DB_DATABASE', database_path('database.sqlite')),[39m[0m
  [32m+            'prefix' => '',[39m[0m
  [32m+            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'mysql' => [[39m[0m
  [32m+            'driver' => 'mysql',[39m[0m
  [32m+            'url' => env('DATABASE_URL'),[39m[0m
  [32m+            'host' => env('DB_HOST', '127.0.0.1'),[39m[0m
  [32m+            'port' => env('DB_PORT', '3306'),[39m[0m
  [32m+            'database' => env('DB_DATABASE', 'forge'),[39m[0m
  [32m+            'username' => env('DB_USERNAME', 'forge'),[39m[0m
  [32m+            'password' => env('DB_PASSWORD', ''),[39m[0m
  [32m+            'unix_socket' => env('DB_SOCKET', ''),[39m[0m
  [32m+            'charset' => 'utf8mb4',[39m[0m
  [32m+            'collation' => 'utf8mb4_unicode_ci',[39m[0m
  [32m+            'prefix' => '',[39m[0m
  [32m+            'prefix_indexes' => true,[39m[0m
  [32m+            'strict' => true,[39m[0m
  [32m+            'engine' => null,[39m[0m
  [32m+            'options' => extension_loaded('pdo_mysql') ? array_filter([[39m[0m
  [32m+                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),[39m[0m
  [32m+            ]) : [],[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'pgsql' => [[39m[0m
  [32m+            'driver' => 'pgsql',[39m[0m
  [32m+            'url' => env('DATABASE_URL'),[39m[0m
  [32m+            'host' => env('DB_HOST', '127.0.0.1'),[39m[0m
  [32m+            'port' => env('DB_PORT', '5432'),[39m[0m
  [32m+            'database' => env('DB_DATABASE', 'forge'),[39m[0m
  [32m+            'username' => env('DB_USERNAME', 'forge'),[39m[0m
  [32m+            'password' => env('DB_PASSWORD', ''),[39m[0m
  [32m+            'charset' => 'utf8',[39m[0m
  [32m+            'prefix' => '',[39m[0m
  [32m+            'prefix_indexes' => true,[39m[0m
  [32m+            'search_path' => 'public',[39m[0m
  [32m+            'sslmode' => 'prefer',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'sqlsrv' => [[39m[0m
  [32m+            'driver' => 'sqlsrv',[39m[0m
  [32m+            'url' => env('DATABASE_URL'),[39m[0m
  [32m+            'host' => env('DB_HOST', 'localhost'),[39m[0m
  [32m+            'port' => env('DB_PORT', '1433'),[39m[0m
  [32m+            'database' => env('DB_DATABASE', 'forge'),[39m[0m
  [32m+            'username' => env('DB_USERNAME', 'forge'),[39m[0m
  [32m+            'password' => env('DB_PASSWORD', ''),[39m[0m
  [32m+            'charset' => 'utf8',[39m[0m
  [32m+            'prefix' => '',[39m[0m
  [32m+            'prefix_indexes' => true,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Migration Repository Table[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This table keeps track of all the migrations that have already run for[39m[0m
  [32m+    | your application. Using this information, we can determine which of[39m[0m
  [32m+    | the migrations on disk haven't actually been run in the database.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'migrations' => 'migrations',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Redis Databases[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Redis is an open source, fast, and advanced key-value store that also[39m[0m
  [32m+    | provides a richer body of commands than a typical key-value system[39m[0m
  [32m+    | such as APC or Memcached. Laravel makes it easy to dig right in.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'redis' => [[39m[0m
  [32m+[39m[0m
  [32m+        'client' => env('REDIS_CLIENT', 'phpredis'),[39m[0m
  [32m+[39m[0m
  [32m+        'options' => [[39m[0m
  [32m+            'cluster' => env('REDIS_CLUSTER', 'redis'),[39m[0m
  [32m+            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'default' => [[39m[0m
  [32m+            'url' => env('REDIS_URL'),[39m[0m
  [32m+            'host' => env('REDIS_HOST', '127.0.0.1'),[39m[0m
  [32m+            'password' => env('REDIS_PASSWORD'),[39m[0m
  [32m+            'port' => env('REDIS_PORT', '6379'),[39m[0m
  [32m+            'database' => env('REDIS_DB', '0'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'cache' => [[39m[0m
  [32m+            'url' => env('REDIS_URL'),[39m[0m
  [32m+            'host' => env('REDIS_HOST', '127.0.0.1'),[39m[0m
  [32m+            'password' => env('REDIS_PASSWORD'),[39m[0m
  [32m+            'port' => env('REDIS_PORT', '6379'),[39m[0m
  [32m+            'database' => env('REDIS_CACHE_DB', '1'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/filesystems.php [90m                                                                                line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m76 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m76 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Filesystem Disk[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify the default filesystem disk that should be used[0m
  [35;1m[39m[0m
  [31m-    | by the framework. The "local" disk, as well as a variety of cloud[0m
  [35;1m[39m[0m
  [31m-    | based disks are available to your application. Just store away![0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'default' => env('FILESYSTEM_DISK', 'local'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Filesystem Disks[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may configure as many filesystem "disks" as you wish, and you[0m
  [35;1m[39m[0m
  [31m-    | may even configure multiple disks of the same driver. Defaults have[0m
  [35;1m[39m[0m
  [31m-    | been set up for each driver as an example of the required values.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported Drivers: "local", "ftp", "sftp", "s3"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'disks' => [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'local' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'local',[0m
  [35;1m[39m[0m
  [31m-            'root' => storage_path('app'),[0m
  [35;1m[39m[0m
  [31m-            'throw' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'public' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'local',[0m
  [35;1m[39m[0m
  [31m-            'root' => storage_path('app/public'),[0m
  [35;1m[39m[0m
  [31m-            'url' => env('APP_URL').'/storage',[0m
  [35;1m[39m[0m
  [31m-            'visibility' => 'public',[0m
  [35;1m[39m[0m
  [31m-            'throw' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        's3' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 's3',[0m
  [35;1m[39m[0m
  [31m-            'key' => env('AWS_ACCESS_KEY_ID'),[0m
  [35;1m[39m[0m
  [31m-            'secret' => env('AWS_SECRET_ACCESS_KEY'),[0m
  [35;1m[39m[0m
  [31m-            'region' => env('AWS_DEFAULT_REGION'),[0m
  [35;1m[39m[0m
  [31m-            'bucket' => env('AWS_BUCKET'),[0m
  [35;1m[39m[0m
  [31m-            'url' => env('AWS_URL'),[0m
  [35;1m[39m[0m
  [31m-            'endpoint' => env('AWS_ENDPOINT'),[0m
  [35;1m[39m[0m
  [31m-            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),[0m
  [35;1m[39m[0m
  [31m-            'throw' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Symbolic Links[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may configure the symbolic links that will be created when the[0m
  [35;1m[39m[0m
  [31m-    | `storage:link` Artisan command is executed. The array keys should be[0m
  [35;1m[39m[0m
  [31m-    | the locations of the links and the values should be their targets.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'links' => [[0m
  [35;1m[39m[0m
  [31m-        public_path('storage') => storage_path('app/public'),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Filesystem Disk[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify the default filesystem disk that should be used[39m[0m
  [32m+    | by the framework. The "local" disk, as well as a variety of cloud[39m[0m
  [32m+    | based disks are available to your application. Just store away![39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'default' => env('FILESYSTEM_DISK', 'local'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Filesystem Disks[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may configure as many filesystem "disks" as you wish, and you[39m[0m
  [32m+    | may even configure multiple disks of the same driver. Defaults have[39m[0m
  [32m+    | been set up for each driver as an example of the required values.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported Drivers: "local", "ftp", "sftp", "s3"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'disks' => [[39m[0m
  [32m+[39m[0m
  [32m+        'local' => [[39m[0m
  [32m+            'driver' => 'local',[39m[0m
  [32m+            'root' => storage_path('app'),[39m[0m
  [32m+            'throw' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'public' => [[39m[0m
  [32m+            'driver' => 'local',[39m[0m
  [32m+            'root' => storage_path('app/public'),[39m[0m
  [32m+            'url' => env('APP_URL').'/storage',[39m[0m
  [32m+            'visibility' => 'public',[39m[0m
  [32m+            'throw' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        's3' => [[39m[0m
  [32m+            'driver' => 's3',[39m[0m
  [32m+            'key' => env('AWS_ACCESS_KEY_ID'),[39m[0m
  [32m+            'secret' => env('AWS_SECRET_ACCESS_KEY'),[39m[0m
  [32m+            'region' => env('AWS_DEFAULT_REGION'),[39m[0m
  [32m+            'bucket' => env('AWS_BUCKET'),[39m[0m
  [32m+            'url' => env('AWS_URL'),[39m[0m
  [32m+            'endpoint' => env('AWS_ENDPOINT'),[39m[0m
  [32m+            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),[39m[0m
  [32m+            'throw' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Symbolic Links[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may configure the symbolic links that will be created when the[39m[0m
  [32m+    | `storage:link` Artisan command is executed. The array keys should be[39m[0m
  [32m+    | the locations of the links and the values should be their targets.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'links' => [[39m[0m
  [32m+        public_path('storage') => storage_path('app/public'),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/fortify.php [90m                                                                                    line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m146 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m146 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Providers\RouteServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Features;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Fortify Guard[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify which authentication guard Fortify will use while[0m
  [35;1m[39m[0m
  [31m-    | authenticating users. This value should correspond with one of your[0m
  [35;1m[39m[0m
  [31m-    | guards that is already present in your "auth" configuration file.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'guard' => 'web',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Fortify Password Broker[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify which password broker Fortify can use when a user[0m
  [35;1m[39m[0m
  [31m-    | is resetting their password. This configured value should match one[0m
  [35;1m[39m[0m
  [31m-    | of your password brokers setup in your "auth" configuration file.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'passwords' => 'users',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Username / Email[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This value defines which model attribute should be considered as your[0m
  [35;1m[39m[0m
  [31m-    | application's "username" field. Typically, this might be the email[0m
  [35;1m[39m[0m
  [31m-    | address of the users but you are free to change this value here.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Out of the box, Fortify expects forgot password and reset password[0m
  [35;1m[39m[0m
  [31m-    | requests to have a field named 'email'. If the application uses[0m
  [35;1m[39m[0m
  [31m-    | another name for the field you may define it below as needed.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'username' => 'email',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'email' => 'email',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Home Path[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may configure the path where users will get redirected during[0m
  [35;1m[39m[0m
  [31m-    | authentication or password reset when the operations are successful[0m
  [35;1m[39m[0m
  [31m-    | and the user is authenticated. You are free to change this value.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'home' => RouteServiceProvider::HOME,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Fortify Routes Prefix / Subdomain[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify which prefix Fortify will assign to all the routes[0m
  [35;1m[39m[0m
  [31m-    | that it registers with the application. If necessary, you may change[0m
  [35;1m[39m[0m
  [31m-    | subdomain under which all of the Fortify routes will be available.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'prefix' => '',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'domain' => null,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Fortify Routes Middleware[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify which middleware Fortify will assign to the routes[0m
  [35;1m[39m[0m
  [31m-    | that it registers with the application. If necessary, you may change[0m
  [35;1m[39m[0m
  [31m-    | these middleware but typically this provided default is preferred.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'middleware' => ['web'],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Rate Limiting[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | By default, Fortify will throttle logins to five requests per minute for[0m
  [35;1m[39m[0m
  [31m-    | every email and IP address combination. However, if you would like to[0m
  [35;1m[39m[0m
  [31m-    | specify a custom rate limiter to call then you may specify it here.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'limiters' => [[0m
  [35;1m[39m[0m
  [31m-        'login' => 'login',[0m
  [35;1m[39m[0m
  [31m-        'two-factor' => 'two-factor',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Register View Routes[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify if the routes returning views should be disabled as[0m
  [35;1m[39m[0m
  [31m-    | you may not need them when building your own application. This may be[0m
  [35;1m[39m[0m
  [31m-    | especially true if you're writing a custom single-page application.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'views' => true,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Features[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Some of the Fortify features are optional. You may disable the features[0m
  [35;1m[39m[0m
  [31m-    | by removing them from this array. You're free to only remove some of[0m
  [35;1m[39m[0m
  [31m-    | these features or you can even remove all of these if you need to.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'features' => [[0m
  [35;1m[39m[0m
  [31m-        Features::registration(),[0m
  [35;1m[39m[0m
  [31m-        Features::resetPasswords(),[0m
  [35;1m[39m[0m
  [31m-        // Features::emailVerification(),[0m
  [35;1m[39m[0m
  [31m-        Features::updateProfileInformation(),[0m
  [35;1m[39m[0m
  [31m-        Features::updatePasswords(),[0m
  [35;1m[39m[0m
  [31m-        Features::twoFactorAuthentication([[0m
  [35;1m[39m[0m
  [31m-            // 'confirm' => true,[0m
  [35;1m[39m[0m
  [31m-            'confirmPassword' => true,[0m
  [35;1m[39m[0m
  [31m-        ]),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use App\Providers\RouteServiceProvider;[39m[0m
  [32m+use Laravel\Fortify\Features;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Fortify Guard[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify which authentication guard Fortify will use while[39m[0m
  [32m+    | authenticating users. This value should correspond with one of your[39m[0m
  [32m+    | guards that is already present in your "auth" configuration file.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'guard' => 'web',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Fortify Password Broker[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify which password broker Fortify can use when a user[39m[0m
  [32m+    | is resetting their password. This configured value should match one[39m[0m
  [32m+    | of your password brokers setup in your "auth" configuration file.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'passwords' => 'users',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Username / Email[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This value defines which model attribute should be considered as your[39m[0m
  [32m+    | application's "username" field. Typically, this might be the email[39m[0m
  [32m+    | address of the users but you are free to change this value here.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Out of the box, Fortify expects forgot password and reset password[39m[0m
  [32m+    | requests to have a field named 'email'. If the application uses[39m[0m
  [32m+    | another name for the field you may define it below as needed.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'username' => 'email',[39m[0m
  [32m+[39m[0m
  [32m+    'email' => 'email',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Home Path[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may configure the path where users will get redirected during[39m[0m
  [32m+    | authentication or password reset when the operations are successful[39m[0m
  [32m+    | and the user is authenticated. You are free to change this value.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'home' => RouteServiceProvider::HOME,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Fortify Routes Prefix / Subdomain[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify which prefix Fortify will assign to all the routes[39m[0m
  [32m+    | that it registers with the application. If necessary, you may change[39m[0m
  [32m+    | subdomain under which all of the Fortify routes will be available.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'prefix' => '',[39m[0m
  [32m+[39m[0m
  [32m+    'domain' => null,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Fortify Routes Middleware[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify which middleware Fortify will assign to the routes[39m[0m
  [32m+    | that it registers with the application. If necessary, you may change[39m[0m
  [32m+    | these middleware but typically this provided default is preferred.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'middleware' => ['web'],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Rate Limiting[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | By default, Fortify will throttle logins to five requests per minute for[39m[0m
  [32m+    | every email and IP address combination. However, if you would like to[39m[0m
  [32m+    | specify a custom rate limiter to call then you may specify it here.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'limiters' => [[39m[0m
  [32m+        'login' => 'login',[39m[0m
  [32m+        'two-factor' => 'two-factor',[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Register View Routes[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify if the routes returning views should be disabled as[39m[0m
  [32m+    | you may not need them when building your own application. This may be[39m[0m
  [32m+    | especially true if you're writing a custom single-page application.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'views' => true,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Features[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Some of the Fortify features are optional. You may disable the features[39m[0m
  [32m+    | by removing them from this array. You're free to only remove some of[39m[0m
  [32m+    | these features or you can even remove all of these if you need to.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'features' => [[39m[0m
  [32m+        Features::registration(),[39m[0m
  [32m+        Features::resetPasswords(),[39m[0m
  [32m+        // Features::emailVerification(),[39m[0m
  [32m+        Features::updateProfileInformation(),[39m[0m
  [32m+        Features::updatePasswords(),[39m[0m
  [32m+        Features::twoFactorAuthentication([[39m[0m
  [32m+            // 'confirm' => true,[39m[0m
  [32m+            'confirmPassword' => true,[39m[0m
  [32m+        ]),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/hashing.php [90m                                                                                    line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m52 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m52 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Hash Driver[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option controls the default hash driver that will be used to hash[0m
  [35;1m[39m[0m
  [31m-    | passwords for your application. By default, the bcrypt algorithm is[0m
  [35;1m[39m[0m
  [31m-    | used; however, you remain free to modify this option if you wish.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported: "bcrypt", "argon", "argon2id"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'driver' => 'bcrypt',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Bcrypt Options[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify the configuration options that should be used when[0m
  [35;1m[39m[0m
  [31m-    | passwords are hashed using the Bcrypt algorithm. This will allow you[0m
  [35;1m[39m[0m
  [31m-    | to control the amount of time it takes to hash the given password.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'bcrypt' => [[0m
  [35;1m[39m[0m
  [31m-        'rounds' => env('BCRYPT_ROUNDS', 10),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Argon Options[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify the configuration options that should be used when[0m
  [35;1m[39m[0m
  [31m-    | passwords are hashed using the Argon algorithm. These will allow you[0m
  [35;1m[39m[0m
  [31m-    | to control the amount of time it takes to hash the given password.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'argon' => [[0m
  [35;1m[39m[0m
  [31m-        'memory' => 65536,[0m
  [35;1m[39m[0m
  [31m-        'threads' => 1,[0m
  [35;1m[39m[0m
  [31m-        'time' => 4,[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Hash Driver[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option controls the default hash driver that will be used to hash[39m[0m
  [32m+    | passwords for your application. By default, the bcrypt algorithm is[39m[0m
  [32m+    | used; however, you remain free to modify this option if you wish.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported: "bcrypt", "argon", "argon2id"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'driver' => 'bcrypt',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Bcrypt Options[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify the configuration options that should be used when[39m[0m
  [32m+    | passwords are hashed using the Bcrypt algorithm. This will allow you[39m[0m
  [32m+    | to control the amount of time it takes to hash the given password.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'bcrypt' => [[39m[0m
  [32m+        'rounds' => env('BCRYPT_ROUNDS', 10),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Argon Options[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify the configuration options that should be used when[39m[0m
  [32m+    | passwords are hashed using the Argon algorithm. These will allow you[39m[0m
  [32m+    | to control the amount of time it takes to hash the given password.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'argon' => [[39m[0m
  [32m+        'memory' => 65536,[39m[0m
  [32m+        'threads' => 1,[39m[0m
  [32m+        'time' => 4,[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/jetstream.php [90m                                                                                  line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m78 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m78 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Features;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Jetstream Stack[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This configuration value informs Jetstream which "stack" you will be[0m
  [35;1m[39m[0m
  [31m-    | using for your application. In general, this value is set for you[0m
  [35;1m[39m[0m
  [31m-    | during installation and will not need to be changed after that.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'stack' => 'inertia',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-     | Jetstream Route Middleware[0m
  [35;1m[39m[0m
  [31m-     |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-     |[0m
  [35;1m[39m[0m
  [31m-     | Here you may specify which middleware Jetstream will assign to the routes[0m
  [35;1m[39m[0m
  [31m-     | that it registers with the application. When necessary, you may modify[0m
  [35;1m[39m[0m
  [31m-     | these middleware; however, this default value is usually sufficient.[0m
  [35;1m[39m[0m
  [31m-     |[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'middleware' => ['web'],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Jetstream Guard[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify the authentication guard Jetstream will use while[0m
  [35;1m[39m[0m
  [31m-    | authenticating users. This value should correspond with one of your[0m
  [35;1m[39m[0m
  [31m-    | guards that is already present in your "auth" configuration file.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'guard' => 'sanctum',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Features[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Some of Jetstream's features are optional. You may disable the features[0m
  [35;1m[39m[0m
  [31m-    | by removing them from this array. You're free to only remove some of[0m
  [35;1m[39m[0m
  [31m-    | these features or you can even remove all of these if you need to.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'features' => [[0m
  [35;1m[39m[0m
  [31m-        // Features::termsAndPrivacyPolicy(),[0m
  [35;1m[39m[0m
  [31m-        // Features::profilePhotos(),[0m
  [35;1m[39m[0m
  [31m-        // Features::api(),[0m
  [35;1m[39m[0m
  [31m-        Features::teams(['invitations' => true]),[0m
  [35;1m[39m[0m
  [31m-        Features::accountDeletion(),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Profile Photo Disk[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This configuration value determines the default disk that will be used[0m
  [35;1m[39m[0m
  [31m-    | when storing profile photos for your application's users. Typically[0m
  [35;1m[39m[0m
  [31m-    | this will be the "public" disk but you may adjust this if needed.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'profile_photo_disk' => 'public',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Laravel\Jetstream\Features;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Jetstream Stack[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This configuration value informs Jetstream which "stack" you will be[39m[0m
  [32m+    | using for your application. In general, this value is set for you[39m[0m
  [32m+    | during installation and will not need to be changed after that.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'stack' => 'inertia',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     |--------------------------------------------------------------------------[39m[0m
  [32m+     | Jetstream Route Middleware[39m[0m
  [32m+     |--------------------------------------------------------------------------[39m[0m
  [32m+     |[39m[0m
  [32m+     | Here you may specify which middleware Jetstream will assign to the routes[39m[0m
  [32m+     | that it registers with the application. When necessary, you may modify[39m[0m
  [32m+     | these middleware; however, this default value is usually sufficient.[39m[0m
  [32m+     |[39m[0m
  [32m+     */[39m[0m
  [32m+[39m[0m
  [32m+    'middleware' => ['web'],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Jetstream Guard[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify the authentication guard Jetstream will use while[39m[0m
  [32m+    | authenticating users. This value should correspond with one of your[39m[0m
  [32m+    | guards that is already present in your "auth" configuration file.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'guard' => 'sanctum',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Features[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Some of Jetstream's features are optional. You may disable the features[39m[0m
  [32m+    | by removing them from this array. You're free to only remove some of[39m[0m
  [32m+    | these features or you can even remove all of these if you need to.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'features' => [[39m[0m
  [32m+        // Features::termsAndPrivacyPolicy(),[39m[0m
  [32m+        // Features::profilePhotos(),[39m[0m
  [32m+        // Features::api(),[39m[0m
  [32m+        Features::teams(['invitations' => true]),[39m[0m
  [32m+        Features::accountDeletion(),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Profile Photo Disk[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This configuration value determines the default disk that will be used[39m[0m
  [32m+    | when storing profile photos for your application's users. Typically[39m[0m
  [32m+    | this will be the "public" disk but you may adjust this if needed.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'profile_photo_disk' => 'public',[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/logging.php [90m                                                                                    line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m119 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m119 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Monolog\Handler\NullHandler;[0m
  [35;1m[39m[0m
  [31m-use Monolog\Handler\StreamHandler;[0m
  [35;1m[39m[0m
  [31m-use Monolog\Handler\SyslogUdpHandler;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Log Channel[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option defines the default log channel that gets used when writing[0m
  [35;1m[39m[0m
  [31m-    | messages to the logs. The name specified in this option should match[0m
  [35;1m[39m[0m
  [31m-    | one of the channels defined in the "channels" configuration array.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'default' => env('LOG_CHANNEL', 'stack'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Deprecations Log Channel[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option controls the log channel that should be used to log warnings[0m
  [35;1m[39m[0m
  [31m-    | regarding deprecated PHP and library features. This allows you to get[0m
  [35;1m[39m[0m
  [31m-    | your application ready for upcoming major versions of dependencies.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'deprecations' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Log Channels[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may configure the log channels for your application. Out of[0m
  [35;1m[39m[0m
  [31m-    | the box, Laravel uses the Monolog PHP logging library. This gives[0m
  [35;1m[39m[0m
  [31m-    | you a variety of powerful log handlers / formatters to utilize.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Available Drivers: "single", "daily", "slack", "syslog",[0m
  [35;1m[39m[0m
  [31m-    |                    "errorlog", "monolog",[0m
  [35;1m[39m[0m
  [31m-    |                    "custom", "stack"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'channels' => [[0m
  [35;1m[39m[0m
  [31m-        'stack' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'stack',[0m
  [35;1m[39m[0m
  [31m-            'channels' => ['single'],[0m
  [35;1m[39m[0m
  [31m-            'ignore_exceptions' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'single' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'single',[0m
  [35;1m[39m[0m
  [31m-            'path' => storage_path('logs/laravel.log'),[0m
  [35;1m[39m[0m
  [31m-            'level' => env('LOG_LEVEL', 'debug'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'daily' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'daily',[0m
  [35;1m[39m[0m
  [31m-            'path' => storage_path('logs/laravel.log'),[0m
  [35;1m[39m[0m
  [31m-            'level' => env('LOG_LEVEL', 'debug'),[0m
  [35;1m[39m[0m
  [31m-            'days' => 14,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'slack' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'slack',[0m
  [35;1m[39m[0m
  [31m-            'url' => env('LOG_SLACK_WEBHOOK_URL'),[0m
  [35;1m[39m[0m
  [31m-            'username' => 'Laravel Log',[0m
  [35;1m[39m[0m
  [31m-            'emoji' => ':boom:',[0m
  [35;1m[39m[0m
  [31m-            'level' => env('LOG_LEVEL', 'critical'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'papertrail' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'monolog',[0m
  [35;1m[39m[0m
  [31m-            'level' => env('LOG_LEVEL', 'debug'),[0m
  [35;1m[39m[0m
  [31m-            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),[0m
  [35;1m[39m[0m
  [31m-            'handler_with' => [[0m
  [35;1m[39m[0m
  [31m-                'host' => env('PAPERTRAIL_URL'),[0m
  [35;1m[39m[0m
  [31m-                'port' => env('PAPERTRAIL_PORT'),[0m
  [35;1m[39m[0m
  [31m-                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'stderr' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'monolog',[0m
  [35;1m[39m[0m
  [31m-            'level' => env('LOG_LEVEL', 'debug'),[0m
  [35;1m[39m[0m
  [31m-            'handler' => StreamHandler::class,[0m
  [35;1m[39m[0m
  [31m-            'formatter' => env('LOG_STDERR_FORMATTER'),[0m
  [35;1m[39m[0m
  [31m-            'with' => [[0m
  [35;1m[39m[0m
  [31m-                'stream' => 'php://stderr',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'syslog' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'syslog',[0m
  [35;1m[39m[0m
  [31m-            'level' => env('LOG_LEVEL', 'debug'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'errorlog' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'errorlog',[0m
  [35;1m[39m[0m
  [31m-            'level' => env('LOG_LEVEL', 'debug'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'null' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'monolog',[0m
  [35;1m[39m[0m
  [31m-            'handler' => NullHandler::class,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'emergency' => [[0m
  [35;1m[39m[0m
  [31m-            'path' => storage_path('logs/laravel.log'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Monolog\Handler\NullHandler;[39m[0m
  [32m+use Monolog\Handler\StreamHandler;[39m[0m
  [32m+use Monolog\Handler\SyslogUdpHandler;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Log Channel[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option defines the default log channel that gets used when writing[39m[0m
  [32m+    | messages to the logs. The name specified in this option should match[39m[0m
  [32m+    | one of the channels defined in the "channels" configuration array.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'default' => env('LOG_CHANNEL', 'stack'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Deprecations Log Channel[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option controls the log channel that should be used to log warnings[39m[0m
  [32m+    | regarding deprecated PHP and library features. This allows you to get[39m[0m
  [32m+    | your application ready for upcoming major versions of dependencies.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'deprecations' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Log Channels[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may configure the log channels for your application. Out of[39m[0m
  [32m+    | the box, Laravel uses the Monolog PHP logging library. This gives[39m[0m
  [32m+    | you a variety of powerful log handlers / formatters to utilize.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Available Drivers: "single", "daily", "slack", "syslog",[39m[0m
  [32m+    |                    "errorlog", "monolog",[39m[0m
  [32m+    |                    "custom", "stack"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'channels' => [[39m[0m
  [32m+        'stack' => [[39m[0m
  [32m+            'driver' => 'stack',[39m[0m
  [32m+            'channels' => ['single'],[39m[0m
  [32m+            'ignore_exceptions' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'single' => [[39m[0m
  [32m+            'driver' => 'single',[39m[0m
  [32m+            'path' => storage_path('logs/laravel.log'),[39m[0m
  [32m+            'level' => env('LOG_LEVEL', 'debug'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'daily' => [[39m[0m
  [32m+            'driver' => 'daily',[39m[0m
  [32m+            'path' => storage_path('logs/laravel.log'),[39m[0m
  [32m+            'level' => env('LOG_LEVEL', 'debug'),[39m[0m
  [32m+            'days' => 14,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'slack' => [[39m[0m
  [32m+            'driver' => 'slack',[39m[0m
  [32m+            'url' => env('LOG_SLACK_WEBHOOK_URL'),[39m[0m
  [32m+            'username' => 'Laravel Log',[39m[0m
  [32m+            'emoji' => ':boom:',[39m[0m
  [32m+            'level' => env('LOG_LEVEL', 'critical'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'papertrail' => [[39m[0m
  [32m+            'driver' => 'monolog',[39m[0m
  [32m+            'level' => env('LOG_LEVEL', 'debug'),[39m[0m
  [32m+            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),[39m[0m
  [32m+            'handler_with' => [[39m[0m
  [32m+                'host' => env('PAPERTRAIL_URL'),[39m[0m
  [32m+                'port' => env('PAPERTRAIL_PORT'),[39m[0m
  [32m+                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),[39m[0m
  [32m+            ],[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'stderr' => [[39m[0m
  [32m+            'driver' => 'monolog',[39m[0m
  [32m+            'level' => env('LOG_LEVEL', 'debug'),[39m[0m
  [32m+            'handler' => StreamHandler::class,[39m[0m
  [32m+            'formatter' => env('LOG_STDERR_FORMATTER'),[39m[0m
  [32m+            'with' => [[39m[0m
  [32m+                'stream' => 'php://stderr',[39m[0m
  [32m+            ],[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'syslog' => [[39m[0m
  [32m+            'driver' => 'syslog',[39m[0m
  [32m+            'level' => env('LOG_LEVEL', 'debug'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'errorlog' => [[39m[0m
  [32m+            'driver' => 'errorlog',[39m[0m
  [32m+            'level' => env('LOG_LEVEL', 'debug'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'null' => [[39m[0m
  [32m+            'driver' => 'monolog',[39m[0m
  [32m+            'handler' => NullHandler::class,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'emergency' => [[39m[0m
  [32m+            'path' => storage_path('logs/laravel.log'),[39m[0m
  [32m+        ],[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/mail.php [90m                                                                                       line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m117 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m117 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Mailer[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option controls the default mailer that is used to send any email[0m
  [35;1m[39m[0m
  [31m-    | messages sent by your application. Alternative mailers may be setup[0m
  [35;1m[39m[0m
  [31m-    | and used as needed; however, this mailer will be used by default.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'default' => env('MAIL_MAILER', 'smtp'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Mailer Configurations[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may configure all of the mailers used by your application plus[0m
  [35;1m[39m[0m
  [31m-    | their respective settings. Several examples have been configured for[0m
  [35;1m[39m[0m
  [31m-    | you and you are free to add your own as your application requires.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Laravel supports a variety of mail "transport" drivers to be used while[0m
  [35;1m[39m[0m
  [31m-    | sending an e-mail. You will specify which one you are using for your[0m
  [35;1m[39m[0m
  [31m-    | mailers below. You are free to add additional mailers as required.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported: "smtp", "sendmail", "mailgun", "ses",[0m
  [35;1m[39m[0m
  [31m-    |            "postmark", "log", "array", "failover"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'mailers' => [[0m
  [35;1m[39m[0m
  [31m-        'smtp' => [[0m
  [35;1m[39m[0m
  [31m-            'transport' => 'smtp',[0m
  [35;1m[39m[0m
  [31m-            'host' => env('MAIL_HOST', 'smtp.mailgun.org'),[0m
  [35;1m[39m[0m
  [31m-            'port' => env('MAIL_PORT', 587),[0m
  [35;1m[39m[0m
  [31m-            'encryption' => env('MAIL_ENCRYPTION', 'tls'),[0m
  [35;1m[39m[0m
  [31m-            'username' => env('MAIL_USERNAME'),[0m
  [35;1m[39m[0m
  [31m-            'password' => env('MAIL_PASSWORD'),[0m
  [35;1m[39m[0m
  [31m-            'timeout' => null,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'ses' => [[0m
  [35;1m[39m[0m
  [31m-            'transport' => 'ses',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'mailgun' => [[0m
  [35;1m[39m[0m
  [31m-            'transport' => 'mailgun',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'postmark' => [[0m
  [35;1m[39m[0m
  [31m-            'transport' => 'postmark',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'sendmail' => [[0m
  [35;1m[39m[0m
  [31m-            'transport' => 'sendmail',[0m
  [35;1m[39m[0m
  [31m-            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'log' => [[0m
  [35;1m[39m[0m
  [31m-            'transport' => 'log',[0m
  [35;1m[39m[0m
  [31m-            'channel' => env('MAIL_LOG_CHANNEL'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'array' => [[0m
  [35;1m[39m[0m
  [31m-            'transport' => 'array',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'failover' => [[0m
  [35;1m[39m[0m
  [31m-            'transport' => 'failover',[0m
  [35;1m[39m[0m
  [31m-            'mailers' => [[0m
  [35;1m[39m[0m
  [31m-                'smtp',[0m
  [35;1m[39m[0m
  [31m-                'log',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Global "From" Address[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | You may wish for all e-mails sent by your application to be sent from[0m
  [35;1m[39m[0m
  [31m-    | the same address. Here, you may specify a name and address that is[0m
  [35;1m[39m[0m
  [31m-    | used globally for all e-mails that are sent by your application.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'from' => [[0m
  [35;1m[39m[0m
  [31m-        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),[0m
  [35;1m[39m[0m
  [31m-        'name' => env('MAIL_FROM_NAME', 'Example'),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Markdown Mail Settings[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | If you are using Markdown based email rendering, you may configure your[0m
  [35;1m[39m[0m
  [31m-    | theme and component paths here, allowing you to customize the design[0m
  [35;1m[39m[0m
  [31m-    | of the emails. Or, you may simply stick with the Laravel defaults![0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'markdown' => [[0m
  [35;1m[39m[0m
  [31m-        'theme' => 'default',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'paths' => [[0m
  [35;1m[39m[0m
  [31m-            resource_path('views/vendor/mail'),[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Mailer[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option controls the default mailer that is used to send any email[39m[0m
  [32m+    | messages sent by your application. Alternative mailers may be setup[39m[0m
  [32m+    | and used as needed; however, this mailer will be used by default.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'default' => env('MAIL_MAILER', 'smtp'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Mailer Configurations[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may configure all of the mailers used by your application plus[39m[0m
  [32m+    | their respective settings. Several examples have been configured for[39m[0m
  [32m+    | you and you are free to add your own as your application requires.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Laravel supports a variety of mail "transport" drivers to be used while[39m[0m
  [32m+    | sending an e-mail. You will specify which one you are using for your[39m[0m
  [32m+    | mailers below. You are free to add additional mailers as required.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported: "smtp", "sendmail", "mailgun", "ses",[39m[0m
  [32m+    |            "postmark", "log", "array", "failover"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'mailers' => [[39m[0m
  [32m+        'smtp' => [[39m[0m
  [32m+            'transport' => 'smtp',[39m[0m
  [32m+            'host' => env('MAIL_HOST', 'smtp.mailgun.org'),[39m[0m
  [32m+            'port' => env('MAIL_PORT', 587),[39m[0m
  [32m+            'encryption' => env('MAIL_ENCRYPTION', 'tls'),[39m[0m
  [32m+            'username' => env('MAIL_USERNAME'),[39m[0m
  [32m+            'password' => env('MAIL_PASSWORD'),[39m[0m
  [32m+            'timeout' => null,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'ses' => [[39m[0m
  [32m+            'transport' => 'ses',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'mailgun' => [[39m[0m
  [32m+            'transport' => 'mailgun',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'postmark' => [[39m[0m
  [32m+            'transport' => 'postmark',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'sendmail' => [[39m[0m
  [32m+            'transport' => 'sendmail',[39m[0m
  [32m+            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'log' => [[39m[0m
  [32m+            'transport' => 'log',[39m[0m
  [32m+            'channel' => env('MAIL_LOG_CHANNEL'),[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'array' => [[39m[0m
  [32m+            'transport' => 'array',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'failover' => [[39m[0m
  [32m+            'transport' => 'failover',[39m[0m
  [32m+            'mailers' => [[39m[0m
  [32m+                'smtp',[39m[0m
  [32m+                'log',[39m[0m
  [32m+            ],[39m[0m
  [32m+        ],[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Global "From" Address[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | You may wish for all e-mails sent by your application to be sent from[39m[0m
  [32m+    | the same address. Here, you may specify a name and address that is[39m[0m
  [32m+    | used globally for all e-mails that are sent by your application.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'from' => [[39m[0m
  [32m+        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),[39m[0m
  [32m+        'name' => env('MAIL_FROM_NAME', 'Example'),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Markdown Mail Settings[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | If you are using Markdown based email rendering, you may configure your[39m[0m
  [32m+    | theme and component paths here, allowing you to customize the design[39m[0m
  [32m+    | of the emails. Or, you may simply stick with the Laravel defaults![39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'markdown' => [[39m[0m
  [32m+        'theme' => 'default',[39m[0m
  [32m+[39m[0m
  [32m+        'paths' => [[39m[0m
  [32m+            resource_path('views/vendor/mail'),[39m[0m
  [32m+        ],[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/queue.php [90m                                                                                      line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m93 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m93 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Queue Connection Name[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Laravel's queue API supports an assortment of back-ends via a single[0m
  [35;1m[39m[0m
  [31m-    | API, giving you convenient access to each back-end using the same[0m
  [35;1m[39m[0m
  [31m-    | syntax for every one. Here you may define a default connection.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'default' => env('QUEUE_CONNECTION', 'sync'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Queue Connections[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may configure the connection information for each server that[0m
  [35;1m[39m[0m
  [31m-    | is used by your application. A default configuration has been added[0m
  [35;1m[39m[0m
  [31m-    | for each back-end shipped with Laravel. You are free to add more.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'connections' => [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'sync' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'sync',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'database' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'database',[0m
  [35;1m[39m[0m
  [31m-            'table' => 'jobs',[0m
  [35;1m[39m[0m
  [31m-            'queue' => 'default',[0m
  [35;1m[39m[0m
  [31m-            'retry_after' => 90,[0m
  [35;1m[39m[0m
  [31m-            'after_commit' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'beanstalkd' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'beanstalkd',[0m
  [35;1m[39m[0m
  [31m-            'host' => 'localhost',[0m
  [35;1m[39m[0m
  [31m-            'queue' => 'default',[0m
  [35;1m[39m[0m
  [31m-            'retry_after' => 90,[0m
  [35;1m[39m[0m
  [31m-            'block_for' => 0,[0m
  [35;1m[39m[0m
  [31m-            'after_commit' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'sqs' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'sqs',[0m
  [35;1m[39m[0m
  [31m-            'key' => env('AWS_ACCESS_KEY_ID'),[0m
  [35;1m[39m[0m
  [31m-            'secret' => env('AWS_SECRET_ACCESS_KEY'),[0m
  [35;1m[39m[0m
  [31m-            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),[0m
  [35;1m[39m[0m
  [31m-            'queue' => env('SQS_QUEUE', 'default'),[0m
  [35;1m[39m[0m
  [31m-            'suffix' => env('SQS_SUFFIX'),[0m
  [35;1m[39m[0m
  [31m-            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),[0m
  [35;1m[39m[0m
  [31m-            'after_commit' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        'redis' => [[0m
  [35;1m[39m[0m
  [31m-            'driver' => 'redis',[0m
  [35;1m[39m[0m
  [31m-            'connection' => 'default',[0m
  [35;1m[39m[0m
  [31m-            'queue' => env('REDIS_QUEUE', 'default'),[0m
  [35;1m[39m[0m
  [31m-            'retry_after' => 90,[0m
  [35;1m[39m[0m
  [31m-            'block_for' => null,[0m
  [35;1m[39m[0m
  [31m-            'after_commit' => false,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Failed Queue Jobs[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | These options configure the behavior of failed queue job logging so you[0m
  [35;1m[39m[0m
  [31m-    | can control which database and table are used to store the jobs that[0m
  [35;1m[39m[0m
  [31m-    | have failed. You may change them to any database / table you wish.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'failed' => [[0m
  [35;1m[39m[0m
  [31m-        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),[0m
  [35;1m[39m[0m
  [31m-        'database' => env('DB_CONNECTION', 'mysql'),[0m
  [35;1m[39m[0m
  [31m-        'table' => 'failed_jobs',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Queue Connection Name[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Laravel's queue API supports an assortment of back-ends via a single[39m[0m
  [32m+    | API, giving you convenient access to each back-end using the same[39m[0m
  [32m+    | syntax for every one. Here you may define a default connection.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'default' => env('QUEUE_CONNECTION', 'sync'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Queue Connections[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may configure the connection information for each server that[39m[0m
  [32m+    | is used by your application. A default configuration has been added[39m[0m
  [32m+    | for each back-end shipped with Laravel. You are free to add more.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'connections' => [[39m[0m
  [32m+[39m[0m
  [32m+        'sync' => [[39m[0m
  [32m+            'driver' => 'sync',[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'database' => [[39m[0m
  [32m+            'driver' => 'database',[39m[0m
  [32m+            'table' => 'jobs',[39m[0m
  [32m+            'queue' => 'default',[39m[0m
  [32m+            'retry_after' => 90,[39m[0m
  [32m+            'after_commit' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'beanstalkd' => [[39m[0m
  [32m+            'driver' => 'beanstalkd',[39m[0m
  [32m+            'host' => 'localhost',[39m[0m
  [32m+            'queue' => 'default',[39m[0m
  [32m+            'retry_after' => 90,[39m[0m
  [32m+            'block_for' => 0,[39m[0m
  [32m+            'after_commit' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'sqs' => [[39m[0m
  [32m+            'driver' => 'sqs',[39m[0m
  [32m+            'key' => env('AWS_ACCESS_KEY_ID'),[39m[0m
  [32m+            'secret' => env('AWS_SECRET_ACCESS_KEY'),[39m[0m
  [32m+            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),[39m[0m
  [32m+            'queue' => env('SQS_QUEUE', 'default'),[39m[0m
  [32m+            'suffix' => env('SQS_SUFFIX'),[39m[0m
  [32m+            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),[39m[0m
  [32m+            'after_commit' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+        'redis' => [[39m[0m
  [32m+            'driver' => 'redis',[39m[0m
  [32m+            'connection' => 'default',[39m[0m
  [32m+            'queue' => env('REDIS_QUEUE', 'default'),[39m[0m
  [32m+            'retry_after' => 90,[39m[0m
  [32m+            'block_for' => null,[39m[0m
  [32m+            'after_commit' => false,[39m[0m
  [32m+        ],[39m[0m
  [32m+[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Failed Queue Jobs[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | These options configure the behavior of failed queue job logging so you[39m[0m
  [32m+    | can control which database and table are used to store the jobs that[39m[0m
  [32m+    | have failed. You may change them to any database / table you wish.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'failed' => [[39m[0m
  [32m+        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),[39m[0m
  [32m+        'database' => env('DB_CONNECTION', 'mysql'),[39m[0m
  [32m+        'table' => 'failed_jobs',[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/sanctum.php [90m                                                                                    line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m67 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m67 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Laravel\Sanctum\Sanctum;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Stateful Domains[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Requests from the following domains / hosts will receive stateful API[0m
  [35;1m[39m[0m
  [31m-    | authentication cookies. Typically, these should include your local[0m
  [35;1m[39m[0m
  [31m-    | and production domains which access your API via a frontend SPA.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf([0m
  [35;1m[39m[0m
  [31m-        '%s%s',[0m
  [35;1m[39m[0m
  [31m-        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',[0m
  [35;1m[39m[0m
  [31m-        Sanctum::currentApplicationUrlWithPort()[0m
  [35;1m[39m[0m
  [31m-    ))),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Sanctum Guards[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This array contains the authentication guards that will be checked when[0m
  [35;1m[39m[0m
  [31m-    | Sanctum is trying to authenticate a request. If none of these guards[0m
  [35;1m[39m[0m
  [31m-    | are able to authenticate the request, Sanctum will use the bearer[0m
  [35;1m[39m[0m
  [31m-    | token that's present on an incoming request for authentication.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'guard' => ['web'],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Expiration Minutes[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This value controls the number of minutes until an issued token will be[0m
  [35;1m[39m[0m
  [31m-    | considered expired. If this value is null, personal access tokens do[0m
  [35;1m[39m[0m
  [31m-    | not expire. This won't tweak the lifetime of first-party sessions.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'expiration' => null,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Sanctum Middleware[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | When authenticating your first-party SPA with Sanctum you may need to[0m
  [35;1m[39m[0m
  [31m-    | customize some of the middleware Sanctum uses while processing the[0m
  [35;1m[39m[0m
  [31m-    | request. You may change the middleware listed below as required.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'middleware' => [[0m
  [35;1m[39m[0m
  [31m-        'verify_csrf_token' => App\Http\Middleware\VerifyCsrfToken::class,[0m
  [35;1m[39m[0m
  [31m-        'encrypt_cookies' => App\Http\Middleware\EncryptCookies::class,[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Laravel\Sanctum\Sanctum;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Stateful Domains[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Requests from the following domains / hosts will receive stateful API[39m[0m
  [32m+    | authentication cookies. Typically, these should include your local[39m[0m
  [32m+    | and production domains which access your API via a frontend SPA.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf([39m[0m
  [32m+        '%s%s',[39m[0m
  [32m+        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',[39m[0m
  [32m+        Sanctum::currentApplicationUrlWithPort()[39m[0m
  [32m+    ))),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Sanctum Guards[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This array contains the authentication guards that will be checked when[39m[0m
  [32m+    | Sanctum is trying to authenticate a request. If none of these guards[39m[0m
  [32m+    | are able to authenticate the request, Sanctum will use the bearer[39m[0m
  [32m+    | token that's present on an incoming request for authentication.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'guard' => ['web'],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Expiration Minutes[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This value controls the number of minutes until an issued token will be[39m[0m
  [32m+    | considered expired. If this value is null, personal access tokens do[39m[0m
  [32m+    | not expire. This won't tweak the lifetime of first-party sessions.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'expiration' => null,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Sanctum Middleware[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | When authenticating your first-party SPA with Sanctum you may need to[39m[0m
  [32m+    | customize some of the middleware Sanctum uses while processing the[39m[0m
  [32m+    | request. You may change the middleware listed below as required.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'middleware' => [[39m[0m
  [32m+        'verify_csrf_token' => App\Http\Middleware\VerifyCsrfToken::class,[39m[0m
  [32m+        'encrypt_cookies' => App\Http\Middleware\EncryptCookies::class,[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/services.php [90m                                                                                   line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Third Party Services[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This file is for storing the credentials for third party services such[0m
  [35;1m[39m[0m
  [31m-    | as Mailgun, Postmark, AWS and more. This file provides the de facto[0m
  [35;1m[39m[0m
  [31m-    | location for this type of information, allowing packages to have[0m
  [35;1m[39m[0m
  [31m-    | a conventional file to locate the various service credentials.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'mailgun' => [[0m
  [35;1m[39m[0m
  [31m-        'domain' => env('MAILGUN_DOMAIN'),[0m
  [35;1m[39m[0m
  [31m-        'secret' => env('MAILGUN_SECRET'),[0m
  [35;1m[39m[0m
  [31m-        'endpoint' => env('MAILGUN_ENDPOINT', 'api.mailgun.net'),[0m
  [35;1m[39m[0m
  [31m-        'scheme' => 'https',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'postmark' => [[0m
  [35;1m[39m[0m
  [31m-        'token' => env('POSTMARK_TOKEN'),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'ses' => [[0m
  [35;1m[39m[0m
  [31m-        'key' => env('AWS_ACCESS_KEY_ID'),[0m
  [35;1m[39m[0m
  [31m-        'secret' => env('AWS_SECRET_ACCESS_KEY'),[0m
  [35;1m[39m[0m
  [31m-        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'api' => [[0m
  [35;1m[39m[0m
  [31m-        'url' => env('API_URL'),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Third Party Services[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This file is for storing the credentials for third party services such[39m[0m
  [32m+    | as Mailgun, Postmark, AWS and more. This file provides the de facto[39m[0m
  [32m+    | location for this type of information, allowing packages to have[39m[0m
  [32m+    | a conventional file to locate the various service credentials.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'mailgun' => [[39m[0m
  [32m+        'domain' => env('MAILGUN_DOMAIN'),[39m[0m
  [32m+        'secret' => env('MAILGUN_SECRET'),[39m[0m
  [32m+        'endpoint' => env('MAILGUN_ENDPOINT', 'api.mailgun.net'),[39m[0m
  [32m+        'scheme' => 'https',[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    'postmark' => [[39m[0m
  [32m+        'token' => env('POSTMARK_TOKEN'),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    'ses' => [[39m[0m
  [32m+        'key' => env('AWS_ACCESS_KEY_ID'),[39m[0m
  [32m+        'secret' => env('AWS_SECRET_ACCESS_KEY'),[39m[0m
  [32m+        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    'api' => [[39m[0m
  [32m+        'url' => env('API_URL'),[39m[0m
  [32m+    ],[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/session.php [90m                                                                                    line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m201 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m201 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Default Session Driver[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option controls the default session "driver" that will be used on[0m
  [35;1m[39m[0m
  [31m-    | requests. By default, we will use the lightweight native driver but[0m
  [35;1m[39m[0m
  [31m-    | you may specify any of the other wonderful drivers provided here.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported: "file", "cookie", "database", "apc",[0m
  [35;1m[39m[0m
  [31m-    |            "memcached", "redis", "dynamodb", "array"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'driver' => env('SESSION_DRIVER', 'database'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Lifetime[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify the number of minutes that you wish the session[0m
  [35;1m[39m[0m
  [31m-    | to be allowed to remain idle before it expires. If you want them[0m
  [35;1m[39m[0m
  [31m-    | to immediately expire on the browser closing, set that option.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'lifetime' => env('SESSION_LIFETIME', 120),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'expire_on_close' => false,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Encryption[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option allows you to easily specify that all of your session data[0m
  [35;1m[39m[0m
  [31m-    | should be encrypted before it is stored. All encryption will be run[0m
  [35;1m[39m[0m
  [31m-    | automatically by Laravel and you can use the Session like normal.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'encrypt' => false,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session File Location[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | When using the native session driver, we need a location where session[0m
  [35;1m[39m[0m
  [31m-    | files may be stored. A default has been set for you but a different[0m
  [35;1m[39m[0m
  [31m-    | location may be specified. This is only needed for file sessions.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'files' => storage_path('framework/sessions'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Database Connection[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | When using the "database" or "redis" session drivers, you may specify a[0m
  [35;1m[39m[0m
  [31m-    | connection that should be used to manage these sessions. This should[0m
  [35;1m[39m[0m
  [31m-    | correspond to a connection in your database configuration options.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'connection' => env('SESSION_CONNECTION'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Database Table[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | When using the "database" session driver, you may specify the table we[0m
  [35;1m[39m[0m
  [31m-    | should use to manage the sessions. Of course, a sensible default is[0m
  [35;1m[39m[0m
  [31m-    | provided for you; however, you are free to change this as needed.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'table' => 'sessions',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Cache Store[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | While using one of the framework's cache driven session backends you may[0m
  [35;1m[39m[0m
  [31m-    | list a cache store that should be used for these sessions. This value[0m
  [35;1m[39m[0m
  [31m-    | must match with one of the application's configured cache "stores".[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Affects: "apc", "dynamodb", "memcached", "redis"[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'store' => env('SESSION_STORE'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Sweeping Lottery[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Some session drivers must manually sweep their storage location to get[0m
  [35;1m[39m[0m
  [31m-    | rid of old sessions from storage. Here are the chances that it will[0m
  [35;1m[39m[0m
  [31m-    | happen on a given request. By default, the odds are 2 out of 100.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'lottery' => [2, 100],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Cookie Name[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may change the name of the cookie used to identify a session[0m
  [35;1m[39m[0m
  [31m-    | instance by ID. The name specified here will get used every time a[0m
  [35;1m[39m[0m
  [31m-    | new session cookie is created by the framework for every driver.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'cookie' => env([0m
  [35;1m[39m[0m
  [31m-        'SESSION_COOKIE',[0m
  [35;1m[39m[0m
  [31m-        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'[0m
  [35;1m[39m[0m
  [31m-    ),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Cookie Path[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The session cookie path determines the path for which the cookie will[0m
  [35;1m[39m[0m
  [31m-    | be regarded as available. Typically, this will be the root path of[0m
  [35;1m[39m[0m
  [31m-    | your application but you are free to change this when necessary.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'path' => '/',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Session Cookie Domain[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may change the domain of the cookie used to identify a session[0m
  [35;1m[39m[0m
  [31m-    | in your application. This will determine which domains the cookie is[0m
  [35;1m[39m[0m
  [31m-    | available to in your application. A sensible default has been set.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'domain' => env('SESSION_DOMAIN'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | HTTPS Only Cookies[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | By setting this option to true, session cookies will only be sent back[0m
  [35;1m[39m[0m
  [31m-    | to the server if the browser has a HTTPS connection. This will keep[0m
  [35;1m[39m[0m
  [31m-    | the cookie from being sent to you when it can't be done securely.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'secure' => env('SESSION_SECURE_COOKIE'),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | HTTP Access Only[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Setting this value to true will prevent JavaScript from accessing the[0m
  [35;1m[39m[0m
  [31m-    | value of the cookie and the cookie will only be accessible through[0m
  [35;1m[39m[0m
  [31m-    | the HTTP protocol. You are free to modify this option if needed.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'http_only' => true,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Same-Site Cookies[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option determines how your cookies behave when cross-site requests[0m
  [35;1m[39m[0m
  [31m-    | take place, and can be used to mitigate CSRF attacks. By default, we[0m
  [35;1m[39m[0m
  [31m-    | will set this value to "lax" since this is a secure default value.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Supported: "lax", "strict", "none", null[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'same_site' => 'lax',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Str;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Default Session Driver[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option controls the default session "driver" that will be used on[39m[0m
  [32m+    | requests. By default, we will use the lightweight native driver but[39m[0m
  [32m+    | you may specify any of the other wonderful drivers provided here.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported: "file", "cookie", "database", "apc",[39m[0m
  [32m+    |            "memcached", "redis", "dynamodb", "array"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'driver' => env('SESSION_DRIVER', 'database'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Lifetime[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify the number of minutes that you wish the session[39m[0m
  [32m+    | to be allowed to remain idle before it expires. If you want them[39m[0m
  [32m+    | to immediately expire on the browser closing, set that option.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'lifetime' => env('SESSION_LIFETIME', 120),[39m[0m
  [32m+[39m[0m
  [32m+    'expire_on_close' => false,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Encryption[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option allows you to easily specify that all of your session data[39m[0m
  [32m+    | should be encrypted before it is stored. All encryption will be run[39m[0m
  [32m+    | automatically by Laravel and you can use the Session like normal.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'encrypt' => false,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session File Location[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | When using the native session driver, we need a location where session[39m[0m
  [32m+    | files may be stored. A default has been set for you but a different[39m[0m
  [32m+    | location may be specified. This is only needed for file sessions.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'files' => storage_path('framework/sessions'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Database Connection[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | When using the "database" or "redis" session drivers, you may specify a[39m[0m
  [32m+    | connection that should be used to manage these sessions. This should[39m[0m
  [32m+    | correspond to a connection in your database configuration options.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'connection' => env('SESSION_CONNECTION'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Database Table[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | When using the "database" session driver, you may specify the table we[39m[0m
  [32m+    | should use to manage the sessions. Of course, a sensible default is[39m[0m
  [32m+    | provided for you; however, you are free to change this as needed.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'table' => 'sessions',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Cache Store[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | While using one of the framework's cache driven session backends you may[39m[0m
  [32m+    | list a cache store that should be used for these sessions. This value[39m[0m
  [32m+    | must match with one of the application's configured cache "stores".[39m[0m
  [32m+    |[39m[0m
  [32m+    | Affects: "apc", "dynamodb", "memcached", "redis"[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'store' => env('SESSION_STORE'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Sweeping Lottery[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Some session drivers must manually sweep their storage location to get[39m[0m
  [32m+    | rid of old sessions from storage. Here are the chances that it will[39m[0m
  [32m+    | happen on a given request. By default, the odds are 2 out of 100.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'lottery' => [2, 100],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Cookie Name[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may change the name of the cookie used to identify a session[39m[0m
  [32m+    | instance by ID. The name specified here will get used every time a[39m[0m
  [32m+    | new session cookie is created by the framework for every driver.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'cookie' => env([39m[0m
  [32m+        'SESSION_COOKIE',[39m[0m
  [32m+        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'[39m[0m
  [32m+    ),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Cookie Path[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The session cookie path determines the path for which the cookie will[39m[0m
  [32m+    | be regarded as available. Typically, this will be the root path of[39m[0m
  [32m+    | your application but you are free to change this when necessary.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'path' => '/',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Session Cookie Domain[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may change the domain of the cookie used to identify a session[39m[0m
  [32m+    | in your application. This will determine which domains the cookie is[39m[0m
  [32m+    | available to in your application. A sensible default has been set.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'domain' => env('SESSION_DOMAIN'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | HTTPS Only Cookies[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | By setting this option to true, session cookies will only be sent back[39m[0m
  [32m+    | to the server if the browser has a HTTPS connection. This will keep[39m[0m
  [32m+    | the cookie from being sent to you when it can't be done securely.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'secure' => env('SESSION_SECURE_COOKIE'),[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | HTTP Access Only[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Setting this value to true will prevent JavaScript from accessing the[39m[0m
  [32m+    | value of the cookie and the cookie will only be accessible through[39m[0m
  [32m+    | the HTTP protocol. You are free to modify this option if needed.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'http_only' => true,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Same-Site Cookies[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option determines how your cookies behave when cross-site requests[39m[0m
  [32m+    | take place, and can be used to mitigate CSRF attacks. By default, we[39m[0m
  [32m+    | will set this value to "lax" since this is a secure default value.[39m[0m
  [32m+    |[39m[0m
  [32m+    | Supported: "lax", "strict", "none", null[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'same_site' => 'lax',[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/view.php [90m                                                                                       line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | View Storage Paths[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Most templating systems load templates from disk. Here you may specify[0m
  [35;1m[39m[0m
  [31m-    | an array of paths that should be checked for your views. Of course[0m
  [35;1m[39m[0m
  [31m-    | the usual Laravel view path has already been registered for you.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'paths' => [[0m
  [35;1m[39m[0m
  [31m-        resource_path('views'),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Compiled View Path[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | This option determines where all the compiled Blade templates will be[0m
  [35;1m[39m[0m
  [31m-    | stored for your application. Typically, this is within the storage[0m
  [35;1m[39m[0m
  [31m-    | directory. However, as usual, you are free to change this value.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'compiled' => env([0m
  [35;1m[39m[0m
  [31m-        'VIEW_COMPILED_PATH',[0m
  [35;1m[39m[0m
  [31m-        realpath(storage_path('framework/views'))[0m
  [35;1m[39m[0m
  [31m-    ),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | View Storage Paths[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Most templating systems load templates from disk. Here you may specify[39m[0m
  [32m+    | an array of paths that should be checked for your views. Of course[39m[0m
  [32m+    | the usual Laravel view path has already been registered for you.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'paths' => [[39m[0m
  [32m+        resource_path('views'),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Compiled View Path[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | This option determines where all the compiled Blade templates will be[39m[0m
  [32m+    | stored for your application. Typically, this is within the storage[39m[0m
  [32m+    | directory. However, as usual, you are free to change this value.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'compiled' => env([39m[0m
  [32m+        'VIEW_COMPILED_PATH',[39m[0m
  [32m+        realpath(storage_path('framework/views'))[39m[0m
  [32m+    ),[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m config/websockets.php [90m                                                                                 line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m141 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m141 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use BeyondCode\LaravelWebSockets\Dashboard\Http\Middleware\Authorize;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * Set a custom dashboard configuration[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'dashboard' => [[0m
  [35;1m[39m[0m
  [31m-        'port' => env('LARAVEL_WEBSOCKETS_PORT', 6001),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * This package comes with multi tenancy out of the box. Here you can[0m
  [35;1m[39m[0m
  [31m-     * configure the different apps that can use the webSockets server.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * Optionally you specify capacity so you can limit the maximum[0m
  [35;1m[39m[0m
  [31m-     * concurrent connections for a specific app.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * Optionally you can disable client events so clients cannot send[0m
  [35;1m[39m[0m
  [31m-     * messages to each other via the webSockets.[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'apps' => [[0m
  [35;1m[39m[0m
  [31m-        [[0m
  [35;1m[39m[0m
  [31m-            'id' => env('PUSHER_APP_ID'),[0m
  [35;1m[39m[0m
  [31m-            'name' => env('APP_NAME'),[0m
  [35;1m[39m[0m
  [31m-            'key' => env('PUSHER_APP_KEY'),[0m
  [35;1m[39m[0m
  [31m-            'secret' => env('PUSHER_APP_SECRET'),[0m
  [35;1m[39m[0m
  [31m-            'path' => env('PUSHER_APP_PATH'),[0m
  [35;1m[39m[0m
  [31m-            'capacity' => null,[0m
  [35;1m[39m[0m
  [31m-            'enable_client_messages' => false,[0m
  [35;1m[39m[0m
  [31m-            'enable_statistics' => true,[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * This class is responsible for finding the apps. The default provider[0m
  [35;1m[39m[0m
  [31m-     * will use the apps defined in this config file.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * You can create a custom provider by implementing the[0m
  [35;1m[39m[0m
  [31m-     * `AppProvider` interface.[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'app_provider' => BeyondCode\LaravelWebSockets\Apps\ConfigAppProvider::class,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * This array contains the hosts of which you want to allow incoming requests.[0m
  [35;1m[39m[0m
  [31m-     * Leave this empty if you want to accept requests from all hosts.[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'allowed_origins' => [[0m
  [35;1m[39m[0m
  [31m-        //[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * The maximum request size in kilobytes that is allowed for an incoming WebSocket request.[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'max_request_size_in_kb' => 250,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * This path will be used to register the necessary routes for the package.[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'path' => 'laravel-websockets',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * Dashboard Routes Middleware[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * These middleware will be assigned to every dashboard route, giving you[0m
  [35;1m[39m[0m
  [31m-     * the chance to add your own middleware to this list or change any of[0m
  [35;1m[39m[0m
  [31m-     * the existing middleware. Or, you can simply stick with this list.[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'middleware' => [[0m
  [35;1m[39m[0m
  [31m-        'web',[0m
  [35;1m[39m[0m
  [31m-        Authorize::class,[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'statistics' => [[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * This model will be used to store the statistics of the WebSocketsServer.[0m
  [35;1m[39m[0m
  [31m-         * The only requirement is that the model should extend[0m
  [35;1m[39m[0m
  [31m-         * `WebSocketsStatisticsEntry` provided by this package.[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        'model' => \BeyondCode\LaravelWebSockets\Statistics\Models\WebSocketsStatisticsEntry::class,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /**[0m
  [35;1m[39m[0m
  [31m-         * The Statistics Logger will, by default, handle the incoming statistics, store them[0m
  [35;1m[39m[0m
  [31m-         * and then release them into the database on each interval defined below.[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        'logger' => BeyondCode\LaravelWebSockets\Statistics\Logger\HttpStatisticsLogger::class,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * Here you can specify the interval in seconds at which statistics should be logged.[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        'interval_in_seconds' => 60,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * When the clean-command is executed, all recorded statistics older than[0m
  [35;1m[39m[0m
  [31m-         * the number of days specified here will be deleted.[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        'delete_statistics_older_than_days' => 60,[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * Use an DNS resolver to make the requests to the statistics logger[0m
  [35;1m[39m[0m
  [31m-         * default is to resolve everything to 127.0.0.1.[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        'perform_dns_lookup' => false,[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * Define the optional SSL context for your WebSocket connections.[0m
  [35;1m[39m[0m
  [31m-     * You can see all available options at: http://php.net/manual/en/context.ssl.php[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'ssl' => [[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * Path to local certificate file on filesystem. It must be a PEM encoded file which[0m
  [35;1m[39m[0m
  [31m-         * contains your certificate and private key. It can optionally contain the[0m
  [35;1m[39m[0m
  [31m-         * certificate chain of issuers. The private key also may be contained[0m
  [35;1m[39m[0m
  [31m-         * in a separate file specified by local_pk.[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        'local_cert' => env('LARAVEL_WEBSOCKETS_SSL_LOCAL_CERT', null),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * Path to local private key file on filesystem in case of separate files for[0m
  [35;1m[39m[0m
  [31m-         * certificate (local_cert) and private key.[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        'local_pk' => env('LARAVEL_WEBSOCKETS_SSL_LOCAL_PK', null),[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        /*[0m
  [35;1m[39m[0m
  [31m-         * Passphrase for your local_cert file.[0m
  [35;1m[39m[0m
  [31m-         */[0m
  [35;1m[39m[0m
  [31m-        'passphrase' => env('LARAVEL_WEBSOCKETS_SSL_PASSPHRASE', null),[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-     * Channel Manager[0m
  [35;1m[39m[0m
  [31m-     * This class handles how channel persistence is handled.[0m
  [35;1m[39m[0m
  [31m-     * By default, persistence is stored in an array by the running webserver.[0m
  [35;1m[39m[0m
  [31m-     * The only requirement is that the class should implement[0m
  [35;1m[39m[0m
  [31m-     * `ChannelManager` interface provided by this package.[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    'channel_manager' => \BeyondCode\LaravelWebSockets\WebSockets\Channels\ChannelManagers\ArrayChannelManager::class,[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use BeyondCode\LaravelWebSockets\Dashboard\Http\Middleware\Authorize;[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * Set a custom dashboard configuration[39m[0m
  [32m+     */[39m[0m
  [32m+    'dashboard' => [[39m[0m
  [32m+        'port' => env('LARAVEL_WEBSOCKETS_PORT', 6001),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * This package comes with multi tenancy out of the box. Here you can[39m[0m
  [32m+     * configure the different apps that can use the webSockets server.[39m[0m
  [32m+     *[39m[0m
  [32m+     * Optionally you specify capacity so you can limit the maximum[39m[0m
  [32m+     * concurrent connections for a specific app.[39m[0m
  [32m+     *[39m[0m
  [32m+     * Optionally you can disable client events so clients cannot send[39m[0m
  [32m+     * messages to each other via the webSockets.[39m[0m
  [32m+     */[39m[0m
  [32m+    'apps' => [[39m[0m
  [32m+        [[39m[0m
  [32m+            'id' => env('PUSHER_APP_ID'),[39m[0m
  [32m+            'name' => env('APP_NAME'),[39m[0m
  [32m+            'key' => env('PUSHER_APP_KEY'),[39m[0m
  [32m+            'secret' => env('PUSHER_APP_SECRET'),[39m[0m
  [32m+            'path' => env('PUSHER_APP_PATH'),[39m[0m
  [32m+            'capacity' => null,[39m[0m
  [32m+            'enable_client_messages' => false,[39m[0m
  [32m+            'enable_statistics' => true,[39m[0m
  [32m+        ],[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * This class is responsible for finding the apps. The default provider[39m[0m
  [32m+     * will use the apps defined in this config file.[39m[0m
  [32m+     *[39m[0m
  [32m+     * You can create a custom provider by implementing the[39m[0m
  [32m+     * `AppProvider` interface.[39m[0m
  [32m+     */[39m[0m
  [32m+    'app_provider' => BeyondCode\LaravelWebSockets\Apps\ConfigAppProvider::class,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * This array contains the hosts of which you want to allow incoming requests.[39m[0m
  [32m+     * Leave this empty if you want to accept requests from all hosts.[39m[0m
  [32m+     */[39m[0m
  [32m+    'allowed_origins' => [[39m[0m
  [32m+        //[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * The maximum request size in kilobytes that is allowed for an incoming WebSocket request.[39m[0m
  [32m+     */[39m[0m
  [32m+    'max_request_size_in_kb' => 250,[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * This path will be used to register the necessary routes for the package.[39m[0m
  [32m+     */[39m[0m
  [32m+    'path' => 'laravel-websockets',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * Dashboard Routes Middleware[39m[0m
  [32m+     *[39m[0m
  [32m+     * These middleware will be assigned to every dashboard route, giving you[39m[0m
  [32m+     * the chance to add your own middleware to this list or change any of[39m[0m
  [32m+     * the existing middleware. Or, you can simply stick with this list.[39m[0m
  [32m+     */[39m[0m
  [32m+    'middleware' => [[39m[0m
  [32m+        'web',[39m[0m
  [32m+        Authorize::class,[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    'statistics' => [[39m[0m
  [32m+        /*[39m[0m
  [32m+         * This model will be used to store the statistics of the WebSocketsServer.[39m[0m
  [32m+         * The only requirement is that the model should extend[39m[0m
  [32m+         * `WebSocketsStatisticsEntry` provided by this package.[39m[0m
  [32m+         */[39m[0m
  [32m+        'model' => \BeyondCode\LaravelWebSockets\Statistics\Models\WebSocketsStatisticsEntry::class,[39m[0m
  [32m+[39m[0m
  [32m+        /**[39m[0m
  [32m+         * The Statistics Logger will, by default, handle the incoming statistics, store them[39m[0m
  [32m+         * and then release them into the database on each interval defined below.[39m[0m
  [32m+         */[39m[0m
  [32m+        'logger' => BeyondCode\LaravelWebSockets\Statistics\Logger\HttpStatisticsLogger::class,[39m[0m
  [32m+[39m[0m
  [32m+        /*[39m[0m
  [32m+         * Here you can specify the interval in seconds at which statistics should be logged.[39m[0m
  [32m+         */[39m[0m
  [32m+        'interval_in_seconds' => 60,[39m[0m
  [32m+[39m[0m
  [32m+        /*[39m[0m
  [32m+         * When the clean-command is executed, all recorded statistics older than[39m[0m
  [32m+         * the number of days specified here will be deleted.[39m[0m
  [32m+         */[39m[0m
  [32m+        'delete_statistics_older_than_days' => 60,[39m[0m
  [32m+[39m[0m
  [32m+        /*[39m[0m
  [32m+         * Use an DNS resolver to make the requests to the statistics logger[39m[0m
  [32m+         * default is to resolve everything to 127.0.0.1.[39m[0m
  [32m+         */[39m[0m
  [32m+        'perform_dns_lookup' => false,[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * Define the optional SSL context for your WebSocket connections.[39m[0m
  [32m+     * You can see all available options at: http://php.net/manual/en/context.ssl.php[39m[0m
  [32m+     */[39m[0m
  [32m+    'ssl' => [[39m[0m
  [32m+        /*[39m[0m
  [32m+         * Path to local certificate file on filesystem. It must be a PEM encoded file which[39m[0m
  [32m+         * contains your certificate and private key. It can optionally contain the[39m[0m
  [32m+         * certificate chain of issuers. The private key also may be contained[39m[0m
  [32m+         * in a separate file specified by local_pk.[39m[0m
  [32m+         */[39m[0m
  [32m+        'local_cert' => env('LARAVEL_WEBSOCKETS_SSL_LOCAL_CERT', null),[39m[0m
  [32m+[39m[0m
  [32m+        /*[39m[0m
  [32m+         * Path to local private key file on filesystem in case of separate files for[39m[0m
  [32m+         * certificate (local_cert) and private key.[39m[0m
  [32m+         */[39m[0m
  [32m+        'local_pk' => env('LARAVEL_WEBSOCKETS_SSL_LOCAL_PK', null),[39m[0m
  [32m+[39m[0m
  [32m+        /*[39m[0m
  [32m+         * Passphrase for your local_cert file.[39m[0m
  [32m+         */[39m[0m
  [32m+        'passphrase' => env('LARAVEL_WEBSOCKETS_SSL_PASSPHRASE', null),[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+     * Channel Manager[39m[0m
  [32m+     * This class handles how channel persistence is handled.[39m[0m
  [32m+     * By default, persistence is stored in an array by the running webserver.[39m[0m
  [32m+     * The only requirement is that the class should implement[39m[0m
  [32m+     * `ChannelManager` interface provided by this package.[39m[0m
  [32m+     */[39m[0m
  [32m+    'channel_manager' => \BeyondCode\LaravelWebSockets\WebSockets\Channels\ChannelManagers\ArrayChannelManager::class,[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m database/factories/TeamFactory.php [90m                                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m31 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m31 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Database\Factories;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\Factory;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TeamFactory extends Factory[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The name of the factory's corresponding model.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var string[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $model = Team::class;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Define the model's default state.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function definition()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'name' => $this->faker->unique()->company(),[0m
  [35;1m[39m[0m
  [31m-            'user_id' => User::factory(),[0m
  [35;1m[39m[0m
  [31m-            'personal_team' => true,[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Database\Factories;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\Factory;[39m[0m
  [32m+[39m[0m
  [32m+class TeamFactory extends Factory[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The name of the factory's corresponding model.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var string[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $model = Team::class;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Define the model's default state.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return array[39m[0m
  [32m+     */[39m[0m
  [32m+    public function definition()[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'name' => $this->faker->unique()->company(),[39m[0m
  [32m+            'user_id' => User::factory(),[39m[0m
  [32m+            'personal_team' => true,[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/factories/UserFactory.php [90mbraces, curly_braces_position, line_ending, unary_operator_spaces, not_operator[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m69 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m69 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Database\Factories;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Eloquent\Factories\Factory;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Features;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class UserFactory extends Factory[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * The name of the factory's corresponding model.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @var string[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    protected $model = User::class;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Define the model's default state.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return array[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function definition()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return [[0m
  [35;1m[39m[0m
  [31m-            'name' => $this->faker->name(),[0m
  [35;1m[39m[0m
  [31m-            'email' => $this->faker->unique()->safeEmail(),[0m
  [35;1m[39m[0m
  [31m-            'email_verified_at' => now(),[0m
  [35;1m[39m[0m
  [31m-            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password[0m
  [35;1m[39m[0m
  [31m-            'remember_token' => Str::random(10),[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Indicate that the model's email address should be unverified.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Database\Eloquent\Factories\Factory[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function unverified()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        return $this->state(function (array $attributes) {[0m
  [35;1m[39m[0m
  [31m-            return [[0m
  [35;1m[39m[0m
  [31m-                'email_verified_at' => null,[0m
  [35;1m[39m[0m
  [31m-            ];[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Indicate that the user should have a personal team.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return $this[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function withPersonalTeam()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::hasTeamFeatures()) {[0m
  [35;1m[39m[0m
  [31m-            return $this->state([]);[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return $this->has([0m
  [35;1m[39m[0m
  [31m-            Team::factory()[0m
  [35;1m[39m[0m
  [31m-                ->state(function (array $attributes, User $user) {[0m
  [35;1m[39m[0m
  [31m-                    return ['name' => $user->name.'\'s Team', 'user_id' => $user->id, 'personal_team' => true];[0m
  [35;1m[39m[0m
  [31m-                }),[0m
  [35;1m[39m[0m
  [31m-            'ownedTeams'[0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Database\Factories;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Database\Eloquent\Factories\Factory;[39m[0m
  [32m+use Illuminate\Support\Str;[39m[0m
  [32m+use Laravel\Jetstream\Features;[39m[0m
  [32m+[39m[0m
  [32m+class UserFactory extends Factory[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * The name of the factory's corresponding model.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @var string[39m[0m
  [32m+     */[39m[0m
  [32m+    protected $model = User::class;[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Define the model's default state.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return array[39m[0m
  [32m+     */[39m[0m
  [32m+    public function definition()[39m[0m
  [32m+    {[39m[0m
  [32m+        return [[39m[0m
  [32m+            'name' => $this->faker->name(),[39m[0m
  [32m+            'email' => $this->faker->unique()->safeEmail(),[39m[0m
  [32m+            'email_verified_at' => now(),[39m[0m
  [32m+            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password[39m[0m
  [32m+            'remember_token' => Str::random(10),[39m[0m
  [32m+        ];[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Indicate that the model's email address should be unverified.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return \Illuminate\Database\Eloquent\Factories\Factory[39m[0m
  [32m+     */[39m[0m
  [32m+    public function unverified()[39m[0m
  [32m+    {[39m[0m
  [32m+        return $this->state(function (array $attributes) {[39m[0m
  [32m+            return [[39m[0m
  [32m+                'email_verified_at' => null,[39m[0m
  [32m+            ];[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Indicate that the user should have a personal team.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return $this[39m[0m
  [32m+     */[39m[0m
  [32m+    public function withPersonalTeam()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::hasTeamFeatures()) {[39m[0m
  [32m+            return $this->state([]);[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        return $this->has([39m[0m
  [32m+            Team::factory()[39m[0m
  [32m+                ->state(function (array $attributes, User $user) {[39m[0m
  [32m+                    return ['name' => $user->name.'\'s Team', 'user_id' => $user->id, 'personal_team' => true];[39m[0m
  [32m+                }),[39m[0m
  [32m+            'ownedTeams'[39m[0m
  [32m+        );[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/0000_00_00_000000_create_websockets_statistics_entries_table.php [90mbraces, curly_braces_position[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreateWebSocketsStatisticsEntriesTable extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('websockets_statistics_entries', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->increments('id');[0m
  [35;1m[39m[0m
  [31m-            $table->string('app_id');[0m
  [35;1m[39m[0m
  [31m-            $table->integer('peak_connection_count');[0m
  [35;1m[39m[0m
  [31m-            $table->integer('websocket_message_count');[0m
  [35;1m[39m[0m
  [31m-            $table->integer('api_message_count');[0m
  [35;1m[39m[0m
  [31m-            $table->nullableTimestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('websockets_statistics_entries');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+class CreateWebSocketsStatisticsEntriesTable extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('websockets_statistics_entries', function (Blueprint $table) {[39m[0m
  [32m+            $table->increments('id');[39m[0m
  [32m+            $table->string('app_id');[39m[0m
  [32m+            $table->integer('peak_connection_count');[39m[0m
  [32m+            $table->integer('websocket_message_count');[39m[0m
  [32m+            $table->integer('api_message_count');[39m[0m
  [32m+            $table->nullableTimestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('websockets_statistics_entries');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2014_09_15_064633_create_jobs_table.php [90mclass_definition, braces, curly_braces_position, line_[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('jobs', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->bigIncrements('id');[0m
  [35;1m[39m[0m
  [31m-            $table->string('queue')->index();[0m
  [35;1m[39m[0m
  [31m-            $table->longText('payload');[0m
  [35;1m[39m[0m
  [31m-            $table->unsignedTinyInteger('attempts');[0m
  [35;1m[39m[0m
  [31m-            $table->unsignedInteger('reserved_at')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->unsignedInteger('available_at');[0m
  [35;1m[39m[0m
  [31m-            $table->unsignedInteger('created_at');[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('jobs');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('jobs', function (Blueprint $table) {[39m[0m
  [32m+            $table->bigIncrements('id');[39m[0m
  [32m+            $table->string('queue')->index();[39m[0m
  [32m+            $table->longText('payload');[39m[0m
  [32m+            $table->unsignedTinyInteger('attempts');[39m[0m
  [32m+            $table->unsignedInteger('reserved_at')->nullable();[39m[0m
  [32m+            $table->unsignedInteger('available_at');[39m[0m
  [32m+            $table->unsignedInteger('created_at');[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('jobs');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2014_09_15_072621_create_failed_jobs_table.php [90mclass_definition, braces, curly_braces_position[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('failed_jobs', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->string('uuid')->unique();[0m
  [35;1m[39m[0m
  [31m-            $table->text('connection');[0m
  [35;1m[39m[0m
  [31m-            $table->text('queue');[0m
  [35;1m[39m[0m
  [31m-            $table->longText('payload');[0m
  [35;1m[39m[0m
  [31m-            $table->longText('exception');[0m
  [35;1m[39m[0m
  [31m-            $table->timestamp('failed_at')->useCurrent();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('failed_jobs');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('failed_jobs', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->string('uuid')->unique();[39m[0m
  [32m+            $table->text('connection');[39m[0m
  [32m+            $table->text('queue');[39m[0m
  [32m+            $table->longText('payload');[39m[0m
  [32m+            $table->longText('exception');[39m[0m
  [32m+            $table->timestamp('failed_at')->useCurrent();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('failed_jobs');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2014_10_12_000000_create_users_table.php [90mclass_definition, braces, curly_braces_position, line[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m38 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m38 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('users', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->string('name');[0m
  [35;1m[39m[0m
  [31m-            $table->string('email')->unique();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamp('email_verified_at')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->string('password');[0m
  [35;1m[39m[0m
  [31m-            $table->rememberToken();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('current_team_id')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->string('profile_photo_path', 2048)->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('users');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('users', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->string('name');[39m[0m
  [32m+            $table->string('email')->unique();[39m[0m
  [32m+            $table->timestamp('email_verified_at')->nullable();[39m[0m
  [32m+            $table->string('password');[39m[0m
  [32m+            $table->rememberToken();[39m[0m
  [32m+            $table->foreignId('current_team_id')->nullable();[39m[0m
  [32m+            $table->string('profile_photo_path', 2048)->nullable();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('users');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2014_10_12_100000_create_password_resets_table.php [90mclass_definition, braces, curly_braces_posi[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('password_resets', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->string('email')->index();[0m
  [35;1m[39m[0m
  [31m-            $table->string('token');[0m
  [35;1m[39m[0m
  [31m-            $table->timestamp('created_at')->nullable();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('password_resets');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('password_resets', function (Blueprint $table) {[39m[0m
  [32m+            $table->string('email')->index();[39m[0m
  [32m+            $table->string('token');[39m[0m
  [32m+            $table->timestamp('created_at')->nullable();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('password_resets');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2014_10_12_200000_add_two_factor_columns_to_users_table.php [90mclass_definition, braces, curly_br[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m50 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m50 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Fortify;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::table('users', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->text('two_factor_secret')[0m
  [35;1m[39m[0m
  [31m-                    ->after('password')[0m
  [35;1m[39m[0m
  [31m-                    ->nullable();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $table->text('two_factor_recovery_codes')[0m
  [35;1m[39m[0m
  [31m-                    ->after('two_factor_secret')[0m
  [35;1m[39m[0m
  [31m-                    ->nullable();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            if (Fortify::confirmsTwoFactorAuthentication()) {[0m
  [35;1m[39m[0m
  [31m-                $table->timestamp('two_factor_confirmed_at')[0m
  [35;1m[39m[0m
  [31m-                        ->after('two_factor_recovery_codes')[0m
  [35;1m[39m[0m
  [31m-                        ->nullable();[0m
  [35;1m[39m[0m
  [31m-            }[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::table('users', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->dropColumn(array_merge([[0m
  [35;1m[39m[0m
  [31m-                'two_factor_secret',[0m
  [35;1m[39m[0m
  [31m-                'two_factor_recovery_codes',[0m
  [35;1m[39m[0m
  [31m-            ], Fortify::confirmsTwoFactorAuthentication() ? [[0m
  [35;1m[39m[0m
  [31m-                'two_factor_confirmed_at',[0m
  [35;1m[39m[0m
  [31m-            ] : []));[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+use Laravel\Fortify\Fortify;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::table('users', function (Blueprint $table) {[39m[0m
  [32m+            $table->text('two_factor_secret')[39m[0m
  [32m+                    ->after('password')[39m[0m
  [32m+                    ->nullable();[39m[0m
  [32m+[39m[0m
  [32m+            $table->text('two_factor_recovery_codes')[39m[0m
  [32m+                    ->after('two_factor_secret')[39m[0m
  [32m+                    ->nullable();[39m[0m
  [32m+[39m[0m
  [32m+            if (Fortify::confirmsTwoFactorAuthentication()) {[39m[0m
  [32m+                $table->timestamp('two_factor_confirmed_at')[39m[0m
  [32m+                        ->after('two_factor_recovery_codes')[39m[0m
  [32m+                        ->nullable();[39m[0m
  [32m+            }[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::table('users', function (Blueprint $table) {[39m[0m
  [32m+            $table->dropColumn(array_merge([[39m[0m
  [32m+                'two_factor_secret',[39m[0m
  [32m+                'two_factor_recovery_codes',[39m[0m
  [32m+            ], Fortify::confirmsTwoFactorAuthentication() ? [[39m[0m
  [32m+                'two_factor_confirmed_at',[39m[0m
  [32m+            ] : []));[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2019_12_14_000001_create_personal_access_tokens_table.php [90mbraces, curly_braces_position, line_[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreatePersonalAccessTokensTable extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('personal_access_tokens', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->bigIncrements('id');[0m
  [35;1m[39m[0m
  [31m-            $table->morphs('tokenable');[0m
  [35;1m[39m[0m
  [31m-            $table->string('name');[0m
  [35;1m[39m[0m
  [31m-            $table->string('token', 64)->unique();[0m
  [35;1m[39m[0m
  [31m-            $table->text('abilities')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamp('last_used_at')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('personal_access_tokens');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+class CreatePersonalAccessTokensTable extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('personal_access_tokens', function (Blueprint $table) {[39m[0m
  [32m+            $table->bigIncrements('id');[39m[0m
  [32m+            $table->morphs('tokenable');[39m[0m
  [32m+            $table->string('name');[39m[0m
  [32m+            $table->string('token', 64)->unique();[39m[0m
  [32m+            $table->text('abilities')->nullable();[39m[0m
  [32m+            $table->timestamp('last_used_at')->nullable();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('personal_access_tokens');[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2020_05_21_100000_create_teams_table.php [90mclass_definition, braces, curly_braces_position, line[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('teams', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('user_id')->index()->references('id')->on('users')->nullOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->integer('default_label_class_id')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->string('name');[0m
  [35;1m[39m[0m
  [31m-            $table->text('description')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->string('detection_type');[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('teams');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('teams', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('user_id')->index()->references('id')->on('users')->nullOnDelete();[39m[0m
  [32m+            $table->integer('default_label_class_id')->nullable();[39m[0m
  [32m+            $table->string('name');[39m[0m
  [32m+            $table->text('description')->nullable();[39m[0m
  [32m+            $table->string('detection_type');[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('teams');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2020_05_21_200000_create_team_user_table.php [90mclass_definition, braces, curly_braces_position,[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('team_user', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('team_id');[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('user_id');[0m
  [35;1m[39m[0m
  [31m-            $table->string('role')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $table->unique(['team_id', 'user_id']);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('team_user');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('team_user', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('team_id');[39m[0m
  [32m+            $table->foreignId('user_id');[39m[0m
  [32m+            $table->string('role')->nullable();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+[39m[0m
  [32m+            $table->unique(['team_id', 'user_id']);[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('team_user');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2020_05_21_300000_create_team_invitations_table.php [90mclass_definition, braces, curly_braces_pos[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('team_invitations', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('team_id')->constrained()->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->string('email');[0m
  [35;1m[39m[0m
  [31m-            $table->string('role')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $table->unique(['team_id', 'email']);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('team_invitations');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('team_invitations', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('team_id')->constrained()->cascadeOnDelete();[39m[0m
  [32m+            $table->string('email');[39m[0m
  [32m+            $table->string('role')->nullable();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+[39m[0m
  [32m+            $table->unique(['team_id', 'email']);[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('team_invitations');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_03_21_110755_create_sessions_table.php [90mclass_definition, braces, curly_braces_position, l[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('sessions', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->string('id')->primary();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('user_id')->nullable()->index();[0m
  [35;1m[39m[0m
  [31m-            $table->string('ip_address', 45)->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->text('user_agent')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->text('payload');[0m
  [35;1m[39m[0m
  [31m-            $table->integer('last_activity')->index();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('sessions');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('sessions', function (Blueprint $table) {[39m[0m
  [32m+            $table->string('id')->primary();[39m[0m
  [32m+            $table->foreignId('user_id')->nullable()->index();[39m[0m
  [32m+            $table->string('ip_address', 45)->nullable();[39m[0m
  [32m+            $table->text('user_agent')->nullable();[39m[0m
  [32m+            $table->text('payload');[39m[0m
  [32m+            $table->integer('last_activity')->index();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('sessions');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_03_21_142652_create_label_classes_table.php [90mclass_definition, braces, curly_braces_positi[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m36 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('label_classes', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('user_id')->references('id')->on('users')->nullOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('team_id')->references('id')->on('teams')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->string('identifier')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->string('name');[0m
  [35;1m[39m[0m
  [31m-            $table->string('color', 7);[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('label_classes');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('label_classes', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('user_id')->references('id')->on('users')->nullOnDelete();[39m[0m
  [32m+            $table->foreignId('team_id')->references('id')->on('teams')->cascadeOnDelete();[39m[0m
  [32m+            $table->string('identifier')->nullable();[39m[0m
  [32m+            $table->string('name');[39m[0m
  [32m+            $table->string('color', 7);[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('label_classes');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_03_22_142904_create_grid_cells_table.php [90mclass_definition, braces, curly_braces_position,[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('grid_cells', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->string('title')->index();[0m
  [35;1m[39m[0m
  [31m-            $table->string('type');[0m
  [35;1m[39m[0m
  [31m-            $table->geometry('geometry')->isGeometry(true)->projection(28992)->spatialIndex();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('grid_cells');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('grid_cells', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->string('title')->index();[39m[0m
  [32m+            $table->string('type');[39m[0m
  [32m+            $table->geometry('geometry')->isGeometry(true)->projection(28992)->spatialIndex();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('grid_cells');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_03_22_142905_create_regions_table.php [90mclass_definition, braces, curly_braces_position, li[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('regions', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->string('name');[0m
  [35;1m[39m[0m
  [31m-            $table->string('code');[0m
  [35;1m[39m[0m
  [31m-            $table->string('region_type');[0m
  [35;1m[39m[0m
  [31m-            $table->year('year');[0m
  [35;1m[39m[0m
  [31m-            $table->string('source_layer');[0m
  [35;1m[39m[0m
  [31m-            $table->geometry('geometry')->isGeometry(true)->projection(28992)->spatialIndex();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('regions');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('regions', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->string('name');[39m[0m
  [32m+            $table->string('code');[39m[0m
  [32m+            $table->string('region_type');[39m[0m
  [32m+            $table->year('year');[39m[0m
  [32m+            $table->string('source_layer');[39m[0m
  [32m+            $table->geometry('geometry')->isGeometry(true)->projection(28992)->spatialIndex();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('regions');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_124022_create_bbg_classes_table.php [90mclass_definition, braces, curly_braces_position[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('bbg_classes', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->string('title');[0m
  [35;1m[39m[0m
  [31m-            $table->string('code')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->year('year');[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('bbg_classes');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('bbg_classes', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->string('title');[39m[0m
  [32m+            $table->string('code')->nullable();[39m[0m
  [32m+            $table->year('year');[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('bbg_classes');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_124122_create_source_datasets_table.php [90mclass_definition, braces, curly_braces_posi[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('source_datasets', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->string('title');[0m
  [35;1m[39m[0m
  [31m-            $table->text('description');[0m
  [35;1m[39m[0m
  [31m-            $table->string('image_type');[0m
  [35;1m[39m[0m
  [31m-            $table->year('year');[0m
  [35;1m[39m[0m
  [31m-            $table->string('url');[0m
  [35;1m[39m[0m
  [31m-            $table->string('layer');[0m
  [35;1m[39m[0m
  [31m-            $table->string('crs');[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('source_datasets');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('source_datasets', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->string('title');[39m[0m
  [32m+            $table->text('description');[39m[0m
  [32m+            $table->string('image_type');[39m[0m
  [32m+            $table->year('year');[39m[0m
  [32m+            $table->string('url');[39m[0m
  [32m+            $table->string('layer');[39m[0m
  [32m+            $table->string('crs');[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('source_datasets');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_124552_create_source_dataset_grid_cell_table.php [90mclass_definition, braces, curly_br[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m34 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m34 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('source_dataset_grid_cell', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('source_dataset_id')->index()->references('id')->on('source_datasets')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('grid_cell_id')->index()->references('id')->on('grid_cells')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $table->unique(['source_dataset_id', 'grid_cell_id']);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('source_dataset_grid_cell');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('source_dataset_grid_cell', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('source_dataset_id')->index()->references('id')->on('source_datasets')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('grid_cell_id')->index()->references('id')->on('grid_cells')->cascadeOnDelete();[39m[0m
  [32m+[39m[0m
  [32m+            $table->unique(['source_dataset_id', 'grid_cell_id']);[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('source_dataset_grid_cell');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_124910_create_masks_table.php [90mclass_definition, braces, curly_braces_position, line[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m31 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m31 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('masks', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('bbg_class_id')->references('id')->on('bbg_classes')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('masks');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('masks', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('bbg_class_id')->references('id')->on('bbg_classes')->cascadeOnDelete();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('masks');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_124915_create_mask_polygons_table.php [90mclass_definition, braces, curly_braces_positi[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('mask_polygons', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('mask_id')->references('id')->on('masks')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('grid_cell_id')->references('id')->on('grid_cells')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->integer('polygon_size');[0m
  [35;1m[39m[0m
  [31m-            $table->json('polygon');[0m
  [35;1m[39m[0m
  [31m-            $table->geometry('geometry')->isGeometry(true)->projection(28992)->spatialIndex();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('mask_polygons');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('mask_polygons', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('mask_id')->references('id')->on('masks')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('grid_cell_id')->references('id')->on('grid_cells')->cascadeOnDelete();[39m[0m
  [32m+            $table->integer('polygon_size');[39m[0m
  [32m+            $table->json('polygon');[39m[0m
  [32m+            $table->geometry('geometry')->isGeometry(true)->projection(28992)->spatialIndex();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('mask_polygons');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_124919_create_filters_table.php [90mclass_definition, braces, curly_braces_position, li[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('filters', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->string('title');[0m
  [35;1m[39m[0m
  [31m-            $table->text('description')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('bbg_class_id')->references('id')->on('bbg_classes')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('filters');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('filters', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->string('title');[39m[0m
  [32m+            $table->text('description')->nullable();[39m[0m
  [32m+            $table->foreignId('bbg_class_id')->references('id')->on('bbg_classes')->cascadeOnDelete();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('filters');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_125858_create_filter_grid_cell_table.php [90mclass_definition, braces, curly_braces_pos[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('filter_grid_cell', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('filter_id')->references('id')->on('filters')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('grid_cell_id')->references('id')->on('grid_cells')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $table->primary(['filter_id', 'grid_cell_id']);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('filter_grid_cell');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('filter_grid_cell', function (Blueprint $table) {[39m[0m
  [32m+            $table->foreignId('filter_id')->references('id')->on('filters')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('grid_cell_id')->references('id')->on('grid_cells')->cascadeOnDelete();[39m[0m
  [32m+[39m[0m
  [32m+            $table->primary(['filter_id', 'grid_cell_id']);[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('filter_grid_cell');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_130206_create_datasets_table.php [90mclass_definition, braces, curly_braces_position, l[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('datasets', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('user_id')->references('id')->on('users')->nullOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('team_id')->references('id')->on('teams')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->string('title');[0m
  [35;1m[39m[0m
  [31m-            $table->text('description')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('datasets');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('datasets', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('user_id')->references('id')->on('users')->nullOnDelete();[39m[0m
  [32m+            $table->foreignId('team_id')->references('id')->on('teams')->cascadeOnDelete();[39m[0m
  [32m+            $table->string('title');[39m[0m
  [32m+            $table->text('description')->nullable();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('datasets');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_130403_create_dataset_filter_table.php [90mclass_definition, braces, curly_braces_posit[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('dataset_filter', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('dataset_id')->references('id')->on('datasets')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('filter_id')->references('id')->on('filters')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $table->primary(['dataset_id', 'filter_id']);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('dataset_filter');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('dataset_filter', function (Blueprint $table) {[39m[0m
  [32m+            $table->foreignId('dataset_id')->references('id')->on('datasets')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('filter_id')->references('id')->on('filters')->cascadeOnDelete();[39m[0m
  [32m+[39m[0m
  [32m+            $table->primary(['dataset_id', 'filter_id']);[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('dataset_filter');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_07_130637_create_dataset_grid_cells_table.php [90mclass_definition, braces, curly_braces_p[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('dataset_grids', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('dataset_id')->references('id')->on('datasets')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('source_dataset_grid_cell_id')->references('id')->on('source_dataset_grid_cell')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('polygon_id')->nullable()->references('id')->on('mask_polygons')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('change_source_dataset_grid_cell_id')->nullable()->references('id')->on('source_dataset_grid_cell')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('change_polygon_id')->nullable()->nullable()->references('id')->on('mask_polygons')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('dataset_grids');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('dataset_grids', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('dataset_id')->references('id')->on('datasets')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('source_dataset_grid_cell_id')->references('id')->on('source_dataset_grid_cell')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('polygon_id')->nullable()->references('id')->on('mask_polygons')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('change_source_dataset_grid_cell_id')->nullable()->references('id')->on('source_dataset_grid_cell')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('change_polygon_id')->nullable()->nullable()->references('id')->on('mask_polygons')->cascadeOnDelete();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('dataset_grids');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_19_085228_create_label_evidence_table.php [90mclass_definition, braces, curly_braces_posit[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('label_evidence', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('user_id')->references('id')->on('users')->nullOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('team_id')->references('id')->on('teams')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('dataset_id')->references('id')->on('datasets')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->string('title');[0m
  [35;1m[39m[0m
  [31m-            $table->text('description')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->string('type');[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('label_evidence');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('label_evidence', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('user_id')->references('id')->on('users')->nullOnDelete();[39m[0m
  [32m+            $table->foreignId('team_id')->references('id')->on('teams')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('dataset_id')->references('id')->on('datasets')->cascadeOnDelete();[39m[0m
  [32m+            $table->string('title');[39m[0m
  [32m+            $table->text('description')->nullable();[39m[0m
  [32m+            $table->string('type');[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('label_evidence');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_19_085625_create_label_evidence_labels_table.php [90mclass_definition, braces, curly_brace[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m38 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m38 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('label_evidence_labels', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('user_id')->nullable()->references('id')->on('users')->nullOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('label_evidence_id')->references('id')->on('label_evidence')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('grid_id')->references('id')->on('dataset_grids')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('label_class_id')->references('id')->on('label_classes')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->decimal('probability')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $table->unique(['label_evidence_id', 'grid_id']);[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('label_evidence_labels');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('label_evidence_labels', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('user_id')->nullable()->references('id')->on('users')->nullOnDelete();[39m[0m
  [32m+            $table->foreignId('label_evidence_id')->references('id')->on('label_evidence')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('grid_id')->references('id')->on('dataset_grids')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('label_class_id')->references('id')->on('label_classes')->cascadeOnDelete();[39m[0m
  [32m+            $table->decimal('probability')->nullable();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+[39m[0m
  [32m+            $table->unique(['label_evidence_id', 'grid_id']);[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('label_evidence_labels');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_26_083832_create_inspect_dataset_table.php [90mclass_definition, braces, curly_braces_posi[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m32 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('inspect_dataset', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('dataset_id')->references('id')->on('datasets')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('inspect_dataset');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('inspect_dataset', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('dataset_id')->references('id')->on('datasets')->cascadeOnDelete();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('inspect_dataset');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_26_083842_create_inspect_dataset_labels_table.php [90mclass_definition, braces, curly_brac[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('inspect_dataset_labels', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('inspect_dataset_id')->references('id')->on('inspect_dataset')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('grid_id')->references('id')->on('dataset_grids')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('label_class_id')->references('id')->on('label_classes')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->json('information')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('inspect_dataset_labels');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('inspect_dataset_labels', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('inspect_dataset_id')->references('id')->on('inspect_dataset')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('grid_id')->references('id')->on('dataset_grids')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('label_class_id')->references('id')->on('label_classes')->cascadeOnDelete();[39m[0m
  [32m+            $table->json('information')->nullable();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('inspect_dataset_labels');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_26_130306_create_experiment_data_table.php [90mclass_definition, braces, curly_braces_posi[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('experiment_data', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('user_id')->references('id')->on('users')->nullOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('team_id')->references('id')->on('teams')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->string('title');[0m
  [35;1m[39m[0m
  [31m-            $table->text('description')->nullable();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('experiment_data');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('experiment_data', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('user_id')->references('id')->on('users')->nullOnDelete();[39m[0m
  [32m+            $table->foreignId('team_id')->references('id')->on('teams')->cascadeOnDelete();[39m[0m
  [32m+            $table->string('title');[39m[0m
  [32m+            $table->text('description')->nullable();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('experiment_data');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/migrations/2022_09_26_130459_create_experiment_data_labels_table.php [90mclass_definition, braces, curly_brac[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m37 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Migrations\Migration;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return new class extends Migration[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function up()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::create('experiment_data_labels', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-            $table->id();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('experiment_data_id')->references('id')->on('experiment_data')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('source_dataset_grid_cell_id')->references('id')->on('source_dataset_grid_cell')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('polygon_id')->nullable()->references('id')->on('mask_polygons')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('change_source_dataset_grid_cell_id')->nullable()->references('id')->on('source_dataset_grid_cell')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('change_polygon_id')->nullable()->nullable()->references('id')->on('mask_polygons')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->foreignId('label_class_id')->references('id')->on('label_classes')->cascadeOnDelete();[0m
  [35;1m[39m[0m
  [31m-            $table->timestamps();[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Reverse the migrations.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function down()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Schema::dropIfExists('experiment_data_labels');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-};[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Migrations\Migration;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+return new class extends Migration[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function up()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::create('experiment_data_labels', function (Blueprint $table) {[39m[0m
  [32m+            $table->id();[39m[0m
  [32m+            $table->foreignId('experiment_data_id')->references('id')->on('experiment_data')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('source_dataset_grid_cell_id')->references('id')->on('source_dataset_grid_cell')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('polygon_id')->nullable()->references('id')->on('mask_polygons')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('change_source_dataset_grid_cell_id')->nullable()->references('id')->on('source_dataset_grid_cell')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('change_polygon_id')->nullable()->nullable()->references('id')->on('mask_polygons')->cascadeOnDelete();[39m[0m
  [32m+            $table->foreignId('label_class_id')->references('id')->on('label_classes')->cascadeOnDelete();[39m[0m
  [32m+            $table->timestamps();[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Reverse the migrations.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function down()[39m[0m
  [32m+    {[39m[0m
  [32m+        Schema::dropIfExists('experiment_data_labels');[39m[0m
  [32m+    }[39m[0m
  [32m+};[39m[0m
  
  [32;1mâœ“[39;22m database/seeders/DatabaseSeeder.php [90m                                                           braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Database\Seeders;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Seeder;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DatabaseSeeder extends Seeder[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Seed the application's database.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function run()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->call([[0m
  [35;1m[39m[0m
  [31m-            GridCellSeeder::class,[0m
  [35;1m[39m[0m
  [31m-            RegionSeeder::class,[0m
  [35;1m[39m[0m
  [31m-            SourceDatasetSeeder::class,[0m
  [35;1m[39m[0m
  [31m-            TestSeeder::class,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Database\Seeders;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Seeder;[39m[0m
  [32m+[39m[0m
  [32m+class DatabaseSeeder extends Seeder[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Seed the application's database.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function run()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->call([[39m[0m
  [32m+            GridCellSeeder::class,[39m[0m
  [32m+            RegionSeeder::class,[39m[0m
  [32m+            SourceDatasetSeeder::class,[39m[0m
  [32m+            TestSeeder::class,[39m[0m
  [32m+        ]);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/seeders/GeoDataSeeder.php [90m                                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m50 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m50 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Database\Seeders;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class GeoDataSeeder[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    public static function importGeoDataIntoDB($command, $file, $table, $tableColumns, $ogr2ogr_options = '')[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $command->info("Preparing data to import it into the database table {$table}.");[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $temp_dir = './database/data/temp';[0m
  [35;1m[39m[0m
  [31m-        $temp_csv = "{$temp_dir}/{$file}.csv";[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Check if specified zip file can be opened.[0m
  [35;1m[39m[0m
  [31m-        $zip = new \ZipArchive();[0m
  [35;1m[39m[0m
  [31m-        if ($zip->open("./database/data/{$file}.zip") === true) {[0m
  [35;1m[39m[0m
  [31m-            // Create temp directory if it does not exist yet.[0m
  [35;1m[39m[0m
  [31m-            @mkdir($temp_dir);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Extract file in zip to the temp directory.[0m
  [35;1m[39m[0m
  [31m-            $zip->extractTo($temp_dir);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            // Extract .gpkg file to a .csv file.[0m
  [35;1m[39m[0m
  [31m-            passthru("ogr2ogr -f CSV {$temp_csv} ./database/data/temp/{$file}.gpkg -lco GEOMETRY=AS_WKT -lco CREATE_CSVT=true -lco GEOMETRY_NAME=geometry -progress {$ogr2ogr_options} 2>&1");[0m
  [35;1m[39m[0m
  [31m-        } else {[0m
  [35;1m[39m[0m
  [31m-            // TODO: Throw exception.[0m
  [35;1m[39m[0m
  [31m-            dd("Failed to find zip file {$file}.");[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-        $zip->close();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $command->info("Importing data from {$file} to database {$table}.");[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $db = (DB::connection())->getConfig();[0m
  [35;1m[39m[0m
  [31m-        $db_host = $db['host'];[0m
  [35;1m[39m[0m
  [31m-        $db_port = $db['port'];[0m
  [35;1m[39m[0m
  [31m-        $db_name = $db['database'];[0m
  [35;1m[39m[0m
  [31m-        $db_user = $db['username'];[0m
  [35;1m[39m[0m
  [31m-        $db_password = $db['password'];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Use PostgreSQL copy command to enter data from .csv file into database table.[0m
  [35;1m[39m[0m
  [31m-        passthru("psql 'postgresql://{$db_user}:{$db_password}@{$db_host}:{$db_port}/{$db_name}' -c \"\copy {$table} ({$tableColumns}) FROM '".realpath($temp_csv)."' DELIMITER ',' CSV HEADER;\" 2>&1");[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Delete the temporary directory and all files in it.[0m
  [35;1m[39m[0m
  [31m-        exec("rm -rf {$temp_dir}");[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $command->info("Successfully imported data into database table {$table}.");[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Database\Seeders;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+[39m[0m
  [32m+class GeoDataSeeder[39m[0m
  [32m+{[39m[0m
  [32m+    public static function importGeoDataIntoDB($command, $file, $table, $tableColumns, $ogr2ogr_options = '')[39m[0m
  [32m+    {[39m[0m
  [32m+        $command->info("Preparing data to import it into the database table {$table}.");[39m[0m
  [32m+[39m[0m
  [32m+        $temp_dir = './database/data/temp';[39m[0m
  [32m+        $temp_csv = "{$temp_dir}/{$file}.csv";[39m[0m
  [32m+[39m[0m
  [32m+        // Check if specified zip file can be opened.[39m[0m
  [32m+        $zip = new \ZipArchive();[39m[0m
  [32m+        if ($zip->open("./database/data/{$file}.zip") === true) {[39m[0m
  [32m+            // Create temp directory if it does not exist yet.[39m[0m
  [32m+            @mkdir($temp_dir);[39m[0m
  [32m+[39m[0m
  [32m+            // Extract file in zip to the temp directory.[39m[0m
  [32m+            $zip->extractTo($temp_dir);[39m[0m
  [32m+[39m[0m
  [32m+            // Extract .gpkg file to a .csv file.[39m[0m
  [32m+            passthru("ogr2ogr -f CSV {$temp_csv} ./database/data/temp/{$file}.gpkg -lco GEOMETRY=AS_WKT -lco CREATE_CSVT=true -lco GEOMETRY_NAME=geometry -progress {$ogr2ogr_options} 2>&1");[39m[0m
  [32m+        } else {[39m[0m
  [32m+            // TODO: Throw exception.[39m[0m
  [32m+            dd("Failed to find zip file {$file}.");[39m[0m
  [32m+        }[39m[0m
  [32m+        $zip->close();[39m[0m
  [32m+[39m[0m
  [32m+        $command->info("Importing data from {$file} to database {$table}.");[39m[0m
  [32m+[39m[0m
  [32m+        $db = (DB::connection())->getConfig();[39m[0m
  [32m+        $db_host = $db['host'];[39m[0m
  [32m+        $db_port = $db['port'];[39m[0m
  [32m+        $db_name = $db['database'];[39m[0m
  [32m+        $db_user = $db['username'];[39m[0m
  [32m+        $db_password = $db['password'];[39m[0m
  [32m+[39m[0m
  [32m+        // Use PostgreSQL copy command to enter data from .csv file into database table.[39m[0m
  [32m+        passthru("psql 'postgresql://{$db_user}:{$db_password}@{$db_host}:{$db_port}/{$db_name}' -c \"\copy {$table} ({$tableColumns}) FROM '".realpath($temp_csv)."' DELIMITER ',' CSV HEADER;\" 2>&1");[39m[0m
  [32m+[39m[0m
  [32m+        // Delete the temporary directory and all files in it.[39m[0m
  [32m+        exec("rm -rf {$temp_dir}");[39m[0m
  [32m+[39m[0m
  [32m+        $command->info("Successfully imported data into database table {$table}.");[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/seeders/GridCellSeeder.php [90m                                    braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m53 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m53 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Database\Seeders;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\GridCellTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Seeder;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class GridCellSeeder extends Seeder[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the database seeds.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function run()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        DB::getDoctrineSchemaManager()->getDatabasePlatform()->registerDoctrineTypeMapping('geometry', 'string');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // $this->setDefaultType(GridCellTypeEnum::Grid100x100);[0m
  [35;1m[39m[0m
  [31m-        // GeoDataSeeder::importGeoDataIntoDB([0m
  [35;1m[39m[0m
  [31m-        //     $this->command,[0m
  [35;1m[39m[0m
  [31m-        //     'grid_100m_selected',[0m
  [35;1m[39m[0m
  [31m-        //     'grid_cells',[0m
  [35;1m[39m[0m
  [31m-        //     'geometry, name'[0m
  [35;1m[39m[0m
  [31m-        // );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->setDefaultType(GridCellTypeEnum::Grid500x500);[0m
  [35;1m[39m[0m
  [31m-        GeoDataSeeder::importGeoDataIntoDB([0m
  [35;1m[39m[0m
  [31m-            $this->command,[0m
  [35;1m[39m[0m
  [31m-            'grid_500m_selected',[0m
  [35;1m[39m[0m
  [31m-            'grid_cells',[0m
  [35;1m[39m[0m
  [31m-            'geometry, title'[0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->setDefaultType();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    private function setDefaultType(GridCellTypeEnum $type = null)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if ($type === null) {[0m
  [35;1m[39m[0m
  [31m-            Schema::table('grid_cells', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-                $table->string('type')->default(null)->nullable(false)->change();[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        } else {[0m
  [35;1m[39m[0m
  [31m-            Schema::table('grid_cells', function (Blueprint $table) use ($type) {[0m
  [35;1m[39m[0m
  [31m-                $table->string('type')->default($type->value)->change();[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Database\Seeders;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\GridCellTypeEnum;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Database\Seeder;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+class GridCellSeeder extends Seeder[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the database seeds.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function run()[39m[0m
  [32m+    {[39m[0m
  [32m+        DB::getDoctrineSchemaManager()->getDatabasePlatform()->registerDoctrineTypeMapping('geometry', 'string');[39m[0m
  [32m+[39m[0m
  [32m+        // $this->setDefaultType(GridCellTypeEnum::Grid100x100);[39m[0m
  [32m+        // GeoDataSeeder::importGeoDataIntoDB([39m[0m
  [32m+        //     $this->command,[39m[0m
  [32m+        //     'grid_100m_selected',[39m[0m
  [32m+        //     'grid_cells',[39m[0m
  [32m+        //     'geometry, name'[39m[0m
  [32m+        // );[39m[0m
  [32m+[39m[0m
  [32m+        $this->setDefaultType(GridCellTypeEnum::Grid500x500);[39m[0m
  [32m+        GeoDataSeeder::importGeoDataIntoDB([39m[0m
  [32m+            $this->command,[39m[0m
  [32m+            'grid_500m_selected',[39m[0m
  [32m+            'grid_cells',[39m[0m
  [32m+            'geometry, title'[39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $this->setDefaultType();[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    private function setDefaultType(GridCellTypeEnum $type = null)[39m[0m
  [32m+    {[39m[0m
  [32m+        if ($type === null) {[39m[0m
  [32m+            Schema::table('grid_cells', function (Blueprint $table) {[39m[0m
  [32m+                $table->string('type')->default(null)->nullable(false)->change();[39m[0m
  [32m+            });[39m[0m
  [32m+        } else {[39m[0m
  [32m+            Schema::table('grid_cells', function (Blueprint $table) use ($type) {[39m[0m
  [32m+                $table->string('type')->default($type->value)->change();[39m[0m
  [32m+            });[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/seeders/RegionSeeder.php [90m                                                             braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m26 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m26 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Database\Seeders;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Seeder;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class RegionSeeder extends Seeder[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the database seeds.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function run()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->command->info('You can ignore the warning about progress being disabled for this seed.');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        GeoDataSeeder::importGeoDataIntoDB([0m
  [35;1m[39m[0m
  [31m-            $this->command,[0m
  [35;1m[39m[0m
  [31m-            'region_geometries',[0m
  [35;1m[39m[0m
  [31m-            'regions',[0m
  [35;1m[39m[0m
  [31m-            'geometry, name, code, region_type, year, source_layer',[0m
  [35;1m[39m[0m
  [31m-            '-where "region_type=\'provincie\' or region_type=\'gemeente\' or region_type=\'buurt\' or region_type=\'wijk\'"',[0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Database\Seeders;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Database\Seeder;[39m[0m
  [32m+[39m[0m
  [32m+class RegionSeeder extends Seeder[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the database seeds.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function run()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->command->info('You can ignore the warning about progress being disabled for this seed.');[39m[0m
  [32m+[39m[0m
  [32m+        GeoDataSeeder::importGeoDataIntoDB([39m[0m
  [32m+            $this->command,[39m[0m
  [32m+            'region_geometries',[39m[0m
  [32m+            'regions',[39m[0m
  [32m+            'geometry, name, code, region_type, year, source_layer',[39m[0m
  [32m+            '-where "region_type=\'provincie\' or region_type=\'gemeente\' or region_type=\'buurt\' or region_type=\'wijk\'"',[39m[0m
  [32m+        );[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/seeders/SourceDatasetSeeder.php [90m                               braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m170 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m170 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Database\Seeders;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\DatasetImageTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Enums\GridCellTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Models\GridCell;[0m
  [35;1m[39m[0m
  [31m-use App\Models\SourceDataset;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Schema\Blueprint;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Seeder;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\DB;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Schema;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class SourceDatasetSeeder extends Seeder[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the database seeds.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function run()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        DB::getDoctrineSchemaManager()->getDatabasePlatform()->registerDoctrineTypeMapping('geometry', 'string');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // 100x100m datasets[0m
  [35;1m[39m[0m
  [31m-        // $this->importDatasetsRGB(GridCellTypeEnum::Grid100x100, '100x100m');[0m
  [35;1m[39m[0m
  [31m-        // $this->importDatasetsIR(GridCellTypeEnum::Grid100x100, '100x100m');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // 500x500m datasets[0m
  [35;1m[39m[0m
  [31m-        $this->importDatasetsRGB(GridCellTypeEnum::Grid500x500, '500x500m');[0m
  [35;1m[39m[0m
  [31m-        $this->importDatasetsIR(GridCellTypeEnum::Grid500x500, '500x500m');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->setDefaultType();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    private function createDataset($gridCellType, $title, $description, $year, $url, $layer, $crs = 'EPSG:28992')[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->command->info("Creating dataset {$title} in database.");[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $dataset = SourceDataset::create([[0m
  [35;1m[39m[0m
  [31m-            'title' => $title,[0m
  [35;1m[39m[0m
  [31m-            'description' => $description,[0m
  [35;1m[39m[0m
  [31m-            'year' => $year,[0m
  [35;1m[39m[0m
  [31m-            'url' => $url,[0m
  [35;1m[39m[0m
  [31m-            'layer' => $layer,[0m
  [35;1m[39m[0m
  [31m-            'crs' => $crs,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->command->info("Saving linked grid cells of dataset {$title} to database.");[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->command->getOutput()->progressStart(GridCell::where('type', $gridCellType->value)->count());[0m
  [35;1m[39m[0m
  [31m-        GridCell::where('type', $gridCellType->value)->chunkById(25000, function ($gridCells) use ($dataset) {[0m
  [35;1m[39m[0m
  [31m-            $dataset->gridCells()->attach($gridCells);[0m
  [35;1m[39m[0m
  [31m-            $this->command->getOutput()->progressAdvance($gridCells->count());[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->command->getOutput()->progressFinish();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    private function importDatasetsRGB($gridCellType, $gridCellTypeName)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->setDefaultType(DatasetImageTypeEnum::RGB);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $datasets = [[0m
  [35;1m[39m[0m
  [31m-            [[0m
  [35;1m[39m[0m
  [31m-                'title' => "2015 ${gridCellTypeName} RGB",[0m
  [35;1m[39m[0m
  [31m-                'description' => '',[0m
  [35;1m[39m[0m
  [31m-                'year' => 2015,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            // [[0m
  [35;1m[39m[0m
  [31m-            //     'title' => "2016 ${gridCellTypeName} RGB",[0m
  [35;1m[39m[0m
  [31m-            //     'description' => '',[0m
  [35;1m[39m[0m
  [31m-            //     'year' => 2016,[0m
  [35;1m[39m[0m
  [31m-            // ],[0m
  [35;1m[39m[0m
  [31m-            [[0m
  [35;1m[39m[0m
  [31m-                'title' => "2017 ${gridCellTypeName} RGB",[0m
  [35;1m[39m[0m
  [31m-                'description' => '',[0m
  [35;1m[39m[0m
  [31m-                'year' => 2017,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            // [[0m
  [35;1m[39m[0m
  [31m-            //     'title' => "2018 ${gridCellTypeName} RGB",[0m
  [35;1m[39m[0m
  [31m-            //     'description' => '',[0m
  [35;1m[39m[0m
  [31m-            //     'year' => 2018,[0m
  [35;1m[39m[0m
  [31m-            // ],[0m
  [35;1m[39m[0m
  [31m-            // [[0m
  [35;1m[39m[0m
  [31m-            //     'title' => "2019 ${gridCellTypeName} RGB",[0m
  [35;1m[39m[0m
  [31m-            //     'description' => '',[0m
  [35;1m[39m[0m
  [31m-            //     'year' => 2019,[0m
  [35;1m[39m[0m
  [31m-            // ],[0m
  [35;1m[39m[0m
  [31m-            [[0m
  [35;1m[39m[0m
  [31m-                'title' => "2020 ${gridCellTypeName} RGB",[0m
  [35;1m[39m[0m
  [31m-                'description' => '',[0m
  [35;1m[39m[0m
  [31m-                'year' => 2020,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        foreach ($datasets as $dataset) {[0m
  [35;1m[39m[0m
  [31m-            $this->createDataset([0m
  [35;1m[39m[0m
  [31m-                $gridCellType,[0m
  [35;1m[39m[0m
  [31m-                $dataset['title'],[0m
  [35;1m[39m[0m
  [31m-                $dataset['description'],[0m
  [35;1m[39m[0m
  [31m-                $dataset['year'],[0m
  [35;1m[39m[0m
  [31m-                'https://service.pdok.nl/hwh/luchtfotorgb/wms/v1_0?',[0m
  [35;1m[39m[0m
  [31m-                "{$dataset['year']}_ortho25",[0m
  [35;1m[39m[0m
  [31m-            );[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    private function importDatasetsIR($gridCellType, $gridCellTypeName)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->setDefaultType(DatasetImageTypeEnum::IR);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $datasets = [[0m
  [35;1m[39m[0m
  [31m-            [[0m
  [35;1m[39m[0m
  [31m-                'title' => "2015 ${gridCellTypeName} IR",[0m
  [35;1m[39m[0m
  [31m-                'description' => '',[0m
  [35;1m[39m[0m
  [31m-                'year' => 2015,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            // [[0m
  [35;1m[39m[0m
  [31m-            //     'title' => "2016 ${gridCellTypeName} IR",[0m
  [35;1m[39m[0m
  [31m-            //     'description' => '',[0m
  [35;1m[39m[0m
  [31m-            //     'year' => 2016,[0m
  [35;1m[39m[0m
  [31m-            // ],[0m
  [35;1m[39m[0m
  [31m-            [[0m
  [35;1m[39m[0m
  [31m-                'title' => "2017 ${gridCellTypeName} IR",[0m
  [35;1m[39m[0m
  [31m-                'description' => '',[0m
  [35;1m[39m[0m
  [31m-                'year' => 2017,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-            // [[0m
  [35;1m[39m[0m
  [31m-            //     'title' => "2018 ${gridCellTypeName} IR",[0m
  [35;1m[39m[0m
  [31m-            //     'description' => '',[0m
  [35;1m[39m[0m
  [31m-            //     'year' => 2018,[0m
  [35;1m[39m[0m
  [31m-            // ],[0m
  [35;1m[39m[0m
  [31m-            // [[0m
  [35;1m[39m[0m
  [31m-            //     'title' => "${gridCellTypeName} IR 2019",[0m
  [35;1m[39m[0m
  [31m-            //     'description' => '',[0m
  [35;1m[39m[0m
  [31m-            //     'year' => 2019,[0m
  [35;1m[39m[0m
  [31m-            // ],[0m
  [35;1m[39m[0m
  [31m-            [[0m
  [35;1m[39m[0m
  [31m-                'title' => "2020 ${gridCellTypeName} IR",[0m
  [35;1m[39m[0m
  [31m-                'description' => '',[0m
  [35;1m[39m[0m
  [31m-                'year' => 2020,[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ];[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        foreach ($datasets as $dataset) {[0m
  [35;1m[39m[0m
  [31m-            $this->createDataset([0m
  [35;1m[39m[0m
  [31m-                $gridCellType,[0m
  [35;1m[39m[0m
  [31m-                $dataset['title'],[0m
  [35;1m[39m[0m
  [31m-                $dataset['description'],[0m
  [35;1m[39m[0m
  [31m-                $dataset['year'],[0m
  [35;1m[39m[0m
  [31m-                'https://service.pdok.nl/hwh/luchtfotocir/wms/v1_0?',[0m
  [35;1m[39m[0m
  [31m-                "{$dataset['year']}_ortho25IR",[0m
  [35;1m[39m[0m
  [31m-            );[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    private function setDefaultType(DatasetImageTypeEnum $type = null)[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if ($type === null) {[0m
  [35;1m[39m[0m
  [31m-            Schema::table('source_datasets', function (Blueprint $table) {[0m
  [35;1m[39m[0m
  [31m-                $table->string('image_type')->default(null)->nullable(true)->change();[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        } else {[0m
  [35;1m[39m[0m
  [31m-            Schema::table('source_datasets', function (Blueprint $table) use ($type) {[0m
  [35;1m[39m[0m
  [31m-                $table->string('image_type')->default($type->value)->change();[0m
  [35;1m[39m[0m
  [31m-            });[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Database\Seeders;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\DatasetImageTypeEnum;[39m[0m
  [32m+use App\Enums\GridCellTypeEnum;[39m[0m
  [32m+use App\Models\GridCell;[39m[0m
  [32m+use App\Models\SourceDataset;[39m[0m
  [32m+use Illuminate\Database\Schema\Blueprint;[39m[0m
  [32m+use Illuminate\Database\Seeder;[39m[0m
  [32m+use Illuminate\Support\Facades\DB;[39m[0m
  [32m+use Illuminate\Support\Facades\Schema;[39m[0m
  [32m+[39m[0m
  [32m+class SourceDatasetSeeder extends Seeder[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the database seeds.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function run()[39m[0m
  [32m+    {[39m[0m
  [32m+        DB::getDoctrineSchemaManager()->getDatabasePlatform()->registerDoctrineTypeMapping('geometry', 'string');[39m[0m
  [32m+[39m[0m
  [32m+        // 100x100m datasets[39m[0m
  [32m+        // $this->importDatasetsRGB(GridCellTypeEnum::Grid100x100, '100x100m');[39m[0m
  [32m+        // $this->importDatasetsIR(GridCellTypeEnum::Grid100x100, '100x100m');[39m[0m
  [32m+[39m[0m
  [32m+        // 500x500m datasets[39m[0m
  [32m+        $this->importDatasetsRGB(GridCellTypeEnum::Grid500x500, '500x500m');[39m[0m
  [32m+        $this->importDatasetsIR(GridCellTypeEnum::Grid500x500, '500x500m');[39m[0m
  [32m+[39m[0m
  [32m+        $this->setDefaultType();[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    private function createDataset($gridCellType, $title, $description, $year, $url, $layer, $crs = 'EPSG:28992')[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->command->info("Creating dataset {$title} in database.");[39m[0m
  [32m+[39m[0m
  [32m+        $dataset = SourceDataset::create([[39m[0m
  [32m+            'title' => $title,[39m[0m
  [32m+            'description' => $description,[39m[0m
  [32m+            'year' => $year,[39m[0m
  [32m+            'url' => $url,[39m[0m
  [32m+            'layer' => $layer,[39m[0m
  [32m+            'crs' => $crs,[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->command->info("Saving linked grid cells of dataset {$title} to database.");[39m[0m
  [32m+[39m[0m
  [32m+        $this->command->getOutput()->progressStart(GridCell::where('type', $gridCellType->value)->count());[39m[0m
  [32m+        GridCell::where('type', $gridCellType->value)->chunkById(25000, function ($gridCells) use ($dataset) {[39m[0m
  [32m+            $dataset->gridCells()->attach($gridCells);[39m[0m
  [32m+            $this->command->getOutput()->progressAdvance($gridCells->count());[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        $this->command->getOutput()->progressFinish();[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    private function importDatasetsRGB($gridCellType, $gridCellTypeName)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->setDefaultType(DatasetImageTypeEnum::RGB);[39m[0m
  [32m+[39m[0m
  [32m+        $datasets = [[39m[0m
  [32m+            [[39m[0m
  [32m+                'title' => "2015 ${gridCellTypeName} RGB",[39m[0m
  [32m+                'description' => '',[39m[0m
  [32m+                'year' => 2015,[39m[0m
  [32m+            ],[39m[0m
  [32m+            // [[39m[0m
  [32m+            //     'title' => "2016 ${gridCellTypeName} RGB",[39m[0m
  [32m+            //     'description' => '',[39m[0m
  [32m+            //     'year' => 2016,[39m[0m
  [32m+            // ],[39m[0m
  [32m+            [[39m[0m
  [32m+                'title' => "2017 ${gridCellTypeName} RGB",[39m[0m
  [32m+                'description' => '',[39m[0m
  [32m+                'year' => 2017,[39m[0m
  [32m+            ],[39m[0m
  [32m+            // [[39m[0m
  [32m+            //     'title' => "2018 ${gridCellTypeName} RGB",[39m[0m
  [32m+            //     'description' => '',[39m[0m
  [32m+            //     'year' => 2018,[39m[0m
  [32m+            // ],[39m[0m
  [32m+            // [[39m[0m
  [32m+            //     'title' => "2019 ${gridCellTypeName} RGB",[39m[0m
  [32m+            //     'description' => '',[39m[0m
  [32m+            //     'year' => 2019,[39m[0m
  [32m+            // ],[39m[0m
  [32m+            [[39m[0m
  [32m+                'title' => "2020 ${gridCellTypeName} RGB",[39m[0m
  [32m+                'description' => '',[39m[0m
  [32m+                'year' => 2020,[39m[0m
  [32m+            ],[39m[0m
  [32m+        ];[39m[0m
  [32m+[39m[0m
  [32m+        foreach ($datasets as $dataset) {[39m[0m
  [32m+            $this->createDataset([39m[0m
  [32m+                $gridCellType,[39m[0m
  [32m+                $dataset['title'],[39m[0m
  [32m+                $dataset['description'],[39m[0m
  [32m+                $dataset['year'],[39m[0m
  [32m+                'https://service.pdok.nl/hwh/luchtfotorgb/wms/v1_0?',[39m[0m
  [32m+                "{$dataset['year']}_ortho25",[39m[0m
  [32m+            );[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    private function importDatasetsIR($gridCellType, $gridCellTypeName)[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->setDefaultType(DatasetImageTypeEnum::IR);[39m[0m
  [32m+[39m[0m
  [32m+        $datasets = [[39m[0m
  [32m+            [[39m[0m
  [32m+                'title' => "2015 ${gridCellTypeName} IR",[39m[0m
  [32m+                'description' => '',[39m[0m
  [32m+                'year' => 2015,[39m[0m
  [32m+            ],[39m[0m
  [32m+            // [[39m[0m
  [32m+            //     'title' => "2016 ${gridCellTypeName} IR",[39m[0m
  [32m+            //     'description' => '',[39m[0m
  [32m+            //     'year' => 2016,[39m[0m
  [32m+            // ],[39m[0m
  [32m+            [[39m[0m
  [32m+                'title' => "2017 ${gridCellTypeName} IR",[39m[0m
  [32m+                'description' => '',[39m[0m
  [32m+                'year' => 2017,[39m[0m
  [32m+            ],[39m[0m
  [32m+            // [[39m[0m
  [32m+            //     'title' => "2018 ${gridCellTypeName} IR",[39m[0m
  [32m+            //     'description' => '',[39m[0m
  [32m+            //     'year' => 2018,[39m[0m
  [32m+            // ],[39m[0m
  [32m+            // [[39m[0m
  [32m+            //     'title' => "${gridCellTypeName} IR 2019",[39m[0m
  [32m+            //     'description' => '',[39m[0m
  [32m+            //     'year' => 2019,[39m[0m
  [32m+            // ],[39m[0m
  [32m+            [[39m[0m
  [32m+                'title' => "2020 ${gridCellTypeName} IR",[39m[0m
  [32m+                'description' => '',[39m[0m
  [32m+                'year' => 2020,[39m[0m
  [32m+            ],[39m[0m
  [32m+        ];[39m[0m
  [32m+[39m[0m
  [32m+        foreach ($datasets as $dataset) {[39m[0m
  [32m+            $this->createDataset([39m[0m
  [32m+                $gridCellType,[39m[0m
  [32m+                $dataset['title'],[39m[0m
  [32m+                $dataset['description'],[39m[0m
  [32m+                $dataset['year'],[39m[0m
  [32m+                'https://service.pdok.nl/hwh/luchtfotocir/wms/v1_0?',[39m[0m
  [32m+                "{$dataset['year']}_ortho25IR",[39m[0m
  [32m+            );[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    private function setDefaultType(DatasetImageTypeEnum $type = null)[39m[0m
  [32m+    {[39m[0m
  [32m+        if ($type === null) {[39m[0m
  [32m+            Schema::table('source_datasets', function (Blueprint $table) {[39m[0m
  [32m+                $table->string('image_type')->default(null)->nullable(true)->change();[39m[0m
  [32m+            });[39m[0m
  [32m+        } else {[39m[0m
  [32m+            Schema::table('source_datasets', function (Blueprint $table) use ($type) {[39m[0m
  [32m+                $table->string('image_type')->default($type->value)->change();[39m[0m
  [32m+            });[39m[0m
  [32m+        }[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m database/seeders/TestSeeder.php [90m                                                               braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Database\Seeders;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Enums\GridCellTypeEnum;[0m
  [35;1m[39m[0m
  [31m-use App\Models\BbgClass;[0m
  [35;1m[39m[0m
  [31m-use App\Models\Filter;[0m
  [35;1m[39m[0m
  [31m-use App\Models\GridCell;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Database\Seeder;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TestSeeder extends Seeder[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Run the database seeds.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function run()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $bbg = BbgClass::create([[0m
  [35;1m[39m[0m
  [31m-            'title' => 'Bos',[0m
  [35;1m[39m[0m
  [31m-            'code' => '60',[0m
  [35;1m[39m[0m
  [31m-            'year' => 2015,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $filter = Filter::create([[0m
  [35;1m[39m[0m
  [31m-            'title' => 'Bos',[0m
  [35;1m[39m[0m
  [31m-            'bbg_class_id' => $bbg->id,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $filter->gridCells()->attach(GridCell::where('title', 'E1455N6000')->where('type', GridCellTypeEnum::Grid500x500)->get());[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Database\Seeders;[39m[0m
  [32m+[39m[0m
  [32m+use App\Enums\GridCellTypeEnum;[39m[0m
  [32m+use App\Models\BbgClass;[39m[0m
  [32m+use App\Models\Filter;[39m[0m
  [32m+use App\Models\GridCell;[39m[0m
  [32m+use Illuminate\Database\Seeder;[39m[0m
  [32m+[39m[0m
  [32m+class TestSeeder extends Seeder[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Run the database seeds.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function run()[39m[0m
  [32m+    {[39m[0m
  [32m+        $bbg = BbgClass::create([[39m[0m
  [32m+            'title' => 'Bos',[39m[0m
  [32m+            'code' => '60',[39m[0m
  [32m+            'year' => 2015,[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $filter = Filter::create([[39m[0m
  [32m+            'title' => 'Bos',[39m[0m
  [32m+            'bbg_class_id' => $bbg->id,[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $filter->gridCells()->attach(GridCell::where('title', 'E1455N6000')->where('type', GridCellTypeEnum::Grid500x500)->get());[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m lang/en/auth.php [90m                                                                                      line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m20 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m20 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Authentication Language Lines[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The following language lines are used during authentication for various[0m
  [35;1m[39m[0m
  [31m-    | messages that we need to display to the user. You are free to modify[0m
  [35;1m[39m[0m
  [31m-    | these language lines according to your application's requirements.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'failed' => 'These credentials do not match our records.',[0m
  [35;1m[39m[0m
  [31m-    'password' => 'The provided password is incorrect.',[0m
  [35;1m[39m[0m
  [31m-    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Authentication Language Lines[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The following language lines are used during authentication for various[39m[0m
  [32m+    | messages that we need to display to the user. You are free to modify[39m[0m
  [32m+    | these language lines according to your application's requirements.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'failed' => 'These credentials do not match our records.',[39m[0m
  [32m+    'password' => 'The provided password is incorrect.',[39m[0m
  [32m+    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m lang/en/pagination.php [90m                                                                                line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Pagination Language Lines[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The following language lines are used by the paginator library to build[0m
  [35;1m[39m[0m
  [31m-    | the simple pagination links. You are free to change them to anything[0m
  [35;1m[39m[0m
  [31m-    | you want to customize your views to better match your application.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'previous' => '&laquo; Previous',[0m
  [35;1m[39m[0m
  [31m-    'next' => 'Next &raquo;',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Pagination Language Lines[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The following language lines are used by the paginator library to build[39m[0m
  [32m+    | the simple pagination links. You are free to change them to anything[39m[0m
  [32m+    | you want to customize your views to better match your application.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'previous' => '&laquo; Previous',[39m[0m
  [32m+    'next' => 'Next &raquo;',[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m lang/en/passwords.php [90m                                                                                 line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m22 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m22 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Password Reset Language Lines[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The following language lines are the default lines which match reasons[0m
  [35;1m[39m[0m
  [31m-    | that are given by the password broker for a password update attempt[0m
  [35;1m[39m[0m
  [31m-    | has failed, such as for an invalid token or invalid new password.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'reset' => 'Your password has been reset!',[0m
  [35;1m[39m[0m
  [31m-    'sent' => 'We have emailed your password reset link!',[0m
  [35;1m[39m[0m
  [31m-    'throttled' => 'Please wait before retrying.',[0m
  [35;1m[39m[0m
  [31m-    'token' => 'This password reset token is invalid.',[0m
  [35;1m[39m[0m
  [31m-    'user' => "We can't find a user with that email address.",[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Password Reset Language Lines[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The following language lines are the default lines which match reasons[39m[0m
  [32m+    | that are given by the password broker for a password update attempt[39m[0m
  [32m+    | has failed, such as for an invalid token or invalid new password.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'reset' => 'Your password has been reset!',[39m[0m
  [32m+    'sent' => 'We have emailed your password reset link!',[39m[0m
  [32m+    'throttled' => 'Please wait before retrying.',[39m[0m
  [32m+    'token' => 'This password reset token is invalid.',[39m[0m
  [32m+    'user' => "We can't find a user with that email address.",[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m lang/en/validation.php [90m                                                                                line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m163 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m163 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-return [[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Validation Language Lines[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The following language lines contain the default error messages used by[0m
  [35;1m[39m[0m
  [31m-    | the validator class. Some of these rules have multiple versions such[0m
  [35;1m[39m[0m
  [31m-    | as the size rules. Feel free to tweak each of these messages here.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'accepted' => 'The :attribute must be accepted.',[0m
  [35;1m[39m[0m
  [31m-    'accepted_if' => 'The :attribute must be accepted when :other is :value.',[0m
  [35;1m[39m[0m
  [31m-    'active_url' => 'The :attribute is not a valid URL.',[0m
  [35;1m[39m[0m
  [31m-    'after' => 'The :attribute must be a date after :date.',[0m
  [35;1m[39m[0m
  [31m-    'after_or_equal' => 'The :attribute must be a date after or equal to :date.',[0m
  [35;1m[39m[0m
  [31m-    'alpha' => 'The :attribute must only contain letters.',[0m
  [35;1m[39m[0m
  [31m-    'alpha_dash' => 'The :attribute must only contain letters, numbers, dashes and underscores.',[0m
  [35;1m[39m[0m
  [31m-    'alpha_num' => 'The :attribute must only contain letters and numbers.',[0m
  [35;1m[39m[0m
  [31m-    'array' => 'The :attribute must be an array.',[0m
  [35;1m[39m[0m
  [31m-    'before' => 'The :attribute must be a date before :date.',[0m
  [35;1m[39m[0m
  [31m-    'before_or_equal' => 'The :attribute must be a date before or equal to :date.',[0m
  [35;1m[39m[0m
  [31m-    'between' => [[0m
  [35;1m[39m[0m
  [31m-        'array' => 'The :attribute must have between :min and :max items.',[0m
  [35;1m[39m[0m
  [31m-        'file' => 'The :attribute must be between :min and :max kilobytes.',[0m
  [35;1m[39m[0m
  [31m-        'numeric' => 'The :attribute must be between :min and :max.',[0m
  [35;1m[39m[0m
  [31m-        'string' => 'The :attribute must be between :min and :max characters.',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-    'boolean' => 'The :attribute field must be true or false.',[0m
  [35;1m[39m[0m
  [31m-    'confirmed' => 'The :attribute confirmation does not match.',[0m
  [35;1m[39m[0m
  [31m-    'current_password' => 'The password is incorrect.',[0m
  [35;1m[39m[0m
  [31m-    'date' => 'The :attribute is not a valid date.',[0m
  [35;1m[39m[0m
  [31m-    'date_equals' => 'The :attribute must be a date equal to :date.',[0m
  [35;1m[39m[0m
  [31m-    'date_format' => 'The :attribute does not match the format :format.',[0m
  [35;1m[39m[0m
  [31m-    'declined' => 'The :attribute must be declined.',[0m
  [35;1m[39m[0m
  [31m-    'declined_if' => 'The :attribute must be declined when :other is :value.',[0m
  [35;1m[39m[0m
  [31m-    'different' => 'The :attribute and :other must be different.',[0m
  [35;1m[39m[0m
  [31m-    'digits' => 'The :attribute must be :digits digits.',[0m
  [35;1m[39m[0m
  [31m-    'digits_between' => 'The :attribute must be between :min and :max digits.',[0m
  [35;1m[39m[0m
  [31m-    'dimensions' => 'The :attribute has invalid image dimensions.',[0m
  [35;1m[39m[0m
  [31m-    'distinct' => 'The :attribute field has a duplicate value.',[0m
  [35;1m[39m[0m
  [31m-    'email' => 'The :attribute must be a valid email address.',[0m
  [35;1m[39m[0m
  [31m-    'ends_with' => 'The :attribute must end with one of the following: :values.',[0m
  [35;1m[39m[0m
  [31m-    'enum' => 'The selected :attribute is invalid.',[0m
  [35;1m[39m[0m
  [31m-    'exists' => 'The selected :attribute is invalid.',[0m
  [35;1m[39m[0m
  [31m-    'file' => 'The :attribute must be a file.',[0m
  [35;1m[39m[0m
  [31m-    'filled' => 'The :attribute field must have a value.',[0m
  [35;1m[39m[0m
  [31m-    'gt' => [[0m
  [35;1m[39m[0m
  [31m-        'array' => 'The :attribute must have more than :value items.',[0m
  [35;1m[39m[0m
  [31m-        'file' => 'The :attribute must be greater than :value kilobytes.',[0m
  [35;1m[39m[0m
  [31m-        'numeric' => 'The :attribute must be greater than :value.',[0m
  [35;1m[39m[0m
  [31m-        'string' => 'The :attribute must be greater than :value characters.',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-    'gte' => [[0m
  [35;1m[39m[0m
  [31m-        'array' => 'The :attribute must have :value items or more.',[0m
  [35;1m[39m[0m
  [31m-        'file' => 'The :attribute must be greater than or equal to :value kilobytes.',[0m
  [35;1m[39m[0m
  [31m-        'numeric' => 'The :attribute must be greater than or equal to :value.',[0m
  [35;1m[39m[0m
  [31m-        'string' => 'The :attribute must be greater than or equal to :value characters.',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-    'image' => 'The :attribute must be an image.',[0m
  [35;1m[39m[0m
  [31m-    'in' => 'The selected :attribute is invalid.',[0m
  [35;1m[39m[0m
  [31m-    'in_array' => 'The :attribute field does not exist in :other.',[0m
  [35;1m[39m[0m
  [31m-    'integer' => 'The :attribute must be an integer.',[0m
  [35;1m[39m[0m
  [31m-    'ip' => 'The :attribute must be a valid IP address.',[0m
  [35;1m[39m[0m
  [31m-    'ipv4' => 'The :attribute must be a valid IPv4 address.',[0m
  [35;1m[39m[0m
  [31m-    'ipv6' => 'The :attribute must be a valid IPv6 address.',[0m
  [35;1m[39m[0m
  [31m-    'json' => 'The :attribute must be a valid JSON string.',[0m
  [35;1m[39m[0m
  [31m-    'lt' => [[0m
  [35;1m[39m[0m
  [31m-        'array' => 'The :attribute must have less than :value items.',[0m
  [35;1m[39m[0m
  [31m-        'file' => 'The :attribute must be less than :value kilobytes.',[0m
  [35;1m[39m[0m
  [31m-        'numeric' => 'The :attribute must be less than :value.',[0m
  [35;1m[39m[0m
  [31m-        'string' => 'The :attribute must be less than :value characters.',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-    'lte' => [[0m
  [35;1m[39m[0m
  [31m-        'array' => 'The :attribute must not have more than :value items.',[0m
  [35;1m[39m[0m
  [31m-        'file' => 'The :attribute must be less than or equal to :value kilobytes.',[0m
  [35;1m[39m[0m
  [31m-        'numeric' => 'The :attribute must be less than or equal to :value.',[0m
  [35;1m[39m[0m
  [31m-        'string' => 'The :attribute must be less than or equal to :value characters.',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-    'mac_address' => 'The :attribute must be a valid MAC address.',[0m
  [35;1m[39m[0m
  [31m-    'max' => [[0m
  [35;1m[39m[0m
  [31m-        'array' => 'The :attribute must not have more than :max items.',[0m
  [35;1m[39m[0m
  [31m-        'file' => 'The :attribute must not be greater than :max kilobytes.',[0m
  [35;1m[39m[0m
  [31m-        'numeric' => 'The :attribute must not be greater than :max.',[0m
  [35;1m[39m[0m
  [31m-        'string' => 'The :attribute must not be greater than :max characters.',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-    'mimes' => 'The :attribute must be a file of type: :values.',[0m
  [35;1m[39m[0m
  [31m-    'mimetypes' => 'The :attribute must be a file of type: :values.',[0m
  [35;1m[39m[0m
  [31m-    'min' => [[0m
  [35;1m[39m[0m
  [31m-        'array' => 'The :attribute must have at least :min items.',[0m
  [35;1m[39m[0m
  [31m-        'file' => 'The :attribute must be at least :min kilobytes.',[0m
  [35;1m[39m[0m
  [31m-        'numeric' => 'The :attribute must be at least :min.',[0m
  [35;1m[39m[0m
  [31m-        'string' => 'The :attribute must be at least :min characters.',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-    'multiple_of' => 'The :attribute must be a multiple of :value.',[0m
  [35;1m[39m[0m
  [31m-    'not_in' => 'The selected :attribute is invalid.',[0m
  [35;1m[39m[0m
  [31m-    'not_regex' => 'The :attribute format is invalid.',[0m
  [35;1m[39m[0m
  [31m-    'numeric' => 'The :attribute must be a number.',[0m
  [35;1m[39m[0m
  [31m-    'password' => 'The password is incorrect.',[0m
  [35;1m[39m[0m
  [31m-    'present' => 'The :attribute field must be present.',[0m
  [35;1m[39m[0m
  [31m-    'prohibited' => 'The :attribute field is prohibited.',[0m
  [35;1m[39m[0m
  [31m-    'prohibited_if' => 'The :attribute field is prohibited when :other is :value.',[0m
  [35;1m[39m[0m
  [31m-    'prohibited_unless' => 'The :attribute field is prohibited unless :other is in :values.',[0m
  [35;1m[39m[0m
  [31m-    'prohibits' => 'The :attribute field prohibits :other from being present.',[0m
  [35;1m[39m[0m
  [31m-    'regex' => 'The :attribute format is invalid.',[0m
  [35;1m[39m[0m
  [31m-    'required' => 'The :attribute field is required.',[0m
  [35;1m[39m[0m
  [31m-    'required_array_keys' => 'The :attribute field must contain entries for: :values.',[0m
  [35;1m[39m[0m
  [31m-    'required_if' => 'The :attribute field is required when :other is :value.',[0m
  [35;1m[39m[0m
  [31m-    'required_unless' => 'The :attribute field is required unless :other is in :values.',[0m
  [35;1m[39m[0m
  [31m-    'required_with' => 'The :attribute field is required when :values is present.',[0m
  [35;1m[39m[0m
  [31m-    'required_with_all' => 'The :attribute field is required when :values are present.',[0m
  [35;1m[39m[0m
  [31m-    'required_without' => 'The :attribute field is required when :values is not present.',[0m
  [35;1m[39m[0m
  [31m-    'required_without_all' => 'The :attribute field is required when none of :values are present.',[0m
  [35;1m[39m[0m
  [31m-    'same' => 'The :attribute and :other must match.',[0m
  [35;1m[39m[0m
  [31m-    'size' => [[0m
  [35;1m[39m[0m
  [31m-        'array' => 'The :attribute must contain :size items.',[0m
  [35;1m[39m[0m
  [31m-        'file' => 'The :attribute must be :size kilobytes.',[0m
  [35;1m[39m[0m
  [31m-        'numeric' => 'The :attribute must be :size.',[0m
  [35;1m[39m[0m
  [31m-        'string' => 'The :attribute must be :size characters.',[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-    'starts_with' => 'The :attribute must start with one of the following: :values.',[0m
  [35;1m[39m[0m
  [31m-    'string' => 'The :attribute must be a string.',[0m
  [35;1m[39m[0m
  [31m-    'timezone' => 'The :attribute must be a valid timezone.',[0m
  [35;1m[39m[0m
  [31m-    'unique' => 'The :attribute has already been taken.',[0m
  [35;1m[39m[0m
  [31m-    'uploaded' => 'The :attribute failed to upload.',[0m
  [35;1m[39m[0m
  [31m-    'url' => 'The :attribute must be a valid URL.',[0m
  [35;1m[39m[0m
  [31m-    'uuid' => 'The :attribute must be a valid UUID.',[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Custom Validation Language Lines[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | Here you may specify custom validation messages for attributes using the[0m
  [35;1m[39m[0m
  [31m-    | convention "attribute.rule" to name the lines. This makes it quick to[0m
  [35;1m[39m[0m
  [31m-    | specify a specific custom language line for a given attribute rule.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'custom' => [[0m
  [35;1m[39m[0m
  [31m-        'attribute-name' => [[0m
  [35;1m[39m[0m
  [31m-            'rule-name' => 'custom-message',[0m
  [35;1m[39m[0m
  [31m-        ],[0m
  [35;1m[39m[0m
  [31m-    ],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    /*[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    | Custom Validation Attributes[0m
  [35;1m[39m[0m
  [31m-    |--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    | The following language lines are used to swap our attribute placeholder[0m
  [35;1m[39m[0m
  [31m-    | with something more reader friendly such as "E-Mail Address" instead[0m
  [35;1m[39m[0m
  [31m-    | of "email". This simply helps us make our message more expressive.[0m
  [35;1m[39m[0m
  [31m-    |[0m
  [35;1m[39m[0m
  [31m-    */[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    'attributes' => [],[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-];[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+return [[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Validation Language Lines[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The following language lines contain the default error messages used by[39m[0m
  [32m+    | the validator class. Some of these rules have multiple versions such[39m[0m
  [32m+    | as the size rules. Feel free to tweak each of these messages here.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'accepted' => 'The :attribute must be accepted.',[39m[0m
  [32m+    'accepted_if' => 'The :attribute must be accepted when :other is :value.',[39m[0m
  [32m+    'active_url' => 'The :attribute is not a valid URL.',[39m[0m
  [32m+    'after' => 'The :attribute must be a date after :date.',[39m[0m
  [32m+    'after_or_equal' => 'The :attribute must be a date after or equal to :date.',[39m[0m
  [32m+    'alpha' => 'The :attribute must only contain letters.',[39m[0m
  [32m+    'alpha_dash' => 'The :attribute must only contain letters, numbers, dashes and underscores.',[39m[0m
  [32m+    'alpha_num' => 'The :attribute must only contain letters and numbers.',[39m[0m
  [32m+    'array' => 'The :attribute must be an array.',[39m[0m
  [32m+    'before' => 'The :attribute must be a date before :date.',[39m[0m
  [32m+    'before_or_equal' => 'The :attribute must be a date before or equal to :date.',[39m[0m
  [32m+    'between' => [[39m[0m
  [32m+        'array' => 'The :attribute must have between :min and :max items.',[39m[0m
  [32m+        'file' => 'The :attribute must be between :min and :max kilobytes.',[39m[0m
  [32m+        'numeric' => 'The :attribute must be between :min and :max.',[39m[0m
  [32m+        'string' => 'The :attribute must be between :min and :max characters.',[39m[0m
  [32m+    ],[39m[0m
  [32m+    'boolean' => 'The :attribute field must be true or false.',[39m[0m
  [32m+    'confirmed' => 'The :attribute confirmation does not match.',[39m[0m
  [32m+    'current_password' => 'The password is incorrect.',[39m[0m
  [32m+    'date' => 'The :attribute is not a valid date.',[39m[0m
  [32m+    'date_equals' => 'The :attribute must be a date equal to :date.',[39m[0m
  [32m+    'date_format' => 'The :attribute does not match the format :format.',[39m[0m
  [32m+    'declined' => 'The :attribute must be declined.',[39m[0m
  [32m+    'declined_if' => 'The :attribute must be declined when :other is :value.',[39m[0m
  [32m+    'different' => 'The :attribute and :other must be different.',[39m[0m
  [32m+    'digits' => 'The :attribute must be :digits digits.',[39m[0m
  [32m+    'digits_between' => 'The :attribute must be between :min and :max digits.',[39m[0m
  [32m+    'dimensions' => 'The :attribute has invalid image dimensions.',[39m[0m
  [32m+    'distinct' => 'The :attribute field has a duplicate value.',[39m[0m
  [32m+    'email' => 'The :attribute must be a valid email address.',[39m[0m
  [32m+    'ends_with' => 'The :attribute must end with one of the following: :values.',[39m[0m
  [32m+    'enum' => 'The selected :attribute is invalid.',[39m[0m
  [32m+    'exists' => 'The selected :attribute is invalid.',[39m[0m
  [32m+    'file' => 'The :attribute must be a file.',[39m[0m
  [32m+    'filled' => 'The :attribute field must have a value.',[39m[0m
  [32m+    'gt' => [[39m[0m
  [32m+        'array' => 'The :attribute must have more than :value items.',[39m[0m
  [32m+        'file' => 'The :attribute must be greater than :value kilobytes.',[39m[0m
  [32m+        'numeric' => 'The :attribute must be greater than :value.',[39m[0m
  [32m+        'string' => 'The :attribute must be greater than :value characters.',[39m[0m
  [32m+    ],[39m[0m
  [32m+    'gte' => [[39m[0m
  [32m+        'array' => 'The :attribute must have :value items or more.',[39m[0m
  [32m+        'file' => 'The :attribute must be greater than or equal to :value kilobytes.',[39m[0m
  [32m+        'numeric' => 'The :attribute must be greater than or equal to :value.',[39m[0m
  [32m+        'string' => 'The :attribute must be greater than or equal to :value characters.',[39m[0m
  [32m+    ],[39m[0m
  [32m+    'image' => 'The :attribute must be an image.',[39m[0m
  [32m+    'in' => 'The selected :attribute is invalid.',[39m[0m
  [32m+    'in_array' => 'The :attribute field does not exist in :other.',[39m[0m
  [32m+    'integer' => 'The :attribute must be an integer.',[39m[0m
  [32m+    'ip' => 'The :attribute must be a valid IP address.',[39m[0m
  [32m+    'ipv4' => 'The :attribute must be a valid IPv4 address.',[39m[0m
  [32m+    'ipv6' => 'The :attribute must be a valid IPv6 address.',[39m[0m
  [32m+    'json' => 'The :attribute must be a valid JSON string.',[39m[0m
  [32m+    'lt' => [[39m[0m
  [32m+        'array' => 'The :attribute must have less than :value items.',[39m[0m
  [32m+        'file' => 'The :attribute must be less than :value kilobytes.',[39m[0m
  [32m+        'numeric' => 'The :attribute must be less than :value.',[39m[0m
  [32m+        'string' => 'The :attribute must be less than :value characters.',[39m[0m
  [32m+    ],[39m[0m
  [32m+    'lte' => [[39m[0m
  [32m+        'array' => 'The :attribute must not have more than :value items.',[39m[0m
  [32m+        'file' => 'The :attribute must be less than or equal to :value kilobytes.',[39m[0m
  [32m+        'numeric' => 'The :attribute must be less than or equal to :value.',[39m[0m
  [32m+        'string' => 'The :attribute must be less than or equal to :value characters.',[39m[0m
  [32m+    ],[39m[0m
  [32m+    'mac_address' => 'The :attribute must be a valid MAC address.',[39m[0m
  [32m+    'max' => [[39m[0m
  [32m+        'array' => 'The :attribute must not have more than :max items.',[39m[0m
  [32m+        'file' => 'The :attribute must not be greater than :max kilobytes.',[39m[0m
  [32m+        'numeric' => 'The :attribute must not be greater than :max.',[39m[0m
  [32m+        'string' => 'The :attribute must not be greater than :max characters.',[39m[0m
  [32m+    ],[39m[0m
  [32m+    'mimes' => 'The :attribute must be a file of type: :values.',[39m[0m
  [32m+    'mimetypes' => 'The :attribute must be a file of type: :values.',[39m[0m
  [32m+    'min' => [[39m[0m
  [32m+        'array' => 'The :attribute must have at least :min items.',[39m[0m
  [32m+        'file' => 'The :attribute must be at least :min kilobytes.',[39m[0m
  [32m+        'numeric' => 'The :attribute must be at least :min.',[39m[0m
  [32m+        'string' => 'The :attribute must be at least :min characters.',[39m[0m
  [32m+    ],[39m[0m
  [32m+    'multiple_of' => 'The :attribute must be a multiple of :value.',[39m[0m
  [32m+    'not_in' => 'The selected :attribute is invalid.',[39m[0m
  [32m+    'not_regex' => 'The :attribute format is invalid.',[39m[0m
  [32m+    'numeric' => 'The :attribute must be a number.',[39m[0m
  [32m+    'password' => 'The password is incorrect.',[39m[0m
  [32m+    'present' => 'The :attribute field must be present.',[39m[0m
  [32m+    'prohibited' => 'The :attribute field is prohibited.',[39m[0m
  [32m+    'prohibited_if' => 'The :attribute field is prohibited when :other is :value.',[39m[0m
  [32m+    'prohibited_unless' => 'The :attribute field is prohibited unless :other is in :values.',[39m[0m
  [32m+    'prohibits' => 'The :attribute field prohibits :other from being present.',[39m[0m
  [32m+    'regex' => 'The :attribute format is invalid.',[39m[0m
  [32m+    'required' => 'The :attribute field is required.',[39m[0m
  [32m+    'required_array_keys' => 'The :attribute field must contain entries for: :values.',[39m[0m
  [32m+    'required_if' => 'The :attribute field is required when :other is :value.',[39m[0m
  [32m+    'required_unless' => 'The :attribute field is required unless :other is in :values.',[39m[0m
  [32m+    'required_with' => 'The :attribute field is required when :values is present.',[39m[0m
  [32m+    'required_with_all' => 'The :attribute field is required when :values are present.',[39m[0m
  [32m+    'required_without' => 'The :attribute field is required when :values is not present.',[39m[0m
  [32m+    'required_without_all' => 'The :attribute field is required when none of :values are present.',[39m[0m
  [32m+    'same' => 'The :attribute and :other must match.',[39m[0m
  [32m+    'size' => [[39m[0m
  [32m+        'array' => 'The :attribute must contain :size items.',[39m[0m
  [32m+        'file' => 'The :attribute must be :size kilobytes.',[39m[0m
  [32m+        'numeric' => 'The :attribute must be :size.',[39m[0m
  [32m+        'string' => 'The :attribute must be :size characters.',[39m[0m
  [32m+    ],[39m[0m
  [32m+    'starts_with' => 'The :attribute must start with one of the following: :values.',[39m[0m
  [32m+    'string' => 'The :attribute must be a string.',[39m[0m
  [32m+    'timezone' => 'The :attribute must be a valid timezone.',[39m[0m
  [32m+    'unique' => 'The :attribute has already been taken.',[39m[0m
  [32m+    'uploaded' => 'The :attribute failed to upload.',[39m[0m
  [32m+    'url' => 'The :attribute must be a valid URL.',[39m[0m
  [32m+    'uuid' => 'The :attribute must be a valid UUID.',[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Custom Validation Language Lines[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | Here you may specify custom validation messages for attributes using the[39m[0m
  [32m+    | convention "attribute.rule" to name the lines. This makes it quick to[39m[0m
  [32m+    | specify a specific custom language line for a given attribute rule.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'custom' => [[39m[0m
  [32m+        'attribute-name' => [[39m[0m
  [32m+            'rule-name' => 'custom-message',[39m[0m
  [32m+        ],[39m[0m
  [32m+    ],[39m[0m
  [32m+[39m[0m
  [32m+    /*[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    | Custom Validation Attributes[39m[0m
  [32m+    |--------------------------------------------------------------------------[39m[0m
  [32m+    |[39m[0m
  [32m+    | The following language lines are used to swap our attribute placeholder[39m[0m
  [32m+    | with something more reader friendly such as "E-Mail Address" instead[39m[0m
  [32m+    | of "email". This simply helps us make our message more expressive.[39m[0m
  [32m+    |[39m[0m
  [32m+    */[39m[0m
  [32m+[39m[0m
  [32m+    'attributes' => [],[39m[0m
  [32m+[39m[0m
  [32m+];[39m[0m
  
  [32;1mâœ“[39;22m public/index.php [90m                                                                              braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m55 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m55 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Http\Kernel;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Http\Request;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-define('LARAVEL_START', microtime(true));[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Check If The Application Is Under Maintenance[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| If the application is in maintenance / demo mode via the "down" command[0m
  [35;1m[39m[0m
  [31m-| we will load this file so that any pre-rendered content can be shown[0m
  [35;1m[39m[0m
  [31m-| instead of starting the framework, which could cause an exception.[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {[0m
  [35;1m[39m[0m
  [31m-    require $maintenance;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Register The Auto Loader[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| Composer provides a convenient, automatically generated class loader for[0m
  [35;1m[39m[0m
  [31m-| this application. We just need to utilize it! We'll simply require it[0m
  [35;1m[39m[0m
  [31m-| into the script here so we don't need to manually load our classes.[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-require __DIR__.'/../vendor/autoload.php';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Run The Application[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| Once we have the application, we can handle the incoming request using[0m
  [35;1m[39m[0m
  [31m-| the application's HTTP kernel. Then, we will send the response back[0m
  [35;1m[39m[0m
  [31m-| to this client's browser, allowing them to enjoy our application.[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-$app = require_once __DIR__.'/../bootstrap/app.php';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-$kernel = $app->make(Kernel::class);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-$response = $kernel->handle([0m
  [35;1m[39m[0m
  [31m-    $request = Request::capture()[0m
  [35;1m[39m[0m
  [31m-)->send();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-$kernel->terminate($request, $response);[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Contracts\Http\Kernel;[39m[0m
  [32m+use Illuminate\Http\Request;[39m[0m
  [32m+[39m[0m
  [32m+define('LARAVEL_START', microtime(true));[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Check If The Application Is Under Maintenance[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| If the application is in maintenance / demo mode via the "down" command[39m[0m
  [32m+| we will load this file so that any pre-rendered content can be shown[39m[0m
  [32m+| instead of starting the framework, which could cause an exception.[39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {[39m[0m
  [32m+    require $maintenance;[39m[0m
  [32m+}[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Register The Auto Loader[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| Composer provides a convenient, automatically generated class loader for[39m[0m
  [32m+| this application. We just need to utilize it! We'll simply require it[39m[0m
  [32m+| into the script here so we don't need to manually load our classes.[39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+require __DIR__.'/../vendor/autoload.php';[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Run The Application[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| Once we have the application, we can handle the incoming request using[39m[0m
  [32m+| the application's HTTP kernel. Then, we will send the response back[39m[0m
  [32m+| to this client's browser, allowing them to enjoy our application.[39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+$app = require_once __DIR__.'/../bootstrap/app.php';[39m[0m
  [32m+[39m[0m
  [32m+$kernel = $app->make(Kernel::class);[39m[0m
  [32m+[39m[0m
  [32m+$response = $kernel->handle([39m[0m
  [32m+    $request = Request::capture()[39m[0m
  [32m+)->send();[39m[0m
  [32m+[39m[0m
  [32m+$kernel->terminate($request, $response);[39m[0m
  
  [32;1mâœ“[39;22m routes/api.php [90m                                                                                        line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m17 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m17 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\ExperimentFinishController;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Route;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| API Routes[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| Here is where you can register API routes for your application. These[0m
  [35;1m[39m[0m
  [31m-| routes are loaded by the RouteServiceProvider within a group which[0m
  [35;1m[39m[0m
  [31m-| is assigned the "api" middleware group. Enjoy building your API![0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-Route::post('/experiments/{experiment}/finish', [ExperimentFinishController::class, 'store']);[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use App\Http\Controllers\ExperimentFinishController;[39m[0m
  [32m+use Illuminate\Support\Facades\Route;[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| API Routes[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| Here is where you can register API routes for your application. These[39m[0m
  [32m+| routes are loaded by the RouteServiceProvider within a group which[39m[0m
  [32m+| is assigned the "api" middleware group. Enjoy building your API![39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+Route::post('/experiments/{experiment}/finish', [ExperimentFinishController::class, 'store']);[39m[0m
  
  [32;1mâœ“[39;22m routes/channels.php [90m                                                    braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Broadcast;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Broadcast Channels[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| Here you may register all of the event broadcasting channels that your[0m
  [35;1m[39m[0m
  [31m-| application supports. The given channel authorization callbacks are[0m
  [35;1m[39m[0m
  [31m-| used to check if an authenticated user can listen to the channel.[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-Broadcast::channel('User.{userId}', function ($user, $userId) {[0m
  [35;1m[39m[0m
  [31m-    return (int) $user->id === (int) $userId;[0m
  [35;1m[39m[0m
  [31m-});[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-Broadcast::channel('Team.{teamId}', function ($user, $teamId) {[0m
  [35;1m[39m[0m
  [31m-    return Team::findOrFail($teamId)->allUsers()->contains('id', (int) $user->id);[0m
  [35;1m[39m[0m
  [31m-});[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use Illuminate\Support\Facades\Broadcast;[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Broadcast Channels[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| Here you may register all of the event broadcasting channels that your[39m[0m
  [32m+| application supports. The given channel authorization callbacks are[39m[0m
  [32m+| used to check if an authenticated user can listen to the channel.[39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+Broadcast::channel('User.{userId}', function ($user, $userId) {[39m[0m
  [32m+    return (int) $user->id === (int) $userId;[39m[0m
  [32m+});[39m[0m
  [32m+[39m[0m
  [32m+Broadcast::channel('Team.{teamId}', function ($user, $teamId) {[39m[0m
  [32m+    return Team::findOrFail($teamId)->allUsers()->contains('id', (int) $user->id);[39m[0m
  [32m+});[39m[0m
  
  [32;1mâœ“[39;22m routes/console.php [90m                                                     braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m19 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Inspiring;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Artisan;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Console Routes[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| This file is where you may define all of your Closure based console[0m
  [35;1m[39m[0m
  [31m-| commands. Each Closure is bound to a command instance allowing a[0m
  [35;1m[39m[0m
  [31m-| simple approach to interacting with each command's IO methods.[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-Artisan::command('inspire', function () {[0m
  [35;1m[39m[0m
  [31m-    $this->comment(Inspiring::quote());[0m
  [35;1m[39m[0m
  [31m-})->purpose('Display an inspiring quote');[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Foundation\Inspiring;[39m[0m
  [32m+use Illuminate\Support\Facades\Artisan;[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Console Routes[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| This file is where you may define all of your Closure based console[39m[0m
  [32m+| commands. Each Closure is bound to a command instance allowing a[39m[0m
  [32m+| simple approach to interacting with each command's IO methods.[39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+[39m[0m
  [32m+Artisan::command('inspire', function () {[39m[0m
  [32m+    $this->comment(Inspiring::quote());[39m[0m
  [32m+})->purpose('Display an inspiring quote');[39m[0m
  
  [32;1mâœ“[39;22m routes/web.php [90m                                                         braces, curly_braces_position, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m95 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m95 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\DashboardController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\DataController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\DatasetController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\ExperimentController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\ExperimentDataController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\ExperimentDownloadController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\ExperimentTrainController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\InspectController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\LabelEvidenceController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\LabelEvidenceGridController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\PredictionDownloadController;[0m
  [35;1m[39m[0m
  [31m-use App\Http\Controllers\TeamController;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Auth;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Route;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-/*[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-| Web Routes[0m
  [35;1m[39m[0m
  [31m-|--------------------------------------------------------------------------[0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-| Here is where you can register web routes for your application. These[0m
  [35;1m[39m[0m
  [31m-| routes are loaded by the RouteServiceProvider within a group which[0m
  [35;1m[39m[0m
  [31m-| contains the "web" middleware group. Now create something great![0m
  [35;1m[39m[0m
  [31m-|[0m
  [35;1m[39m[0m
  [31m-*/[0m
  [35;1m[39m[0m
  [31m-Route::get('/', function () {[0m
  [35;1m[39m[0m
  [31m-    if (Auth::check()) {[0m
  [35;1m[39m[0m
  [31m-        return redirect()->route('teams.index');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    return redirect()->route('login');[0m
  [35;1m[39m[0m
  [31m-});[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-Route::group(['middleware' => config('jetstream.middleware', ['web'])], function () {[0m
  [35;1m[39m[0m
  [31m-    $authMiddleware = config('jetstream.guard')[0m
  [35;1m[39m[0m
  [31m-        ? 'auth:'.config('jetstream.guard')[0m
  [35;1m[39m[0m
  [31m-        : 'auth';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    Route::group(['middleware' => [$authMiddleware, 'verified']], function () {[0m
  [35;1m[39m[0m
  [31m-        Route::get('/teams/{team}', [TeamController::class, 'show'])->name('teams.show');[0m
  [35;1m[39m[0m
  [31m-    });[0m
  [35;1m[39m[0m
  [31m-});[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-// Authenticated routes.[0m
  [35;1m[39m[0m
  [31m-Route::middleware(['auth:sanctum', 'verified'])->group(function () {[0m
  [35;1m[39m[0m
  [31m-    Route::get('/teams', [TeamController::class, 'index'])->name('teams.index');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    Route::middleware(['team'])->group(function () {[0m
  [35;1m[39m[0m
  [31m-        // Data routes[0m
  [35;1m[39m[0m
  [31m-        Route::prefix('data')->group(function () {[0m
  [35;1m[39m[0m
  [31m-            Route::get('/', [DataController::class, 'index'])->name('data.index');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            Route::post('/datasets', [DatasetController::class, 'store'])->name('data.datasets.store');[0m
  [35;1m[39m[0m
  [31m-            Route::get('/datasets/{dataset}', [DatasetController::class, 'show'])->name('data.datasets.show');[0m
  [35;1m[39m[0m
  [31m-            Route::delete('/datasets/{dataset}', [DatasetController::class, 'destroy'])->name('data.datasets.destroy');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            Route::post('/labelEvidence', [LabelEvidenceController::class, 'store'])->name('data.labelEvidence.store');[0m
  [35;1m[39m[0m
  [31m-            Route::get('/labelEvidence/{labelEvidence}', [LabelEvidenceController::class, 'show'])->name('data.labelEvidence.show');[0m
  [35;1m[39m[0m
  [31m-            Route::delete('/labelEvidence/{labelEvidence}', [LabelEvidenceController::class, 'destroy'])->name('data.labelEvidence.destroy');[0m
  [35;1m[39m[0m
  [31m-            Route::post('/labelEvidence/{labelEvidence}/labels', [LabelEvidenceGridController::class, 'store'])->name('data.labelEvidence.grids.store');[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Inspect routes[0m
  [35;1m[39m[0m
  [31m-        Route::prefix('inspect')->group(function () {[0m
  [35;1m[39m[0m
  [31m-            Route::get('/', [InspectController::class, 'index'])->name('inspect.index');[0m
  [35;1m[39m[0m
  [31m-            Route::post('/', [InspectController::class, 'store'])->name('inspect.store');[0m
  [35;1m[39m[0m
  [31m-            Route::get('/{inspectDataset}', [InspectController::class, 'show'])->name('inspect.show');[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Experiments routes[0m
  [35;1m[39m[0m
  [31m-        Route::resource('experiments', ExperimentController::class)->only([[0m
  [35;1m[39m[0m
  [31m-            'index', 'store', 'show', 'destroy',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-        Route::prefix('experiments')->group(function () {[0m
  [35;1m[39m[0m
  [31m-            Route::post('/data', [ExperimentDataController::class, 'store'])->name('experiments.data.store');[0m
  [35;1m[39m[0m
  [31m-            Route::get('/data/{data}', [ExperimentDataController::class, 'show'])->name('experiments.data.show');[0m
  [35;1m[39m[0m
  [31m-            Route::delete('/data/{data}', [ExperimentDataController::class, 'destroy'])->name('experiments.data.destroy');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            Route::get('/{experiment}/download', [ExperimentDownloadController::class, 'download'])->name('experiments.download');[0m
  [35;1m[39m[0m
  [31m-            Route::post('/{experiment}/start', [ExperimentTrainController::class, 'start'])->name('experiments.start');[0m
  [35;1m[39m[0m
  [31m-            Route::delete('/{experiment}/stop', [ExperimentTrainController::class, 'stop'])->name('experiments.stop');[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        // Dashboard routes[0m
  [35;1m[39m[0m
  [31m-        Route::prefix('dashboard')->group(function () {[0m
  [35;1m[39m[0m
  [31m-            Route::get('/', [DashboardController::class, 'index'])->name('dashboard.index');[0m
  [35;1m[39m[0m
  [31m-            Route::post('/', [DashboardController::class, 'store'])->name('dashboard.store');[0m
  [35;1m[39m[0m
  [31m-            Route::get('/{prediction}', [DashboardController::class, 'show'])->name('dashboard.show');[0m
  [35;1m[39m[0m
  [31m-            Route::delete('/{prediction}', [DashboardController::class, 'destroy'])->name('dashboard.destroy');[0m
  [35;1m[39m[0m
  [31m-            Route::get('/{prediction}/download', [PredictionDownloadController::class, 'download'])->name('predictions.download');[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    });[0m
  [35;1m[39m[0m
  [31m-});[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+use App\Http\Controllers\DashboardController;[39m[0m
  [32m+use App\Http\Controllers\DataController;[39m[0m
  [32m+use App\Http\Controllers\DatasetController;[39m[0m
  [32m+use App\Http\Controllers\ExperimentController;[39m[0m
  [32m+use App\Http\Controllers\ExperimentDataController;[39m[0m
  [32m+use App\Http\Controllers\ExperimentDownloadController;[39m[0m
  [32m+use App\Http\Controllers\ExperimentTrainController;[39m[0m
  [32m+use App\Http\Controllers\InspectController;[39m[0m
  [32m+use App\Http\Controllers\LabelEvidenceController;[39m[0m
  [32m+use App\Http\Controllers\LabelEvidenceGridController;[39m[0m
  [32m+use App\Http\Controllers\PredictionDownloadController;[39m[0m
  [32m+use App\Http\Controllers\TeamController;[39m[0m
  [32m+use Illuminate\Support\Facades\Auth;[39m[0m
  [32m+use Illuminate\Support\Facades\Route;[39m[0m
  [32m+[39m[0m
  [32m+/*[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+| Web Routes[39m[0m
  [32m+|--------------------------------------------------------------------------[39m[0m
  [32m+|[39m[0m
  [32m+| Here is where you can register web routes for your application. These[39m[0m
  [32m+| routes are loaded by the RouteServiceProvider within a group which[39m[0m
  [32m+| contains the "web" middleware group. Now create something great![39m[0m
  [32m+|[39m[0m
  [32m+*/[39m[0m
  [32m+Route::get('/', function () {[39m[0m
  [32m+    if (Auth::check()) {[39m[0m
  [32m+        return redirect()->route('teams.index');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    return redirect()->route('login');[39m[0m
  [32m+});[39m[0m
  [32m+[39m[0m
  [32m+Route::group(['middleware' => config('jetstream.middleware', ['web'])], function () {[39m[0m
  [32m+    $authMiddleware = config('jetstream.guard')[39m[0m
  [32m+        ? 'auth:'.config('jetstream.guard')[39m[0m
  [32m+        : 'auth';[39m[0m
  [32m+[39m[0m
  [32m+    Route::group(['middleware' => [$authMiddleware, 'verified']], function () {[39m[0m
  [32m+        Route::get('/teams/{team}', [TeamController::class, 'show'])->name('teams.show');[39m[0m
  [32m+    });[39m[0m
  [32m+});[39m[0m
  [32m+[39m[0m
  [32m+// Authenticated routes.[39m[0m
  [32m+Route::middleware(['auth:sanctum', 'verified'])->group(function () {[39m[0m
  [32m+    Route::get('/teams', [TeamController::class, 'index'])->name('teams.index');[39m[0m
  [32m+[39m[0m
  [32m+    Route::middleware(['team'])->group(function () {[39m[0m
  [32m+        // Data routes[39m[0m
  [32m+        Route::prefix('data')->group(function () {[39m[0m
  [32m+            Route::get('/', [DataController::class, 'index'])->name('data.index');[39m[0m
  [32m+[39m[0m
  [32m+            Route::post('/datasets', [DatasetController::class, 'store'])->name('data.datasets.store');[39m[0m
  [32m+            Route::get('/datasets/{dataset}', [DatasetController::class, 'show'])->name('data.datasets.show');[39m[0m
  [32m+            Route::delete('/datasets/{dataset}', [DatasetController::class, 'destroy'])->name('data.datasets.destroy');[39m[0m
  [32m+[39m[0m
  [32m+            Route::post('/labelEvidence', [LabelEvidenceController::class, 'store'])->name('data.labelEvidence.store');[39m[0m
  [32m+            Route::get('/labelEvidence/{labelEvidence}', [LabelEvidenceController::class, 'show'])->name('data.labelEvidence.show');[39m[0m
  [32m+            Route::delete('/labelEvidence/{labelEvidence}', [LabelEvidenceController::class, 'destroy'])->name('data.labelEvidence.destroy');[39m[0m
  [32m+            Route::post('/labelEvidence/{labelEvidence}/labels', [LabelEvidenceGridController::class, 'store'])->name('data.labelEvidence.grids.store');[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        // Inspect routes[39m[0m
  [32m+        Route::prefix('inspect')->group(function () {[39m[0m
  [32m+            Route::get('/', [InspectController::class, 'index'])->name('inspect.index');[39m[0m
  [32m+            Route::post('/', [InspectController::class, 'store'])->name('inspect.store');[39m[0m
  [32m+            Route::get('/{inspectDataset}', [InspectController::class, 'show'])->name('inspect.show');[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        // Experiments routes[39m[0m
  [32m+        Route::resource('experiments', ExperimentController::class)->only([[39m[0m
  [32m+            'index', 'store', 'show', 'destroy',[39m[0m
  [32m+        ]);[39m[0m
  [32m+        Route::prefix('experiments')->group(function () {[39m[0m
  [32m+            Route::post('/data', [ExperimentDataController::class, 'store'])->name('experiments.data.store');[39m[0m
  [32m+            Route::get('/data/{data}', [ExperimentDataController::class, 'show'])->name('experiments.data.show');[39m[0m
  [32m+            Route::delete('/data/{data}', [ExperimentDataController::class, 'destroy'])->name('experiments.data.destroy');[39m[0m
  [32m+[39m[0m
  [32m+            Route::get('/{experiment}/download', [ExperimentDownloadController::class, 'download'])->name('experiments.download');[39m[0m
  [32m+            Route::post('/{experiment}/start', [ExperimentTrainController::class, 'start'])->name('experiments.start');[39m[0m
  [32m+            Route::delete('/{experiment}/stop', [ExperimentTrainController::class, 'stop'])->name('experiments.stop');[39m[0m
  [32m+        });[39m[0m
  [32m+[39m[0m
  [32m+        // Dashboard routes[39m[0m
  [32m+        Route::prefix('dashboard')->group(function () {[39m[0m
  [32m+            Route::get('/', [DashboardController::class, 'index'])->name('dashboard.index');[39m[0m
  [32m+            Route::post('/', [DashboardController::class, 'store'])->name('dashboard.store');[39m[0m
  [32m+            Route::get('/{prediction}', [DashboardController::class, 'show'])->name('dashboard.show');[39m[0m
  [32m+            Route::delete('/{prediction}', [DashboardController::class, 'destroy'])->name('dashboard.destroy');[39m[0m
  [32m+            Route::get('/{prediction}/download', [PredictionDownloadController::class, 'download'])->name('predictions.download');[39m[0m
  [32m+        });[39m[0m
  [32m+    });[39m[0m
  [32m+});[39m[0m
  
  [32;1mâœ“[39;22m tests/CreatesApplication.php [90m                                                                  braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m22 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m22 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Contracts\Console\Kernel;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-trait CreatesApplication[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * Creates the application.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return \Illuminate\Foundation\Application[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function createApplication()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $app = require __DIR__.'/../bootstrap/app.php';[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $app->make(Kernel::class)->bootstrap();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        return $app;[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Contracts\Console\Kernel;[39m[0m
  [32m+[39m[0m
  [32m+trait CreatesApplication[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * Creates the application.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return \Illuminate\Foundation\Application[39m[0m
  [32m+     */[39m[0m
  [32m+    public function createApplication()[39m[0m
  [32m+    {[39m[0m
  [32m+        $app = require __DIR__.'/../bootstrap/app.php';[39m[0m
  [32m+[39m[0m
  [32m+        $app->make(Kernel::class)->bootstrap();[39m[0m
  [32m+[39m[0m
  [32m+        return $app;[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/ApiTokenPermissionsTest.php [90mbraces, line_ending, unary_operator_spaces, not_operator_with_successor_[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m41 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m41 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Features;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ApiTokenPermissionsTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_api_token_permissions_can_be_updated()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::hasApiFeatures()) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('API support is not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $token = $user->tokens()->create([[0m
  [35;1m[39m[0m
  [31m-            'name' => 'Test Token',[0m
  [35;1m[39m[0m
  [31m-            'token' => Str::random(40),[0m
  [35;1m[39m[0m
  [31m-            'abilities' => ['create', 'read'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->put('/user/api-tokens/'.$token->id, [[0m
  [35;1m[39m[0m
  [31m-            'name' => $token->name,[0m
  [35;1m[39m[0m
  [31m-            'permissions' => [[0m
  [35;1m[39m[0m
  [31m-                'delete',[0m
  [35;1m[39m[0m
  [31m-                'missing-permission',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue($user->fresh()->tokens->first()->can('delete'));[0m
  [35;1m[39m[0m
  [31m-        $this->assertFalse($user->fresh()->tokens->first()->can('read'));[0m
  [35;1m[39m[0m
  [31m-        $this->assertFalse($user->fresh()->tokens->first()->can('missing-permission'));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Illuminate\Support\Str;[39m[0m
  [32m+use Laravel\Jetstream\Features;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class ApiTokenPermissionsTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_api_token_permissions_can_be_updated()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::hasApiFeatures()) {[39m[0m
  [32m+            return $this->markTestSkipped('API support is not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $token = $user->tokens()->create([[39m[0m
  [32m+            'name' => 'Test Token',[39m[0m
  [32m+            'token' => Str::random(40),[39m[0m
  [32m+            'abilities' => ['create', 'read'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->put('/user/api-tokens/'.$token->id, [[39m[0m
  [32m+            'name' => $token->name,[39m[0m
  [32m+            'permissions' => [[39m[0m
  [32m+                'delete',[39m[0m
  [32m+                'missing-permission',[39m[0m
  [32m+            ],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertTrue($user->fresh()->tokens->first()->can('delete'));[39m[0m
  [32m+        $this->assertFalse($user->fresh()->tokens->first()->can('read'));[39m[0m
  [32m+        $this->assertFalse($user->fresh()->tokens->first()->can('missing-permission'));[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/AuthenticationTest.php [90m                                                          braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m45 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m45 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use App\Providers\RouteServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class AuthenticationTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_login_screen_can_be_rendered()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $response = $this->get('/login');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertStatus(200);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_users_can_authenticate_using_the_login_screen()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/login', [[0m
  [35;1m[39m[0m
  [31m-            'email' => $user->email,[0m
  [35;1m[39m[0m
  [31m-            'password' => 'password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertAuthenticated();[0m
  [35;1m[39m[0m
  [31m-        $response->assertRedirect(RouteServiceProvider::HOME);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_users_can_not_authenticate_with_invalid_password()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->post('/login', [[0m
  [35;1m[39m[0m
  [31m-            'email' => $user->email,[0m
  [35;1m[39m[0m
  [31m-            'password' => 'wrong-password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertGuest();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use App\Providers\RouteServiceProvider;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class AuthenticationTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_login_screen_can_be_rendered()[39m[0m
  [32m+    {[39m[0m
  [32m+        $response = $this->get('/login');[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertStatus(200);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_users_can_authenticate_using_the_login_screen()[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = User::factory()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/login', [[39m[0m
  [32m+            'email' => $user->email,[39m[0m
  [32m+            'password' => 'password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertAuthenticated();[39m[0m
  [32m+        $response->assertRedirect(RouteServiceProvider::HOME);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_users_can_not_authenticate_with_invalid_password()[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = User::factory()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $this->post('/login', [[39m[0m
  [32m+            'email' => $user->email,[39m[0m
  [32m+            'password' => 'wrong-password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertGuest();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/BrowserSessionsTest.php [90m                                                         braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m23 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class BrowserSessionsTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_other_browser_sessions_can_be_logged_out()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/user/other-browser-sessions', [[0m
  [35;1m[39m[0m
  [31m-            'password' => 'password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertSessionHasNoErrors();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class BrowserSessionsTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_other_browser_sessions_can_be_logged_out()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/user/other-browser-sessions', [[39m[0m
  [32m+            'password' => 'password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertSessionHasNoErrors();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/CreateApiTokenTest.php [90mbraces, line_ending, unary_operator_spaces, not_operator_with_successor_space[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m35 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Features;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreateApiTokenTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_api_tokens_can_be_created()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::hasApiFeatures()) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('API support is not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/user/api-tokens', [[0m
  [35;1m[39m[0m
  [31m-            'name' => 'Test Token',[0m
  [35;1m[39m[0m
  [31m-            'permissions' => [[0m
  [35;1m[39m[0m
  [31m-                'read',[0m
  [35;1m[39m[0m
  [31m-                'update',[0m
  [35;1m[39m[0m
  [31m-            ],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(1, $user->fresh()->tokens);[0m
  [35;1m[39m[0m
  [31m-        $this->assertEquals('Test Token', $user->fresh()->tokens->first()->name);[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue($user->fresh()->tokens->first()->can('read'));[0m
  [35;1m[39m[0m
  [31m-        $this->assertFalse($user->fresh()->tokens->first()->can('delete'));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Laravel\Jetstream\Features;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class CreateApiTokenTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_api_tokens_can_be_created()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::hasApiFeatures()) {[39m[0m
  [32m+            return $this->markTestSkipped('API support is not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/user/api-tokens', [[39m[0m
  [32m+            'name' => 'Test Token',[39m[0m
  [32m+            'permissions' => [[39m[0m
  [32m+                'read',[39m[0m
  [32m+                'update',[39m[0m
  [32m+            ],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(1, $user->fresh()->tokens);[39m[0m
  [32m+        $this->assertEquals('Test Token', $user->fresh()->tokens->first()->name);[39m[0m
  [32m+        $this->assertTrue($user->fresh()->tokens->first()->can('read'));[39m[0m
  [32m+        $this->assertFalse($user->fresh()->tokens->first()->can('delete'));[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/CreateTeamTest.php [90m                                                              braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m24 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m24 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class CreateTeamTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_teams_can_be_created()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/teams', [[0m
  [35;1m[39m[0m
  [31m-            'name' => 'Test Team',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(2, $user->fresh()->ownedTeams);[0m
  [35;1m[39m[0m
  [31m-        $this->assertEquals('Test Team', $user->fresh()->ownedTeams()->latest('id')->first()->name);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class CreateTeamTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_teams_can_be_created()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/teams', [[39m[0m
  [32m+            'name' => 'Test Team',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(2, $user->fresh()->ownedTeams);[39m[0m
  [32m+        $this->assertEquals('Test Team', $user->fresh()->ownedTeams()->latest('id')->first()->name);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/DeleteAccountTest.php [90m braces, line_ending, unary_operator_spaces, not_operator_with_successor_space[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m43 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m43 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Features;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DeleteAccountTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_user_accounts_can_be_deleted()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::hasAccountDeletionFeatures()) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Account deletion is not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/user', [[0m
  [35;1m[39m[0m
  [31m-            'password' => 'password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertNull($user->fresh());[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_correct_password_must_be_provided_before_account_can_be_deleted()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::hasAccountDeletionFeatures()) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Account deletion is not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/user', [[0m
  [35;1m[39m[0m
  [31m-            'password' => 'wrong-password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertNotNull($user->fresh());[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Laravel\Jetstream\Features;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class DeleteAccountTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_user_accounts_can_be_deleted()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::hasAccountDeletionFeatures()) {[39m[0m
  [32m+            return $this->markTestSkipped('Account deletion is not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/user', [[39m[0m
  [32m+            'password' => 'password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertNull($user->fresh());[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_correct_password_must_be_provided_before_account_can_be_deleted()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::hasAccountDeletionFeatures()) {[39m[0m
  [32m+            return $this->markTestSkipped('Account deletion is not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/user', [[39m[0m
  [32m+            'password' => 'wrong-password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertNotNull($user->fresh());[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/DeleteApiTokenTest.php [90mbraces, line_ending, unary_operator_spaces, not_operator_with_successor_space[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m33 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Str;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Features;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DeleteApiTokenTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_api_tokens_can_be_deleted()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::hasApiFeatures()) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('API support is not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $token = $user->tokens()->create([[0m
  [35;1m[39m[0m
  [31m-            'name' => 'Test Token',[0m
  [35;1m[39m[0m
  [31m-            'token' => Str::random(40),[0m
  [35;1m[39m[0m
  [31m-            'abilities' => ['create', 'read'],[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/user/api-tokens/'.$token->id);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(0, $user->fresh()->tokens);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Illuminate\Support\Str;[39m[0m
  [32m+use Laravel\Jetstream\Features;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class DeleteApiTokenTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_api_tokens_can_be_deleted()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::hasApiFeatures()) {[39m[0m
  [32m+            return $this->markTestSkipped('API support is not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $token = $user->tokens()->create([[39m[0m
  [32m+            'name' => 'Test Token',[39m[0m
  [32m+            'token' => Str::random(40),[39m[0m
  [32m+            'abilities' => ['create', 'read'],[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/user/api-tokens/'.$token->id);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(0, $user->fresh()->tokens);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/DeleteTeamTest.php [90m                                                              braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m40 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m40 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\Team;[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class DeleteTeamTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_teams_can_be_deleted()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->ownedTeams()->save($team = Team::factory()->make([[0m
  [35;1m[39m[0m
  [31m-            'personal_team' => false,[0m
  [35;1m[39m[0m
  [31m-        ]));[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $team->users()->attach([0m
  [35;1m[39m[0m
  [31m-            $otherUser = User::factory()->create(), ['role' => 'test-role'][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/teams/'.$team->id);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertNull($team->fresh());[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(0, $otherUser->fresh()->teams);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_personal_teams_cant_be_deleted()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/teams/'.$user->currentTeam->id);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertNotNull($user->currentTeam->fresh());[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\Team;[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class DeleteTeamTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_teams_can_be_deleted()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $user->ownedTeams()->save($team = Team::factory()->make([[39m[0m
  [32m+            'personal_team' => false,[39m[0m
  [32m+        ]));[39m[0m
  [32m+[39m[0m
  [32m+        $team->users()->attach([39m[0m
  [32m+            $otherUser = User::factory()->create(), ['role' => 'test-role'][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/teams/'.$team->id);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertNull($team->fresh());[39m[0m
  [32m+        $this->assertCount(0, $otherUser->fresh()->teams);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_personal_teams_cant_be_deleted()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/teams/'.$user->currentTeam->id);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertNotNull($user->currentTeam->fresh());[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/EmailVerificationTest.php [90mbraces, line_ending, unary_operator_spaces, not_operator_with_successor_sp[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m73 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m73 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use App\Providers\RouteServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Auth\Events\Verified;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Event;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\URL;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Features;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class EmailVerificationTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_email_verification_screen_can_be_rendered()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::emailVerification())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Email verification not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->withPersonalTeam()->unverified()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->actingAs($user)->get('/email/verify');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertStatus(200);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_email_can_be_verified()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::emailVerification())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Email verification not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Event::fake();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->unverified()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $verificationUrl = URL::temporarySignedRoute([0m
  [35;1m[39m[0m
  [31m-            'verification.verify',[0m
  [35;1m[39m[0m
  [31m-            now()->addMinutes(60),[0m
  [35;1m[39m[0m
  [31m-            ['id' => $user->id, 'hash' => sha1($user->email)][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->actingAs($user)->get($verificationUrl);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Event::assertDispatched(Verified::class);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue($user->fresh()->hasVerifiedEmail());[0m
  [35;1m[39m[0m
  [31m-        $response->assertRedirect(RouteServiceProvider::HOME.'?verified=1');[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_email_can_not_verified_with_invalid_hash()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::emailVerification())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Email verification not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->unverified()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $verificationUrl = URL::temporarySignedRoute([0m
  [35;1m[39m[0m
  [31m-            'verification.verify',[0m
  [35;1m[39m[0m
  [31m-            now()->addMinutes(60),[0m
  [35;1m[39m[0m
  [31m-            ['id' => $user->id, 'hash' => sha1('wrong-email')][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user)->get($verificationUrl);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertFalse($user->fresh()->hasVerifiedEmail());[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use App\Providers\RouteServiceProvider;[39m[0m
  [32m+use Illuminate\Auth\Events\Verified;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Illuminate\Support\Facades\Event;[39m[0m
  [32m+use Illuminate\Support\Facades\URL;[39m[0m
  [32m+use Laravel\Fortify\Features;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class EmailVerificationTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_email_verification_screen_can_be_rendered()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::emailVerification())) {[39m[0m
  [32m+            return $this->markTestSkipped('Email verification not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $user = User::factory()->withPersonalTeam()->unverified()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->actingAs($user)->get('/email/verify');[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertStatus(200);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_email_can_be_verified()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::emailVerification())) {[39m[0m
  [32m+            return $this->markTestSkipped('Email verification not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        Event::fake();[39m[0m
  [32m+[39m[0m
  [32m+        $user = User::factory()->unverified()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $verificationUrl = URL::temporarySignedRoute([39m[0m
  [32m+            'verification.verify',[39m[0m
  [32m+            now()->addMinutes(60),[39m[0m
  [32m+            ['id' => $user->id, 'hash' => sha1($user->email)][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->actingAs($user)->get($verificationUrl);[39m[0m
  [32m+[39m[0m
  [32m+        Event::assertDispatched(Verified::class);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertTrue($user->fresh()->hasVerifiedEmail());[39m[0m
  [32m+        $response->assertRedirect(RouteServiceProvider::HOME.'?verified=1');[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_email_can_not_verified_with_invalid_hash()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::emailVerification())) {[39m[0m
  [32m+            return $this->markTestSkipped('Email verification not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $user = User::factory()->unverified()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $verificationUrl = URL::temporarySignedRoute([39m[0m
  [32m+            'verification.verify',[39m[0m
  [32m+            now()->addMinutes(60),[39m[0m
  [32m+            ['id' => $user->id, 'hash' => sha1('wrong-email')][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($user)->get($verificationUrl);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertFalse($user->fresh()->hasVerifiedEmail());[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/ExampleTest.php [90m                                                                 braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m20 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m20 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExampleTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * A basic test example.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function test_the_application_returns_a_successful_response()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $response = $this->get('/');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertStatus(200);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class ExampleTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * A basic test example.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function test_the_application_returns_a_successful_response()[39m[0m
  [32m+    {[39m[0m
  [32m+        $response = $this->get('/');[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertStatus(200);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/InviteTeamMemberTest.php [90m                                                        braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m46 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m46 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Mail;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Mail\TeamInvitation;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class InviteTeamMemberTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_team_members_can_be_invited_to_team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Mail::fake();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/teams/'.$user->currentTeam->id.'/members', [[0m
  [35;1m[39m[0m
  [31m-            'email' => 'test@example.com',[0m
  [35;1m[39m[0m
  [31m-            'role' => 'admin',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Mail::assertSent(TeamInvitation::class);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(1, $user->currentTeam->fresh()->teamInvitations);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_team_member_invitations_can_be_cancelled()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        Mail::fake();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $invitation = $user->currentTeam->teamInvitations()->create([[0m
  [35;1m[39m[0m
  [31m-            'email' => 'test@example.com',[0m
  [35;1m[39m[0m
  [31m-            'role' => 'admin',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/team-invitations/'.$invitation->id);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(0, $user->currentTeam->fresh()->teamInvitations);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Illuminate\Support\Facades\Mail;[39m[0m
  [32m+use Laravel\Jetstream\Mail\TeamInvitation;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class InviteTeamMemberTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_team_members_can_be_invited_to_team()[39m[0m
  [32m+    {[39m[0m
  [32m+        Mail::fake();[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/teams/'.$user->currentTeam->id.'/members', [[39m[0m
  [32m+            'email' => 'test@example.com',[39m[0m
  [32m+            'role' => 'admin',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        Mail::assertSent(TeamInvitation::class);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(1, $user->currentTeam->fresh()->teamInvitations);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_team_member_invitations_can_be_cancelled()[39m[0m
  [32m+    {[39m[0m
  [32m+        Mail::fake();[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $invitation = $user->currentTeam->teamInvitations()->create([[39m[0m
  [32m+            'email' => 'test@example.com',[39m[0m
  [32m+            'role' => 'admin',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/team-invitations/'.$invitation->id);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(0, $user->currentTeam->fresh()->teamInvitations);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/LeaveTeamTest.php [90m                                                               braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m38 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m38 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class LeaveTeamTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_users_can_leave_teams()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->withPersonalTeam()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->currentTeam->users()->attach([0m
  [35;1m[39m[0m
  [31m-            $otherUser = User::factory()->create(), ['role' => 'admin'][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($otherUser);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/teams/'.$user->currentTeam->id.'/members/'.$otherUser->id);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(0, $user->currentTeam->fresh()->users);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_team_owners_cant_leave_their_own_team()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/teams/'.$user->currentTeam->id.'/members/'.$user->id);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertSessionHasErrorsIn('removeTeamMember', ['team']);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertNotNull($user->currentTeam->fresh());[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class LeaveTeamTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_users_can_leave_teams()[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = User::factory()->withPersonalTeam()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $user->currentTeam->users()->attach([39m[0m
  [32m+            $otherUser = User::factory()->create(), ['role' => 'admin'][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($otherUser);[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/teams/'.$user->currentTeam->id.'/members/'.$otherUser->id);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(0, $user->currentTeam->fresh()->users);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_team_owners_cant_leave_their_own_team()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/teams/'.$user->currentTeam->id.'/members/'.$user->id);[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertSessionHasErrorsIn('removeTeamMember', ['team']);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertNotNull($user->currentTeam->fresh());[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/PasswordConfirmationTest.php [90m                                                    braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m44 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m44 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class PasswordConfirmationTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_confirm_password_screen_can_be_rendered()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->withPersonalTeam()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->actingAs($user)->get('/user/confirm-password');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertStatus(200);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_password_can_be_confirmed()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->actingAs($user)->post('/user/confirm-password', [[0m
  [35;1m[39m[0m
  [31m-            'password' => 'password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertRedirect();[0m
  [35;1m[39m[0m
  [31m-        $response->assertSessionHasNoErrors();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_password_is_not_confirmed_with_invalid_password()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->actingAs($user)->post('/user/confirm-password', [[0m
  [35;1m[39m[0m
  [31m-            'password' => 'wrong-password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertSessionHasErrors();[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class PasswordConfirmationTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_confirm_password_screen_can_be_rendered()[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = User::factory()->withPersonalTeam()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->actingAs($user)->get('/user/confirm-password');[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertStatus(200);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_password_can_be_confirmed()[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = User::factory()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->actingAs($user)->post('/user/confirm-password', [[39m[0m
  [32m+            'password' => 'password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertRedirect();[39m[0m
  [32m+        $response->assertSessionHasNoErrors();[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_password_is_not_confirmed_with_invalid_password()[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = User::factory()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->actingAs($user)->post('/user/confirm-password', [[39m[0m
  [32m+            'password' => 'wrong-password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertSessionHasErrors();[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/PasswordResetTest.php [90mbraces, curly_braces_position, line_ending, unary_operator_spaces, not_operato[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m94 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m94 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Auth\Notifications\ResetPassword;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Notification;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Features;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class PasswordResetTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_reset_password_link_screen_can_be_rendered()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::resetPasswords())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Password updates are not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->get('/forgot-password');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertStatus(200);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_reset_password_link_can_be_requested()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::resetPasswords())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Password updates are not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Notification::fake();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/forgot-password', [[0m
  [35;1m[39m[0m
  [31m-            'email' => $user->email,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Notification::assertSentTo($user, ResetPassword::class);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_reset_password_screen_can_be_rendered()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::resetPasswords())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Password updates are not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Notification::fake();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/forgot-password', [[0m
  [35;1m[39m[0m
  [31m-            'email' => $user->email,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Notification::assertSentTo($user, ResetPassword::class, function ($notification) {[0m
  [35;1m[39m[0m
  [31m-            $response = $this->get('/reset-password/'.$notification->token);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $response->assertStatus(200);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return true;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_password_can_be_reset_with_valid_token()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::resetPasswords())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Password updates are not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Notification::fake();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/forgot-password', [[0m
  [35;1m[39m[0m
  [31m-            'email' => $user->email,[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        Notification::assertSentTo($user, ResetPassword::class, function ($notification) use ($user) {[0m
  [35;1m[39m[0m
  [31m-            $response = $this->post('/reset-password', [[0m
  [35;1m[39m[0m
  [31m-                'token' => $notification->token,[0m
  [35;1m[39m[0m
  [31m-                'email' => $user->email,[0m
  [35;1m[39m[0m
  [31m-                'password' => 'password',[0m
  [35;1m[39m[0m
  [31m-                'password_confirmation' => 'password',[0m
  [35;1m[39m[0m
  [31m-            ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            $response->assertSessionHasNoErrors();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-            return true;[0m
  [35;1m[39m[0m
  [31m-        });[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Auth\Notifications\ResetPassword;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Illuminate\Support\Facades\Notification;[39m[0m
  [32m+use Laravel\Fortify\Features;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class PasswordResetTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_reset_password_link_screen_can_be_rendered()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::resetPasswords())) {[39m[0m
  [32m+            return $this->markTestSkipped('Password updates are not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->get('/forgot-password');[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertStatus(200);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_reset_password_link_can_be_requested()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::resetPasswords())) {[39m[0m
  [32m+            return $this->markTestSkipped('Password updates are not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        Notification::fake();[39m[0m
  [32m+[39m[0m
  [32m+        $user = User::factory()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/forgot-password', [[39m[0m
  [32m+            'email' => $user->email,[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        Notification::assertSentTo($user, ResetPassword::class);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_reset_password_screen_can_be_rendered()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::resetPasswords())) {[39m[0m
  [32m+            return $this->markTestSkipped('Password updates are not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        Notification::fake();[39m[0m
  [32m+[39m[0m
  [32m+        $user = User::factory()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/forgot-password', [[39m[0m
  [32m+            'email' => $user->email,[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        Notification::assertSentTo($user, ResetPassword::class, function ($notification) {[39m[0m
  [32m+            $response = $this->get('/reset-password/'.$notification->token);[39m[0m
  [32m+[39m[0m
  [32m+            $response->assertStatus(200);[39m[0m
  [32m+[39m[0m
  [32m+            return true;[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_password_can_be_reset_with_valid_token()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::resetPasswords())) {[39m[0m
  [32m+            return $this->markTestSkipped('Password updates are not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        Notification::fake();[39m[0m
  [32m+[39m[0m
  [32m+        $user = User::factory()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/forgot-password', [[39m[0m
  [32m+            'email' => $user->email,[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        Notification::assertSentTo($user, ResetPassword::class, function ($notification) use ($user) {[39m[0m
  [32m+            $response = $this->post('/reset-password', [[39m[0m
  [32m+                'token' => $notification->token,[39m[0m
  [32m+                'email' => $user->email,[39m[0m
  [32m+                'password' => 'password',[39m[0m
  [32m+                'password_confirmation' => 'password',[39m[0m
  [32m+            ]);[39m[0m
  [32m+[39m[0m
  [32m+            $response->assertSessionHasNoErrors();[39m[0m
  [32m+[39m[0m
  [32m+            return true;[39m[0m
  [32m+        });[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/ProfileInformationTest.php [90m                                                      braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m25 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ProfileInformationTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_profile_information_can_be_updated()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->put('/user/profile-information', [[0m
  [35;1m[39m[0m
  [31m-            'name' => 'Test Name',[0m
  [35;1m[39m[0m
  [31m-            'email' => 'test@example.com',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertEquals('Test Name', $user->fresh()->name);[0m
  [35;1m[39m[0m
  [31m-        $this->assertEquals('test@example.com', $user->fresh()->email);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class ProfileInformationTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_profile_information_can_be_updated()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->put('/user/profile-information', [[39m[0m
  [32m+            'name' => 'Test Name',[39m[0m
  [32m+            'email' => 'test@example.com',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertEquals('Test Name', $user->fresh()->name);[39m[0m
  [32m+        $this->assertEquals('test@example.com', $user->fresh()->email);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/RegistrationTest.php [90m  braces, line_ending, unary_operator_spaces, not_operator_with_successor_space[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m54 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m54 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Providers\RouteServiceProvider;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Fortify\Features;[0m
  [35;1m[39m[0m
  [31m-use Laravel\Jetstream\Jetstream;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class RegistrationTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_registration_screen_can_be_rendered()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::registration())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Registration support is not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->get('/register');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertStatus(200);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_registration_screen_cannot_be_rendered_if_support_is_disabled()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (Features::enabled(Features::registration())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Registration support is enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->get('/register');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertStatus(404);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_new_users_can_register()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        if (! Features::enabled(Features::registration())) {[0m
  [35;1m[39m[0m
  [31m-            return $this->markTestSkipped('Registration support is not enabled.');[0m
  [35;1m[39m[0m
  [31m-        }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/register', [[0m
  [35;1m[39m[0m
  [31m-            'name' => 'Test User',[0m
  [35;1m[39m[0m
  [31m-            'email' => 'test@example.com',[0m
  [35;1m[39m[0m
  [31m-            'password' => 'password',[0m
  [35;1m[39m[0m
  [31m-            'password_confirmation' => 'password',[0m
  [35;1m[39m[0m
  [31m-            'terms' => Jetstream::hasTermsAndPrivacyPolicyFeature(),[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertAuthenticated();[0m
  [35;1m[39m[0m
  [31m-        $response->assertRedirect(RouteServiceProvider::HOME);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Providers\RouteServiceProvider;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Laravel\Fortify\Features;[39m[0m
  [32m+use Laravel\Jetstream\Jetstream;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class RegistrationTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_registration_screen_can_be_rendered()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::registration())) {[39m[0m
  [32m+            return $this->markTestSkipped('Registration support is not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->get('/register');[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertStatus(200);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_registration_screen_cannot_be_rendered_if_support_is_disabled()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (Features::enabled(Features::registration())) {[39m[0m
  [32m+            return $this->markTestSkipped('Registration support is enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->get('/register');[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertStatus(404);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_new_users_can_register()[39m[0m
  [32m+    {[39m[0m
  [32m+        if (! Features::enabled(Features::registration())) {[39m[0m
  [32m+            return $this->markTestSkipped('Registration support is not enabled.');[39m[0m
  [32m+        }[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/register', [[39m[0m
  [32m+            'name' => 'Test User',[39m[0m
  [32m+            'email' => 'test@example.com',[39m[0m
  [32m+            'password' => 'password',[39m[0m
  [32m+            'password_confirmation' => 'password',[39m[0m
  [32m+            'terms' => Jetstream::hasTermsAndPrivacyPolicyFeature(),[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertAuthenticated();[39m[0m
  [32m+        $response->assertRedirect(RouteServiceProvider::HOME);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/RemoveTeamMemberTest.php [90m                                                        braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m40 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m40 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class RemoveTeamMemberTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_team_members_can_be_removed_from_teams()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->currentTeam->users()->attach([0m
  [35;1m[39m[0m
  [31m-            $otherUser = User::factory()->create(), ['role' => 'admin'][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/teams/'.$user->currentTeam->id.'/members/'.$otherUser->id);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(0, $user->currentTeam->fresh()->users);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_only_team_owner_can_remove_team_members()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->withPersonalTeam()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->currentTeam->users()->attach([0m
  [35;1m[39m[0m
  [31m-            $otherUser = User::factory()->create(), ['role' => 'admin'][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($otherUser);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->delete('/teams/'.$user->currentTeam->id.'/members/'.$user->id);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertStatus(403);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class RemoveTeamMemberTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_team_members_can_be_removed_from_teams()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $user->currentTeam->users()->attach([39m[0m
  [32m+            $otherUser = User::factory()->create(), ['role' => 'admin'][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/teams/'.$user->currentTeam->id.'/members/'.$otherUser->id);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(0, $user->currentTeam->fresh()->users);[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_only_team_owner_can_remove_team_members()[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = User::factory()->withPersonalTeam()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $user->currentTeam->users()->attach([39m[0m
  [32m+            $otherUser = User::factory()->create(), ['role' => 'admin'][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($otherUser);[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->delete('/teams/'.$user->currentTeam->id.'/members/'.$user->id);[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertStatus(403);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/TwoFactorAuthenticationSettingsTest.php [90m                                         braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m56 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m56 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class TwoFactorAuthenticationSettingsTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_two_factor_authentication_can_be_enabled()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->withSession(['auth.password_confirmed_at' => time()]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->post('/user/two-factor-authentication');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertNotNull($user->fresh()->two_factor_secret);[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(8, $user->fresh()->recoveryCodes());[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_recovery_codes_can_be_regenerated()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->withSession(['auth.password_confirmed_at' => time()]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->post('/user/two-factor-authentication');[0m
  [35;1m[39m[0m
  [31m-        $this->post('/user/two-factor-recovery-codes');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user = $user->fresh();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->post('/user/two-factor-recovery-codes');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(8, $user->recoveryCodes());[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(8, array_diff($user->recoveryCodes(), $user->fresh()->recoveryCodes()));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_two_factor_authentication_can_be_disabled()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->withSession(['auth.password_confirmed_at' => time()]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->post('/user/two-factor-authentication');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertNotNull($user->fresh()->two_factor_secret);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->delete('/user/two-factor-authentication');[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertNull($user->fresh()->two_factor_secret);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class TwoFactorAuthenticationSettingsTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_two_factor_authentication_can_be_enabled()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $this->withSession(['auth.password_confirmed_at' => time()]);[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->post('/user/two-factor-authentication');[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertNotNull($user->fresh()->two_factor_secret);[39m[0m
  [32m+        $this->assertCount(8, $user->fresh()->recoveryCodes());[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_recovery_codes_can_be_regenerated()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $this->withSession(['auth.password_confirmed_at' => time()]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->post('/user/two-factor-authentication');[39m[0m
  [32m+        $this->post('/user/two-factor-recovery-codes');[39m[0m
  [32m+[39m[0m
  [32m+        $user = $user->fresh();[39m[0m
  [32m+[39m[0m
  [32m+        $this->post('/user/two-factor-recovery-codes');[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(8, $user->recoveryCodes());[39m[0m
  [32m+        $this->assertCount(8, array_diff($user->recoveryCodes(), $user->fresh()->recoveryCodes()));[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_two_factor_authentication_can_be_disabled()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $this->withSession(['auth.password_confirmed_at' => time()]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->post('/user/two-factor-authentication');[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertNotNull($user->fresh()->two_factor_secret);[39m[0m
  [32m+[39m[0m
  [32m+        $this->delete('/user/two-factor-authentication');[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertNull($user->fresh()->two_factor_secret);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/UpdatePasswordTest.php [90m                                                          braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m56 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m56 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Support\Facades\Hash;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class UpdatePasswordTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_password_can_be_updated()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->put('/user/password', [[0m
  [35;1m[39m[0m
  [31m-            'current_password' => 'password',[0m
  [35;1m[39m[0m
  [31m-            'password' => 'new-password',[0m
  [35;1m[39m[0m
  [31m-            'password_confirmation' => 'new-password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue(Hash::check('new-password', $user->fresh()->password));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_current_password_must_be_correct()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->put('/user/password', [[0m
  [35;1m[39m[0m
  [31m-            'current_password' => 'wrong-password',[0m
  [35;1m[39m[0m
  [31m-            'password' => 'new-password',[0m
  [35;1m[39m[0m
  [31m-            'password_confirmation' => 'new-password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertSessionHasErrors();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue(Hash::check('password', $user->fresh()->password));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_new_passwords_must_match()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->put('/user/password', [[0m
  [35;1m[39m[0m
  [31m-            'current_password' => 'password',[0m
  [35;1m[39m[0m
  [31m-            'password' => 'new-password',[0m
  [35;1m[39m[0m
  [31m-            'password_confirmation' => 'wrong-password',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response->assertSessionHasErrors();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue(Hash::check('password', $user->fresh()->password));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Illuminate\Support\Facades\Hash;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class UpdatePasswordTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_password_can_be_updated()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->put('/user/password', [[39m[0m
  [32m+            'current_password' => 'password',[39m[0m
  [32m+            'password' => 'new-password',[39m[0m
  [32m+            'password_confirmation' => 'new-password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertTrue(Hash::check('new-password', $user->fresh()->password));[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_current_password_must_be_correct()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->put('/user/password', [[39m[0m
  [32m+            'current_password' => 'wrong-password',[39m[0m
  [32m+            'password' => 'new-password',[39m[0m
  [32m+            'password_confirmation' => 'new-password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertSessionHasErrors();[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertTrue(Hash::check('password', $user->fresh()->password));[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_new_passwords_must_match()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->put('/user/password', [[39m[0m
  [32m+            'current_password' => 'password',[39m[0m
  [32m+            'password' => 'new-password',[39m[0m
  [32m+            'password_confirmation' => 'wrong-password',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $response->assertSessionHasErrors();[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertTrue(Hash::check('password', $user->fresh()->password));[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/UpdateTeamMemberRoleTest.php [90m                                                    braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m48 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m48 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class UpdateTeamMemberRoleTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_team_member_roles_can_be_updated()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->currentTeam->users()->attach([0m
  [35;1m[39m[0m
  [31m-            $otherUser = User::factory()->create(), ['role' => 'admin'][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->put('/teams/'.$user->currentTeam->id.'/members/'.$otherUser->id, [[0m
  [35;1m[39m[0m
  [31m-            'role' => 'editor',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue($otherUser->fresh()->hasTeamRole([0m
  [35;1m[39m[0m
  [31m-            $user->currentTeam->fresh(), 'editor'[0m
  [35;1m[39m[0m
  [31m-        ));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_only_team_owner_can_update_team_member_roles()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $user = User::factory()->withPersonalTeam()->create();[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $user->currentTeam->users()->attach([0m
  [35;1m[39m[0m
  [31m-            $otherUser = User::factory()->create(), ['role' => 'admin'][0m
  [35;1m[39m[0m
  [31m-        );[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($otherUser);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->put('/teams/'.$user->currentTeam->id.'/members/'.$otherUser->id, [[0m
  [35;1m[39m[0m
  [31m-            'role' => 'editor',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue($otherUser->fresh()->hasTeamRole([0m
  [35;1m[39m[0m
  [31m-            $user->currentTeam->fresh(), 'admin'[0m
  [35;1m[39m[0m
  [31m-        ));[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class UpdateTeamMemberRoleTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_team_member_roles_can_be_updated()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $user->currentTeam->users()->attach([39m[0m
  [32m+            $otherUser = User::factory()->create(), ['role' => 'admin'][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->put('/teams/'.$user->currentTeam->id.'/members/'.$otherUser->id, [[39m[0m
  [32m+            'role' => 'editor',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertTrue($otherUser->fresh()->hasTeamRole([39m[0m
  [32m+            $user->currentTeam->fresh(), 'editor'[39m[0m
  [32m+        ));[39m[0m
  [32m+    }[39m[0m
  [32m+[39m[0m
  [32m+    public function test_only_team_owner_can_update_team_member_roles()[39m[0m
  [32m+    {[39m[0m
  [32m+        $user = User::factory()->withPersonalTeam()->create();[39m[0m
  [32m+[39m[0m
  [32m+        $user->currentTeam->users()->attach([39m[0m
  [32m+            $otherUser = User::factory()->create(), ['role' => 'admin'][39m[0m
  [32m+        );[39m[0m
  [32m+[39m[0m
  [32m+        $this->actingAs($otherUser);[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->put('/teams/'.$user->currentTeam->id.'/members/'.$otherUser->id, [[39m[0m
  [32m+            'role' => 'editor',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertTrue($otherUser->fresh()->hasTeamRole([39m[0m
  [32m+            $user->currentTeam->fresh(), 'admin'[39m[0m
  [32m+        ));[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Feature/UpdateTeamNameTest.php [90m                                                          braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m24 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m24 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Feature;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use App\Models\User;[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-use Tests\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class UpdateTeamNameTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use RefreshDatabase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-    public function test_team_names_can_be_updated()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $response = $this->put('/teams/'.$user->currentTeam->id, [[0m
  [35;1m[39m[0m
  [31m-            'name' => 'Test Team',[0m
  [35;1m[39m[0m
  [31m-        ]);[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-        $this->assertCount(1, $user->fresh()->ownedTeams);[0m
  [35;1m[39m[0m
  [31m-        $this->assertEquals('Test Team', $user->currentTeam->fresh()->name);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Feature;[39m[0m
  [32m+[39m[0m
  [32m+use App\Models\User;[39m[0m
  [32m+use Illuminate\Foundation\Testing\RefreshDatabase;[39m[0m
  [32m+use Tests\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class UpdateTeamNameTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use RefreshDatabase;[39m[0m
  [32m+[39m[0m
  [32m+    public function test_team_names_can_be_updated()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->actingAs($user = User::factory()->withPersonalTeam()->create());[39m[0m
  [32m+[39m[0m
  [32m+        $response = $this->put('/teams/'.$user->currentTeam->id, [[39m[0m
  [32m+            'name' => 'Test Team',[39m[0m
  [32m+        ]);[39m[0m
  [32m+[39m[0m
  [32m+        $this->assertCount(1, $user->fresh()->ownedTeams);[39m[0m
  [32m+        $this->assertEquals('Test Team', $user->currentTeam->fresh()->name);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/TestCase.php [90m                                                                            braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m10 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m10 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use Illuminate\Foundation\Testing\TestCase as BaseTestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-abstract class TestCase extends BaseTestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    use CreatesApplication;[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests;[39m[0m
  [32m+[39m[0m
  [32m+use Illuminate\Foundation\Testing\TestCase as BaseTestCase;[39m[0m
  [32m+[39m[0m
  [32m+abstract class TestCase extends BaseTestCase[39m[0m
  [32m+{[39m[0m
  [32m+    use CreatesApplication;[39m[0m
  [32m+}[39m[0m
  
  [32;1mâœ“[39;22m tests/Unit/ExampleTest.php [90m                                                                    braces, line_ending[39m  
  [35;1m@@ -[0m[39;1m1[0m[35;1m,[0m[39;1m18 [0m[35;1m+[0m[39;1m1[0m[35;1m,[0m[39;1m18 [0m[35;1m@@[0m
  [31m-<?php[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-namespace Tests\Unit;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-use PHPUnit\Framework\TestCase;[0m
  [35;1m[39m[0m
  [31m-[0m
  [35;1m[39m[0m
  [31m-class ExampleTest extends TestCase[0m
  [35;1m[39m[0m
  [31m-{[0m
  [35;1m[39m[0m
  [31m-    /**[0m
  [35;1m[39m[0m
  [31m-     * A basic test example.[0m
  [35;1m[39m[0m
  [31m-     *[0m
  [35;1m[39m[0m
  [31m-     * @return void[0m
  [35;1m[39m[0m
  [31m-     */[0m
  [35;1m[39m[0m
  [31m-    public function test_that_true_is_true()[0m
  [35;1m[39m[0m
  [31m-    {[0m
  [35;1m[39m[0m
  [31m-        $this->assertTrue(true);[0m
  [35;1m[39m[0m
  [31m-    }[0m
  [35;1m[39m[0m
  [31m-}[0m
  [35;1m[39m[0m
  [32m+<?php[39m[0m
  [32m+[39m[0m
  [32m+namespace Tests\Unit;[39m[0m
  [32m+[39m[0m
  [32m+use PHPUnit\Framework\TestCase;[39m[0m
  [32m+[39m[0m
  [32m+class ExampleTest extends TestCase[39m[0m
  [32m+{[39m[0m
  [32m+    /**[39m[0m
  [32m+     * A basic test example.[39m[0m
  [32m+     *[39m[0m
  [32m+     * @return void[39m[0m
  [32m+     */[39m[0m
  [32m+    public function test_that_true_is_true()[39m[0m
  [32m+    {[39m[0m
  [32m+        $this->assertTrue(true);[39m[0m
  [32m+    }[39m[0m
  [32m+}[39m[0m
  


Script done on 2022-10-03 13:31:22+02:00 [COMMAND_EXIT_CODE="0"]
